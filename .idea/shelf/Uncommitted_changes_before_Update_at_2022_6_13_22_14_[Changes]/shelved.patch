Index: src/main/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import javafx.animation.FadeTransition;\r\nimport javafx.application.Application;\r\nimport javafx.event.EventHandler;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.input.KeyCode;\r\nimport javafx.scene.input.KeyEvent;\r\nimport javafx.scene.layout.AnchorPane;\r\nimport javafx.scene.layout.BorderPane;\r\nimport javafx.scene.paint.Color;\r\nimport javafx.scene.shape.Rectangle;\r\nimport javafx.scene.text.Font;\r\nimport javafx.scene.text.FontPosture;\r\nimport javafx.scene.text.FontWeight;\r\nimport javafx.scene.text.Text;\r\nimport javafx.stage.Stage;\r\nimport javafx.util.Duration;\r\n\r\nimport java.io.IOException;\r\nimport java.nio.charset.StandardCharsets;\r\nimport java.text.DecimalFormat;\r\nimport java.util.*;\r\n\r\npublic class Main extends Application {\r\n\r\n    /**\r\n     * 游戏的主窗口\r\n     */\r\n    private static Stage mainWindow;\r\n\r\n    /**\r\n     * 主游戏体的屏幕场景\r\n     */\r\n    private static Scene mainMenuScene;\r\n\r\n    /**\r\n     * 主菜单布局\r\n     */\r\n    private Parent mainMenuLayout;\r\n\r\n    /**\r\n     * 得到主菜单布局\r\n     *\r\n     * @return {@link Parent}\r\n     */\r\n    public Parent getMainMenuLayout() {\r\n        return mainMenuLayout;\r\n    }\r\n\r\n    /**\r\n     * 得到主菜单场景\r\n     *\r\n     * @return {@link Scene}\r\n     */\r\n    public static Scene getMainMenuScene() {\r\n        return mainMenuScene;\r\n    }\r\n\r\n    /**\r\n     * 得到主窗口\r\n     *\r\n     * @return {@link Stage}\r\n     */\r\n    public static Stage getMainWindow() {\r\n        return mainWindow;\r\n    }\r\n\r\n    /**\r\n     * 设置主菜单布局\r\n     *\r\n     * @param mainMenuLayout 主菜单布局\r\n     */\r\n    public void setMainMenuLayout(Parent mainMenuLayout) {\r\n        this.mainMenuLayout = mainMenuLayout;\r\n    }\r\n\r\n    /**\r\n     * 主菜单设置场景\r\n     *\r\n     * @param mainMenuScene 主菜单场景\r\n     */\r\n    public static void setMainMenuScene(Scene mainMenuScene) {\r\n        Main.mainMenuScene = mainMenuScene;\r\n    }\r\n\r\n    public static void setMainWindow(Stage mainWindow) {\r\n        Main.mainWindow = mainWindow;\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        launch(args);\r\n    }\r\n\r\n    @Override\r\n    public void start(Stage menuStage) throws Exception {\r\n        menuStage.setTitle(\"WORDLE-EX\");\r\n        menuStage.setResizable(false);\r\n        menuStage.setAlwaysOnTop(true);\r\n\r\n        mainWindow = menuStage;\r\n        mainMenuLayout = FXMLLoader.load(getClass().getResource(\"resources/menuScene.fxml\"));\r\n        mainMenuScene = new Scene(mainMenuLayout, 1280, 800);\r\n\r\n        menuStage.setScene(mainMenuScene);\r\n        menuStage.show();\r\n    }\r\n\r\n    public static void startNormalMode() throws Exception {\r\n        WordList.PossibleWord = WordList.ReadWord(\"src/Data/possible_words.txt\");\r\n        WordList.LegalWord = WordList.ReadWord(\"src/Data/allowed_words.txt\");\r\n        WordList.AnswerWord = WordList.ReadWord(\"src/Data/possible_words.txt\");\r\n        Word testword = new Word();\r\n        ArrayList<String> list = new ArrayList<>(WordList.AnswerWord);\r\n        int ansIdx = new Random().nextInt(list.size());\r\n        String ans = list.get(ansIdx);\r\n\r\n        System.out.println(ans);\r\n\r\n        AniLetter[] aniLetters = new AniLetter[5];\r\n\r\n        AnchorPane pane = new AnchorPane();\r\n\r\n\r\n        Button button = new Button(\"测试\");\r\n        button.setOnKeyPressed(new EventHandler<KeyEvent>() {\r\n            private int index = 0;\r\n            private int line = 0;\r\n\r\n            @Override\r\n            public void handle(KeyEvent keyEvent) {\r\n                KeyCode kCode = keyEvent.getCode();\r\n                System.out.println(kCode.getName());\r\n                char toAddLetter;\r\n                try {\r\n                    if (kCode.isLetterKey() && index < 5) {\r\n                        toAddLetter = (char) (kCode.getCode() + 32);\r\n                        testword.AddLetter(toAddLetter);\r\n                        aniLetters[index] = new AniLetter(keyEvent.getText().toUpperCase(Locale.ROOT));\r\n                        pane.getChildren().add(aniLetters[index].ft.getNode());\r\n                        AnchorPane.setLeftAnchor(aniLetters[index].ft.getNode(), 500.0 + index * 60.0);\r\n                        AnchorPane.setTopAnchor(aniLetters[index].ft.getNode(), 120.0 + line * 60.);\r\n                        aniLetters[index].ft.play();\r\n                        index += 1;\r\n                        System.out.println(testword.WordContent);\r\n                    }\r\n                    if (kCode == KeyCode.BACK_SPACE && index >= 1) {\r\n                        testword.RemoveLetter();\r\n                        pane.getChildren().remove(aniLetters[index - 1].ft.getNode());\r\n                        index -= 1;\r\n                    }\r\n                    if (kCode == KeyCode.ENTER) {\r\n                        if (testword.letters.size() == 5) {\r\n                            try {\r\n                                int status;\r\n                                if (Word.CheckInList(testword.WordContent.toString())) {\r\n                                    index = 0;\r\n                                    line++;\r\n                                    testword.CheckAns(ans);\r\n                                    System.out.println(testword.ShowColor());\r\n                                    for (int i = 0; i < 5; i++) {\r\n                                        if (testword.letters.get(i).letterColor == LetterColor.Green) {\r\n                                            aniLetters[i].text.setFill(Color.GREEN);\r\n                                        }\r\n                                        if (testword.letters.get(i).letterColor == LetterColor.Yellow) {\r\n                                            aniLetters[i].text.setFill(Color.YELLOW);\r\n                                        }\r\n                                        if (testword.letters.get(i).letterColor == LetterColor.Grey) {\r\n                                            aniLetters[i].text.setFill(Color.BLACK);\r\n                                        }\r\n                                    }\r\n                                    status = testword.getState();\r\n                                    if (status == 0) {\r\n                                        System.out.println(\"you win\");\r\n                                    }\r\n                                    if (line == 6) {\r\n                                        System.out.println(\"you lose\");\r\n                                    }\r\n                                    for (int i = 0; i < 5; i++) {\r\n                                        testword.RemoveLetter();\r\n                                    }\r\n\r\n                                } else {\r\n                                    System.out.println(\"Not in the list\");\r\n                                }\r\n\r\n                            } catch (Exception e) {\r\n                                //throw new RuntimeException(e);\r\n                                System.out.println(\"Not in the list\");\r\n                                for (int i = 0; i < 5; i++) {\r\n                                    testword.RemoveLetter();\r\n                                }\r\n                            }\r\n                        } else {\r\n                            System.out.println(\"not enough letter!\");\r\n                        }\r\n                    }\r\n\r\n                } catch (Exception e) {\r\n                    throw new RuntimeException(e);\r\n                }\r\n\r\n\r\n            }\r\n        });\r\n        pane.getChildren().add(button);\r\n\r\n\r\n        Parent mainScene = FXMLLoader.load(Objects.requireNonNull(Main.class.getResource(\"resources/mainScene.fxml\")));\r\n        pane.getChildren().add(mainScene);\r\n\r\n\r\n        Scene scene = new Scene(pane, 1280, 800);\r\n\r\n        mainWindow.setScene(scene);\r\n        mainWindow.setTitle(\"WORDLE-EX\");\r\n        mainWindow.show();\r\n    }\r\n\r\n    public static void startAdvanceMode() throws Exception {\r\n        Button button = new Button(\"测试\");\r\n        AnchorPane pane = new AnchorPane();\r\n        pane.getChildren().add(button);\r\n        Parent mainScene = FXMLLoader.load(Objects.requireNonNull(Main.class.getResource(\"resources/advanceScene.fxml\")));\r\n        pane.getChildren().add(mainScene);\r\n\r\n        Scene scene = new Scene(pane, 1280, 800);\r\n\r\n        mainWindow.setScene(scene);\r\n        mainWindow.setTitle(\"WORDLE-EX\");\r\n        mainWindow.show();\r\n\r\n\r\n        WordList.AnswerWord = WordList.ReadWord(\"src/Data/possible_words.txt\");\r\n        WordList.PossibleWord = WordList.ReadWord(\"src/Data/allowed_words.txt\");\r\n        WordList.LegalWord = WordList.ReadWord(\"src/Data/allowed_words.txt\");\r\n        WordList.WordPrior = WordList.ReadPrior(\"src/Data/freq_map.json\");\r\n        Word testword = new Word();\r\n        ArrayList<String> list = new ArrayList<>(WordList.AnswerWord);\r\n        int ansIdx = new Random().nextInt(list.size());\r\n        String ans = list.get(ansIdx);\r\n\r\n        GuessAlgorithm.eNow = GuessAlgorithm.calENow(WordList.PossibleWord);\r\n        GuessAlgorithm.possibilities = WordList.PossibleWord.size();\r\n        GuessAlgorithm.getShowList(WordList.PossibleWord);\r\n\r\n        GuessAlgorithm.getWordScore(WordList.LegalWord, WordList.PossibleWord);\r\n\r\n        AniString hint = new AniString(\"TOP Picks    E[Info]    p(word)\", Color.WHITE);\r\n        pane.getChildren().add(hint.ft.getNode());\r\n        AnchorPane.setLeftAnchor(hint.ft.getNode(), 900.0);\r\n        AnchorPane.setTopAnchor(hint.ft.getNode(), 120.0);\r\n        hint.ft.play();\r\n\r\n        AniString[] recommend = new AniString[5];\r\n        AniString[] recommendInfo = new AniString[5];\r\n        AniString[] recommendPossibility = new AniString[5];\r\n\r\n        DecimalFormat df2 = new DecimalFormat(\"#.##\");\r\n        DecimalFormat df6 = new DecimalFormat(\"#.#####\");\r\n\r\n        for(int i=0; i<5&&i<GuessAlgorithm.wsList.size(); i++){\r\n            recommend[i] = new AniString(GuessAlgorithm.wsList.get(i).word, Color.WHITE);\r\n            pane.getChildren().add(recommend[i].ft.getNode());\r\n            AnchorPane.setLeftAnchor(recommend[i].ft.getNode(), 900.0);\r\n            AnchorPane.setTopAnchor(recommend[i].ft.getNode(), 180.0 + i * 60.0);\r\n            recommend[i].ft.play();\r\n            recommendInfo[i] = new AniString(df2.format(GuessAlgorithm.wsList.get(i).entropy), Color.WHITE);\r\n            pane.getChildren().add(recommendInfo[i].ft.getNode());\r\n            AnchorPane.setLeftAnchor(recommendInfo[i].ft.getNode(), 900.0 + 150.0);\r\n            AnchorPane.setTopAnchor(recommendInfo[i].ft.getNode(), 180.0 + i * 60.0);\r\n            recommendInfo[i].ft.play();\r\n            recommendPossibility[i] = new AniString(df6.format(GuessAlgorithm.wsList.get(i).possible), Color.WHITE);\r\n            pane.getChildren().add(recommendPossibility[i].ft.getNode());\r\n            AnchorPane.setLeftAnchor(recommendPossibility[i].ft.getNode(), 900.0 + 240.0);\r\n            AnchorPane.setTopAnchor(recommendPossibility[i].ft.getNode(), 180.0 + i * 60.0);\r\n            recommendPossibility[i].ft.play();\r\n        }\r\n\r\n        AniLetter[] aniLetters = new AniLetter[5];\r\n        ArrayList<AniString> aniStrings = new ArrayList<>();\r\n\r\n\r\n        aniStrings.add(new AniString(\"Possibilities:\", Color.WHITE));\r\n        pane.getChildren().add(aniStrings.get(aniStrings.size() - 1).ft.getNode());\r\n        AnchorPane.setLeftAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 150.0);\r\n        AnchorPane.setTopAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 125.0);\r\n        aniStrings.get(aniStrings.size() - 1).ft.play();\r\n\r\n        aniStrings.add(new AniString(\"\" + GuessAlgorithm.possibilities, Color.WHITE));\r\n        pane.getChildren().add(aniStrings.get(aniStrings.size() - 1).ft.getNode());\r\n        AnchorPane.setLeftAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 150.0  + aniStrings.size() * 75.0);\r\n        AnchorPane.setTopAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 125.0);\r\n        aniStrings.get(aniStrings.size() - 1).ft.play();\r\n\r\n        aniStrings.add(new AniString(\"/ E:\", Color.SKYBLUE));\r\n        pane.getChildren().add(aniStrings.get(aniStrings.size() - 1).ft.getNode());\r\n        AnchorPane.setLeftAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 150.0  + aniStrings.size() * 75.0);\r\n        AnchorPane.setTopAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 125.0);\r\n        aniStrings.get(aniStrings.size() - 1).ft.play();\r\n\r\n        // 保留小数点后两位\r\n\r\n        aniStrings.add(new AniString(\"\" + df2.format(GuessAlgorithm.eNow), Color.SKYBLUE));\r\n        pane.getChildren().add(aniStrings.get(aniStrings.size() - 1).ft.getNode());\r\n        AnchorPane.setLeftAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 120  + aniStrings.size() * 75.0);\r\n        AnchorPane.setTopAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 125.0);\r\n        aniStrings.get(aniStrings.size() - 1).ft.play();\r\n\r\n        aniStrings.clear();\r\n\r\n        button.setOnKeyPressed(new EventHandler<KeyEvent>() {\r\n            private int index = 0;\r\n            private int line = 0;\r\n\r\n            private int leftLine = 0;\r\n            private int rightLine = 0;\r\n\r\n            @Override\r\n            public void handle(KeyEvent keyEvent) {\r\n                KeyCode kCode = keyEvent.getCode();\r\n                System.out.println(kCode.getName());\r\n                char toAddLetter;\r\n                try {\r\n                    if (kCode.isLetterKey() && index < 5) {\r\n                        toAddLetter = (char) (kCode.getCode() + 32);\r\n                        testword.AddLetter(toAddLetter);\r\n                        aniLetters[index] = new AniLetter(keyEvent.getText().toUpperCase(Locale.ROOT));\r\n                        pane.getChildren().add(aniLetters[index].ft.getNode());\r\n                        AnchorPane.setLeftAnchor(aniLetters[index].ft.getNode(), 500.0 + index * 60.0);\r\n                        AnchorPane.setTopAnchor(aniLetters[index].ft.getNode(), 120.0 + line * 60.0);\r\n                        aniLetters[index].ft.play();\r\n                        index += 1;\r\n                        System.out.println(testword.WordContent);\r\n                    }\r\n                    if (kCode == KeyCode.BACK_SPACE && index >= 1) {\r\n                        testword.RemoveLetter();\r\n                        pane.getChildren().remove(aniLetters[index - 1].ft.getNode());\r\n                        index -= 1;\r\n                    }\r\n                    if (kCode == KeyCode.ENTER) {\r\n                        if (testword.letters.size() == 5) {\r\n                            try {\r\n                                int status;\r\n                                if (Word.CheckInList(testword.WordContent.toString())) {\r\n                                    index = 0;\r\n                                    line++;\r\n                                    testword.CheckAns(ans);\r\n                                    System.out.println(testword.ShowColor());\r\n                                    for (int i = 0; i < 5; i++) {\r\n                                        if (testword.letters.get(i).letterColor == LetterColor.Green) {\r\n                                            aniLetters[i].text.setFill(Color.GREEN);\r\n                                        }\r\n                                        if (testword.letters.get(i).letterColor == LetterColor.Yellow) {\r\n                                            aniLetters[i].text.setFill(Color.YELLOW);\r\n                                        }\r\n                                        if (testword.letters.get(i).letterColor == LetterColor.Grey) {\r\n                                            aniLetters[i].text.setFill(Color.BLACK);\r\n                                        }\r\n                                    }\r\n                                    status = testword.getState();\r\n                                    if (status == 0) {\r\n                                        System.out.println(\"you win\");\r\n                                    }\r\n                                    if (line == 6) {\r\n                                        System.out.println(\"you lose\");\r\n                                    }\r\n                                    WordList.PossibleWord=GuessAlgorithm.updatePossibleWord(WordList.PossibleWord, testword.getState(), testword.WordContent.toString());\r\n                                    GuessAlgorithm.possibilities = WordList.PossibleWord.size();\r\n                                    double newE = GuessAlgorithm.calENow(WordList.PossibleWord);\r\n                                    double info = GuessAlgorithm.eNow - newE;\r\n\r\n                                    AniString infoString = new AniString(df2.format(info) + \"bits\", Color.WHITE);\r\n                                    pane.getChildren().add(infoString.ft.getNode());\r\n                                    AnchorPane.setLeftAnchor(infoString.ft.getNode(), 800.0);\r\n                                    AnchorPane.setTopAnchor(infoString.ft.getNode(), 125.0 + leftLine * 60.0);\r\n                                    infoString.ft.play();\r\n\r\n                                    GuessAlgorithm.eNow = newE ;\r\n                                    leftLine++;\r\n                                    aniStrings.add(new AniString(\"Possibilities:\", Color.WHITE));\r\n                                    pane.getChildren().add(aniStrings.get(aniStrings.size() - 1).ft.getNode());\r\n                                    AnchorPane.setLeftAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 150.0);\r\n                                    AnchorPane.setTopAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 125.0 + leftLine * 60.0);\r\n                                    aniStrings.get(aniStrings.size() - 1).ft.play();\r\n\r\n                                    aniStrings.add(new AniString(\"\" + GuessAlgorithm.possibilities , Color.WHITE));\r\n                                    pane.getChildren().add(aniStrings.get(aniStrings.size() - 1).ft.getNode());\r\n                                    AnchorPane.setLeftAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 150.0  + aniStrings.size() * 75.0);\r\n                                    AnchorPane.setTopAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 125.0 + leftLine * 60.0);\r\n                                    aniStrings.get(aniStrings.size() - 1).ft.play();\r\n\r\n                                    aniStrings.add(new AniString(\"/ E:\", Color.SKYBLUE));\r\n                                    pane.getChildren().add(aniStrings.get(aniStrings.size() - 1).ft.getNode());\r\n                                    AnchorPane.setLeftAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 150.0  + aniStrings.size() * 75.0);\r\n                                    AnchorPane.setTopAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 125.0 + leftLine * 60.0);\r\n                                    aniStrings.get(aniStrings.size() - 1).ft.play();\r\n\r\n                                    // 保留小数点后两位\r\n                                    DecimalFormat df = new DecimalFormat(\"#.00\");\r\n                                    aniStrings.add(new AniString(\"\" + df.format(GuessAlgorithm.eNow), Color.SKYBLUE));\r\n                                    pane.getChildren().add(aniStrings.get(aniStrings.size() - 1).ft.getNode());\r\n                                    AnchorPane.setLeftAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 120  + aniStrings.size() * 75.0);\r\n                                    AnchorPane.setTopAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 125.0 + leftLine * 60.0);\r\n                                    aniStrings.get(aniStrings.size() - 1).ft.play();\r\n\r\n                                    aniStrings.clear();\r\n\r\n                                    GuessAlgorithm.getWordScore(WordList.LegalWord, WordList.PossibleWord);\r\n                                    for(int i=0; i<5&&i<GuessAlgorithm.wsList.size(); i++){\r\n                                        System.out.println(GuessAlgorithm.wsList.get(i).word+\" \"+GuessAlgorithm.wsList.get(i).entropy + \" \" + GuessAlgorithm.wsList.get(i).possible + \" \" + GuessAlgorithm.wsList.get(i).score);\r\n                                    }\r\n\r\n\r\n                                    for (int i = 0; i < 5; i++) {\r\n                                        testword.RemoveLetter();\r\n                                        pane.getChildren().remove(recommend[i].ft.getNode());\r\n                                        pane.getChildren().remove(recommendInfo[i].ft.getNode());\r\n                                        pane.getChildren().remove(recommendPossibility[i].ft.getNode());\r\n                                        AniString fadeRecommend = new AniString(recommend[i].string.getText(), Color.WHITE);\r\n                                        pane.getChildren().add(fadeRecommend.ft2.getNode());\r\n                                        AnchorPane.setLeftAnchor(fadeRecommend.ft2.getNode(), 900.0);\r\n                                        AnchorPane.setTopAnchor(fadeRecommend.ft2.getNode(), 180 + i * 60.0);\r\n                                        fadeRecommend.ft2.play();\r\n                                        AniString fadeRecommendInfo = new AniString(recommendInfo[i].string.getText(), Color.WHITE);\r\n                                        pane.getChildren().add(fadeRecommendInfo.ft2.getNode());\r\n                                        AnchorPane.setLeftAnchor(fadeRecommendInfo.ft2.getNode(), 900.0 + 150);\r\n                                        AnchorPane.setTopAnchor(fadeRecommendInfo.ft2.getNode(), 180 + i * 60.0);\r\n                                        fadeRecommendInfo.ft2.play();\r\n                                        AniString fadeRecommendPossibility = new AniString(recommendPossibility[i].string.getText(), Color.WHITE);\r\n                                        pane.getChildren().add(fadeRecommendPossibility.ft2.getNode());\r\n                                        AnchorPane.setLeftAnchor(fadeRecommendPossibility.ft2.getNode(), 900.0 + 240);\r\n                                        AnchorPane.setTopAnchor(fadeRecommendPossibility.ft2.getNode(), 180 + i * 60.0);\r\n                                        fadeRecommendPossibility.ft2.play();\r\n                                    }\r\n\r\n                                    for(int i=0; i<5&&i<GuessAlgorithm.wsList.size(); i++){\r\n                                        recommend[i] = new AniString(GuessAlgorithm.wsList.get(i).word, Color.WHITE);\r\n                                        pane.getChildren().add(recommend[i].ft.getNode());\r\n                                        AnchorPane.setLeftAnchor(recommend[i].ft.getNode(), 900.0);\r\n                                        AnchorPane.setTopAnchor(recommend[i].ft.getNode(), 180.0 + i * 60.0);\r\n                                        recommend[i].ft.play();\r\n                                        recommendInfo[i] = new AniString(df2.format(GuessAlgorithm.wsList.get(i).entropy), Color.WHITE);\r\n                                        pane.getChildren().add(recommendInfo[i].ft.getNode());\r\n                                        AnchorPane.setLeftAnchor(recommendInfo[i].ft.getNode(), 900.0 + 150.0);\r\n                                        AnchorPane.setTopAnchor(recommendInfo[i].ft.getNode(), 180.0 + i * 60.0);\r\n                                        recommendInfo[i].ft.play();\r\n                                        recommendPossibility[i] = new AniString(df6.format(GuessAlgorithm.wsList.get(i).possible), Color.WHITE);\r\n                                        pane.getChildren().add(recommendPossibility[i].ft.getNode());\r\n                                        AnchorPane.setLeftAnchor(recommendPossibility[i].ft.getNode(), 900.0 + 240.0);\r\n                                        AnchorPane.setTopAnchor(recommendPossibility[i].ft.getNode(), 180.0 + i * 60.0);\r\n                                        recommendPossibility[i].ft.play();\r\n                                    }\r\n\r\n                                } else {\r\n                                    System.out.println(\"Not in the list\");\r\n                                }\r\n\r\n                            } catch (Exception e) {\r\n                                //throw new RuntimeException(e);\r\n                                System.out.println(\"Not in the list\");\r\n                                for (int i = 0; i < 5; i++) {\r\n                                    testword.RemoveLetter();\r\n                                }\r\n                            }\r\n                        } else {\r\n                            System.out.println(\"not enough letter!\");\r\n                        }\r\n                    }\r\n\r\n                } catch (Exception e) {\r\n                    throw new RuntimeException(e);\r\n                }\r\n\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    public static void startAIShowMode() throws Exception {\r\n        System.out.println(\"start aishow mode\");\r\n        Button button = new Button(\"测试\");\r\n        AnchorPane pane = new AnchorPane();\r\n        pane.getChildren().add(button);\r\n        Parent mainScene = FXMLLoader.load(Objects.requireNonNull(Main.class.getResource(\"resources/advanceScene.fxml\")));\r\n        pane.getChildren().add(mainScene);\r\n\r\n        Scene scene = new Scene(pane, 1280, 800);\r\n\r\n        mainWindow.setScene(scene);\r\n        mainWindow.setTitle(\"WORDLE-EX\");\r\n        mainWindow.show();\r\n\r\n\r\n        WordList.AnswerWord = WordList.ReadWord(\"src/Data/possible_words.txt\");\r\n        WordList.PossibleWord = WordList.ReadWord(\"src/Data/allowed_words.txt\");\r\n        WordList.LegalWord = WordList.ReadWord(\"src/Data/allowed_words.txt\");\r\n        WordList.WordPrior = WordList.ReadPrior(\"src/Data/freq_map.json\");\r\n        ArrayList<String> list = new ArrayList<>(WordList.AnswerWord);\r\n        int ansIdx = new Random().nextInt(list.size());\r\n        String ans = list.get(ansIdx);\r\n\r\n        GuessAlgorithm.eNow = GuessAlgorithm.calENow(WordList.PossibleWord);\r\n        GuessAlgorithm.possibilities = WordList.PossibleWord.size();\r\n        GuessAlgorithm.getShowList(WordList.PossibleWord);\r\n\r\n        GuessAlgorithm.getWordScore(WordList.LegalWord, WordList.PossibleWord);\r\n        System.out.println(GuessAlgorithm.wsList.get(0).word);\r\n        Word testword = new Word(GuessAlgorithm.wsList.get(0).word);\r\n        System.out.println(\"Guess Word:\" + testword.WordContent);\r\n\r\n\r\n        AniString hint = new AniString(\"TOP Picks    E[Info]    p(word)\", Color.WHITE);\r\n        pane.getChildren().add(hint.ft.getNode());\r\n        AnchorPane.setLeftAnchor(hint.ft.getNode(), 900.0);\r\n        AnchorPane.setTopAnchor(hint.ft.getNode(), 120.0);\r\n        hint.ft.play();\r\n\r\n        AniString[] recommend = new AniString[5];\r\n        AniString[] recommendInfo = new AniString[5];\r\n        AniString[] recommendPossibility = new AniString[5];\r\n\r\n        DecimalFormat df2 = new DecimalFormat(\"#.##\");\r\n        DecimalFormat df6 = new DecimalFormat(\"#.#####\");\r\n\r\n        for(int i=0; i<5&&i<GuessAlgorithm.wsList.size(); i++){\r\n            recommend[i] = new AniString(GuessAlgorithm.wsList.get(i).word, Color.WHITE);\r\n            pane.getChildren().add(recommend[i].ft.getNode());\r\n            AnchorPane.setLeftAnchor(recommend[i].ft.getNode(), 900.0);\r\n            AnchorPane.setTopAnchor(recommend[i].ft.getNode(), 180.0 + i * 60.0);\r\n            recommend[i].ft.play();\r\n            recommendInfo[i] = new AniString(df2.format(GuessAlgorithm.wsList.get(i).entropy), Color.WHITE);\r\n            pane.getChildren().add(recommendInfo[i].ft.getNode());\r\n            AnchorPane.setLeftAnchor(recommendInfo[i].ft.getNode(), 900.0 + 150.0);\r\n            AnchorPane.setTopAnchor(recommendInfo[i].ft.getNode(), 180.0 + i * 60.0);\r\n            recommendInfo[i].ft.play();\r\n            recommendPossibility[i] = new AniString(df6.format(GuessAlgorithm.wsList.get(i).possible), Color.WHITE);\r\n            pane.getChildren().add(recommendPossibility[i].ft.getNode());\r\n            AnchorPane.setLeftAnchor(recommendPossibility[i].ft.getNode(), 900.0 + 240.0);\r\n            AnchorPane.setTopAnchor(recommendPossibility[i].ft.getNode(), 180.0 + i * 60.0);\r\n            recommendPossibility[i].ft.play();\r\n        }\r\n\r\n        AniLetter[] aniLetters = new AniLetter[5];\r\n        ArrayList<AniString> aniStrings = new ArrayList<>();\r\n\r\n        AniString tipString = new AniString(\"The Answer:\", Color.WHITE);\r\n        pane.getChildren().add(tipString.ft.getNode());\r\n        AnchorPane.setLeftAnchor(tipString.ft.getNode(), 50.0);\r\n        AnchorPane.setTopAnchor(tipString.ft.getNode(), 600.0);\r\n        tipString.ft.play();\r\n\r\n        AniString ansString = new AniString(ans, Color.GREEN);\r\n        pane.getChildren().add(ansString.ft.getNode());\r\n        AnchorPane.setLeftAnchor(ansString.ft.getNode(), 50.0);\r\n        AnchorPane.setTopAnchor(ansString.ft.getNode(), 650.0);\r\n        ansString.ft.play();\r\n\r\n        AniString tipString2 = new AniString(\"Press Enter To Show Next Step\", Color.GREY);\r\n        pane.getChildren().add(tipString2.ft.getNode());\r\n        AnchorPane.setLeftAnchor(tipString2.ft.getNode(), 50.0);\r\n        AnchorPane.setTopAnchor(tipString2.ft.getNode(), 700.0);\r\n        tipString2.ft.play();\r\n\r\n        aniStrings.add(new AniString(\"Possibilities:\", Color.WHITE));\r\n        pane.getChildren().add(aniStrings.get(aniStrings.size() - 1).ft.getNode());\r\n        AnchorPane.setLeftAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 150.0);\r\n        AnchorPane.setTopAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 125.0);\r\n        aniStrings.get(aniStrings.size() - 1).ft.play();\r\n\r\n        aniStrings.add(new AniString(\"\" + GuessAlgorithm.possibilities , Color.WHITE));\r\n        pane.getChildren().add(aniStrings.get(aniStrings.size() - 1).ft.getNode());\r\n        AnchorPane.setLeftAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 150.0  + aniStrings.size() * 75.0);\r\n        AnchorPane.setTopAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 125.0);\r\n        aniStrings.get(aniStrings.size() - 1).ft.play();\r\n\r\n        aniStrings.add(new AniString(\"/ E:\", Color.SKYBLUE));\r\n        pane.getChildren().add(aniStrings.get(aniStrings.size() - 1).ft.getNode());\r\n        AnchorPane.setLeftAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 150.0  + aniStrings.size() * 75.0);\r\n        AnchorPane.setTopAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 125.0);\r\n        aniStrings.get(aniStrings.size() - 1).ft.play();\r\n\r\n        // 保留小数点后两位\r\n\r\n        aniStrings.add(new AniString(\"\" + df2.format(GuessAlgorithm.eNow), Color.SKYBLUE));\r\n        pane.getChildren().add(aniStrings.get(aniStrings.size() - 1).ft.getNode());\r\n        AnchorPane.setLeftAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 120  + aniStrings.size() * 75.0);\r\n        AnchorPane.setTopAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 125.0);\r\n        aniStrings.get(aniStrings.size() - 1).ft.play();\r\n\r\n        aniStrings.clear();\r\n\r\n        ArrayList<AniString> infoWord = new ArrayList<>();\r\n        for(int i=0; i<5; i++){\r\n            infoWord.add(new AniString(GuessAlgorithm.PossibleWordChance.get(i).word, Color.WHITE));\r\n        }\r\n        for(int i=0; i<5; i++){\r\n            infoWord.add(new AniString(GuessAlgorithm.PossibleWordChance.get(GuessAlgorithm.PossibleWordChance.size()-6+i).word, Color.WHITE));\r\n        }\r\n        for (int i=0; i<infoWord.size(); i++){\r\n            pane.getChildren().add(infoWord.get(i).ft.getNode());\r\n            AnchorPane.setLeftAnchor(infoWord.get(i).ft.getNode(), 450.0 + (i/5) * 400.0);\r\n            AnchorPane.setTopAnchor(infoWord.get(i).ft.getNode(), 500 + (i%5) * 60.0);\r\n            infoWord.get(i).ft.play();\r\n        }\r\n        ArrayList<AniRectangular> infoChance = new ArrayList<>();\r\n        for(int i=0; i<5; i++){\r\n            infoChance.add(new AniRectangular(300*GuessAlgorithm.PossibleWordChance.get(i).fill, 30.0));\r\n          //  System.out.println(GuessAlgorithm.PossibleWordChance.get(i).fill);\r\n        }\r\n        for(int i=0; i<5; i++){\r\n            infoChance.add(new AniRectangular( 300*GuessAlgorithm.PossibleWordChance.get(GuessAlgorithm.PossibleWordChance.size()-6+i).fill, 30.0));\r\n           // System.out.println(GuessAlgorithm.PossibleWordChance.get(GuessAlgorithm.PossibleWordChance.size()-6+i).fill);\r\n        }\r\n        for (int i=0; i<infoChance.size(); i++){\r\n            pane.getChildren().add(infoChance.get(i).ft.getNode());\r\n            AnchorPane.setLeftAnchor(infoChance.get(i).ft.getNode(), 450 + 75.0 + (i/5) * 400.0);\r\n            AnchorPane.setTopAnchor(infoChance.get(i).ft.getNode(), 500 +(i%5) * 60.0);\r\n            infoChance.get(i).ft.play();\r\n        }\r\n\r\n\r\n        button.setOnKeyPressed(new EventHandler<KeyEvent>() {\r\n            private int index = 0;\r\n            private int line = 0;\r\n\r\n            private int leftLine = 0;\r\n            private int rightLine = 0;\r\n\r\n            @Override\r\n            public void handle(KeyEvent keyEvent) {\r\n                KeyCode kCode = keyEvent.getCode();\r\n                System.out.println(kCode.getName());\r\n                char toAddLetter;\r\n                try {\r\n\r\n                    if (kCode == KeyCode.ENTER) {\r\n                        if (testword.letters.size() == 5) {\r\n                            try {\r\n                                int status;\r\n                                for (index=0;index<5;index++) {\r\n                                    aniLetters[index] = new AniLetter((char)(testword.letters.get(index).letterContent-32)+\"\");\r\n                                    pane.getChildren().add(aniLetters[index].ft.getNode());\r\n                                    AnchorPane.setLeftAnchor(aniLetters[index].ft.getNode(), 500.0 + index * 60.0);\r\n                                    AnchorPane.setTopAnchor(aniLetters[index].ft.getNode(), 120.0 + line * 60.0);\r\n                                    aniLetters[index].ft.play();\r\n                                }\r\n                                if (Word.CheckInList(testword.WordContent.toString())) {\r\n                                    index = 0;\r\n                                    line++;\r\n                                    testword.CheckAns(ans);\r\n                                 //   System.out.println(testword.ShowColor());\r\n                                    for (int i = 0; i < 5; i++) {\r\n                                        if (testword.letters.get(i).letterColor == LetterColor.Green) {\r\n                                            aniLetters[i].text.setFill(Color.GREEN);\r\n                                        }\r\n                                        if (testword.letters.get(i).letterColor == LetterColor.Yellow) {\r\n                                            aniLetters[i].text.setFill(Color.YELLOW);\r\n                                        }\r\n                                        if (testword.letters.get(i).letterColor == LetterColor.Grey) {\r\n                                            aniLetters[i].text.setFill(Color.BLACK);\r\n                                        }\r\n                                    }\r\n                                    status = testword.getState();\r\n                                    if (status == 0) {\r\n                                        System.out.println(\"you win\");\r\n                                    }\r\n                                    if (line == 6) {\r\n                                        System.out.println(\"you lose\");\r\n                                    }\r\n                                    WordList.PossibleWord=GuessAlgorithm.updatePossibleWord(WordList.PossibleWord, testword.getState(), testword.WordContent.toString());\r\n                                    GuessAlgorithm.possibilities = WordList.PossibleWord.size();\r\n                                    double newE = GuessAlgorithm.calENow(WordList.PossibleWord);\r\n                                    double info = GuessAlgorithm.eNow - newE;\r\n\r\n                                    AniString infoString = new AniString(df2.format(info) + \"bits\", Color.WHITE);\r\n                                    pane.getChildren().add(infoString.ft.getNode());\r\n                                    AnchorPane.setLeftAnchor(infoString.ft.getNode(), 800.0);\r\n                                    AnchorPane.setTopAnchor(infoString.ft.getNode(), 125.0 + leftLine * 60.0);\r\n                                    infoString.ft.play();\r\n\r\n                                    GuessAlgorithm.eNow = newE ;\r\n                                    leftLine++;\r\n                                    aniStrings.add(new AniString(\"Possibilities:\", Color.WHITE));\r\n                                    pane.getChildren().add(aniStrings.get(aniStrings.size() - 1).ft.getNode());\r\n                                    AnchorPane.setLeftAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 150.0);\r\n                                    AnchorPane.setTopAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 125.0 + leftLine * 60.0);\r\n                                    aniStrings.get(aniStrings.size() - 1).ft.play();\r\n\r\n                                    aniStrings.add(new AniString(\"\" + GuessAlgorithm.possibilities , Color.WHITE));\r\n                                    pane.getChildren().add(aniStrings.get(aniStrings.size() - 1).ft.getNode());\r\n                                    AnchorPane.setLeftAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 150.0  + aniStrings.size() * 75.0);\r\n                                    AnchorPane.setTopAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 125.0 + leftLine * 60.0);\r\n                                    aniStrings.get(aniStrings.size() - 1).ft.play();\r\n\r\n                                    aniStrings.add(new AniString(\"/ E:\", Color.SKYBLUE));\r\n                                    pane.getChildren().add(aniStrings.get(aniStrings.size() - 1).ft.getNode());\r\n                                    AnchorPane.setLeftAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 150.0  + aniStrings.size() * 75.0);\r\n                                    AnchorPane.setTopAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 125.0 + leftLine * 60.0);\r\n                                    aniStrings.get(aniStrings.size() - 1).ft.play();\r\n\r\n                                    // 保留小数点后两位\r\n                                    DecimalFormat df = new DecimalFormat(\"#.00\");\r\n                                    aniStrings.add(new AniString(\"\" + df.format(GuessAlgorithm.eNow), Color.SKYBLUE));\r\n                                    pane.getChildren().add(aniStrings.get(aniStrings.size() - 1).ft.getNode());\r\n                                    AnchorPane.setLeftAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 120  + aniStrings.size() * 75.0);\r\n                                    AnchorPane.setTopAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 125.0 + leftLine * 60.0);\r\n                                    aniStrings.get(aniStrings.size() - 1).ft.play();\r\n\r\n                                    aniStrings.clear();\r\n\r\n                                    GuessAlgorithm.getWordScore(WordList.LegalWord, WordList.PossibleWord);\r\n                                  /*  for(int i=0; i<5&&i<GuessAlgorithm.wsList.size(); i++){\r\n                                        System.out.println(GuessAlgorithm.wsList.get(i).word+\" \"+GuessAlgorithm.wsList.get(i).entropy + \" \" + GuessAlgorithm.wsList.get(i).possible + \" \" + GuessAlgorithm.wsList.get(i).score);\r\n                                    }*/\r\n\r\n                                    for (int i = 0; i < 5; i++) {\r\n                                        testword.RemoveLetter();\r\n                                        pane.getChildren().remove(recommend[i].ft.getNode());\r\n                                        pane.getChildren().remove(recommendInfo[i].ft.getNode());\r\n                                        pane.getChildren().remove(recommendPossibility[i].ft.getNode());\r\n                                        AniString fadeRecommend = new AniString(recommend[i].string.getText(), Color.WHITE);\r\n                                        pane.getChildren().add(fadeRecommend.ft2.getNode());\r\n                                        AnchorPane.setLeftAnchor(fadeRecommend.ft2.getNode(), 900.0);\r\n                                        AnchorPane.setTopAnchor(fadeRecommend.ft2.getNode(), 180 + i * 60.0);\r\n                                        fadeRecommend.ft2.play();\r\n                                        AniString fadeRecommendInfo = new AniString(recommendInfo[i].string.getText(), Color.WHITE);\r\n                                        pane.getChildren().add(fadeRecommendInfo.ft2.getNode());\r\n                                        AnchorPane.setLeftAnchor(fadeRecommendInfo.ft2.getNode(), 900.0 + 150);\r\n                                        AnchorPane.setTopAnchor(fadeRecommendInfo.ft2.getNode(), 180 + i * 60.0);\r\n                                        fadeRecommendInfo.ft2.play();\r\n                                        AniString fadeRecommendPossibility = new AniString(recommendPossibility[i].string.getText(), Color.WHITE);\r\n                                        pane.getChildren().add(fadeRecommendPossibility.ft2.getNode());\r\n                                        AnchorPane.setLeftAnchor(fadeRecommendPossibility.ft2.getNode(), 900.0 + 240);\r\n                                        AnchorPane.setTopAnchor(fadeRecommendPossibility.ft2.getNode(), 180 + i * 60.0);\r\n                                        fadeRecommendPossibility.ft2.play();\r\n                                    }\r\n                                    for(int i=0; i<5; i++){\r\n                                        testword.AddLetter(GuessAlgorithm.wsList.get(0).word.charAt(i));\r\n                                       // System.out.println(\"wtf:\"+testword.WordContent);\r\n                                    }\r\n                                    for(int i=0; i<5&&i<GuessAlgorithm.wsList.size(); i++){\r\n                                        recommend[i] = new AniString(GuessAlgorithm.wsList.get(i).word, Color.WHITE);\r\n                                        pane.getChildren().add(recommend[i].ft.getNode());\r\n                                        AnchorPane.setLeftAnchor(recommend[i].ft.getNode(), 900.0);\r\n                                        AnchorPane.setTopAnchor(recommend[i].ft.getNode(), 180.0 + i * 60.0);\r\n                                        recommend[i].ft.play();\r\n                                        recommendInfo[i] = new AniString(df2.format(GuessAlgorithm.wsList.get(i).entropy), Color.WHITE);\r\n                                        pane.getChildren().add(recommendInfo[i].ft.getNode());\r\n                                        AnchorPane.setLeftAnchor(recommendInfo[i].ft.getNode(), 900.0 + 150.0);\r\n                                        AnchorPane.setTopAnchor(recommendInfo[i].ft.getNode(), 180.0 + i * 60.0);\r\n                                        recommendInfo[i].ft.play();\r\n                                        recommendPossibility[i] = new AniString(df6.format(GuessAlgorithm.wsList.get(i).possible), Color.WHITE);\r\n                                        pane.getChildren().add(recommendPossibility[i].ft.getNode());\r\n                                        AnchorPane.setLeftAnchor(recommendPossibility[i].ft.getNode(), 900.0 + 240.0);\r\n                                        AnchorPane.setTopAnchor(recommendPossibility[i].ft.getNode(), 180.0 + i * 60.0);\r\n                                        recommendPossibility[i].ft.play();\r\n                                    }\r\n\r\n                                    System.out.println(\"chancesize\"+infoChance.size());\r\n\r\n                                    for(int i=0; i<infoChance.size(); i++){\r\n                                        pane.getChildren().remove(infoChance.get(i).ft.getNode());\r\n                                    }\r\n\r\n                                    System.out.println(\"wordsize\"+infoWord.size());\r\n                                    for (int i=0; i<infoWord.size(); i++){\r\n                                        pane.getChildren().remove(infoWord.get(i).ft.getNode());\r\n                                    }\r\n\r\n                                    System.out.println(\"clear\");\r\n\r\n                                    GuessAlgorithm.getShowList(WordList.PossibleWord);\r\n\r\n                                    infoWord.clear();\r\n\r\n                                    for(int i=0; i<5&&i<GuessAlgorithm.PossibleWordChance.size(); i++){\r\n                                        infoWord.add(new AniString(GuessAlgorithm.PossibleWordChance.get(i).word, Color.WHITE));\r\n                                    }\r\n                                    if(GuessAlgorithm.PossibleWordChance.size()>5)\r\n                                    for(int i=0; i<5; i++){\r\n                                        infoWord.add(new AniString(GuessAlgorithm.PossibleWordChance.get(GuessAlgorithm.PossibleWordChance.size()-6+i).word, Color.WHITE));\r\n                                    }\r\n\r\n                                    for (int i=0; i<infoWord.size(); i++){\r\n                                        pane.getChildren().add(infoWord.get(i).ft.getNode());\r\n                                        AnchorPane.setLeftAnchor(infoWord.get(i).ft.getNode(), 450.0 + (i/5) * 400.0);\r\n                                        AnchorPane.setTopAnchor(infoWord.get(i).ft.getNode(), 500 + (i%5) * 60.0);\r\n                                        infoWord.get(i).ft.play();\r\n                                    }\r\n\r\n                                    infoChance.clear();\r\n\r\n                                    for(int i=0; i<5&&i<GuessAlgorithm.PossibleWordChance.size(); i++){\r\n                                        infoChance.add(new AniRectangular(300*GuessAlgorithm.PossibleWordChance.get(i).fill, 30.0));\r\n                                //        System.out.println(GuessAlgorithm.PossibleWordChance.get(i).fill);\r\n                                    }\r\n                                    if(GuessAlgorithm.PossibleWordChance.size()>5)\r\n                                    for(int i=0; i<5; i++){\r\n                                        infoChance.add(new AniRectangular( 300*GuessAlgorithm.PossibleWordChance.get(GuessAlgorithm.PossibleWordChance.size()-6+i).fill, 30.0));\r\n                                 //       System.out.println(GuessAlgorithm.PossibleWordChance.get(GuessAlgorithm.PossibleWordChance.size()-6+i).fill);\r\n                                    }\r\n                                    for (int i=0; i<infoChance.size(); i++){\r\n                                        pane.getChildren().add(infoChance.get(i).ft.getNode());\r\n                                        AnchorPane.setLeftAnchor(infoChance.get(i).ft.getNode(), 450 + 75.0 + (i/5) * 400.0);\r\n                                        AnchorPane.setTopAnchor(infoChance.get(i).ft.getNode(), 500 +(i%5) * 60.0);\r\n                                        infoChance.get(i).ft.play();\r\n                                    }\r\n\r\n                                } else {\r\n                                    System.out.println(\"Not in the list\");\r\n                                }\r\n\r\n                            } catch (Exception e) {\r\n                                //throw new RuntimeException(e);\r\n                                System.out.println(\"Not in the list\");\r\n                                for (int i = 0; i < 5; i++) {\r\n                                    testword.RemoveLetter();\r\n                                }\r\n                            }\r\n                        } else {\r\n                            System.out.println(\"not enough letter!\");\r\n                        }\r\n                    }\r\n\r\n                } catch (Exception e) {\r\n                    throw new RuntimeException(e);\r\n                }\r\n\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    public static void backMainMenu() throws Exception {\r\n        mainWindow.setScene(mainMenuScene);\r\n        mainWindow.setTitle(\"WORDLE-EX\");\r\n        mainWindow.show();\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>GBK
===================================================================
diff --git a/src/main/Main.java b/src/main/Main.java
--- a/src/main/Main.java	(revision 33f441bfa3aba827c96c3f46c21d472ced86d083)
+++ b/src/main/Main.java	(date 1655129260699)
@@ -99,7 +99,7 @@
     public void start(Stage menuStage) throws Exception {
         menuStage.setTitle("WORDLE-EX");
         menuStage.setResizable(false);
-        menuStage.setAlwaysOnTop(true);
+        menuStage.setAlwaysOnTop(false);
 
         mainWindow = menuStage;
         mainMenuLayout = FXMLLoader.load(getClass().getResource("resources/menuScene.fxml"));
Index: target/classes/resources/menuScene.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<?import javafx.scene.control.*?>\r\n<?import javafx.scene.image.*?>\r\n<?import javafx.scene.layout.*?>\r\n<?import javafx.scene.text.*?>\r\n\r\n<AnchorPane prefHeight=\"800.0\" prefWidth=\"1280.0\" xmlns=\"http://javafx.com/javafx/16\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"MenuScene\">\r\n   <children>\r\n      <ImageView fitHeight=\"800.0\" fitWidth=\"1280.0\">\r\n         <image>\r\n            <Image url=\"@menuScreen.png\" />\r\n         </image>\r\n      </ImageView>\r\n      <Text fill=\"WHITE\" layoutX=\"456.0\" layoutY=\"248.0\" strokeType=\"OUTSIDE\" strokeWidth=\"0.0\" text=\"Normal Mode\">\r\n         <font>\r\n            <Font size=\"55.0\" />\r\n         </font></Text>\r\n      <Text fill=\"WHITE\" layoutX=\"441.0\" layoutY=\"362.0\" strokeType=\"OUTSIDE\" strokeWidth=\"0.0\" text=\"Advance Mode\">\r\n         <font>\r\n            <Font size=\"55.0\" />\r\n         </font></Text>\r\n      <Text fill=\"WHITE\" layoutX=\"532.0\" layoutY=\"485.0\" strokeType=\"OUTSIDE\" strokeWidth=\"0.0\" text=\"AI Show\">\r\n         <font>\r\n            <Font size=\"55.0\" />\r\n         </font></Text>\r\n      <Button layoutX=\"456.0\" layoutY=\"204.0\" mnemonicParsing=\"false\" onMouseClicked=\"#startNormalButton\" onMouseEntered=\"#mouseOnButton\" onMouseExited=\"#mouseLeaveButton\" opacity=\"0.0\" prefHeight=\"48.0\" prefWidth=\"369.0\" text=\"Button\" />\r\n      <Button layoutX=\"441.0\" layoutY=\"318.0\" mnemonicParsing=\"false\" onMouseClicked=\"#startAdvanceButton\" onMouseEntered=\"#mouseOnButton\" onMouseExited=\"#mouseLeaveButton\" opacity=\"0.0\" prefHeight=\"48.0\" prefWidth=\"397.0\" text=\"Button\" />\r\n      <Button layoutX=\"532.0\" layoutY=\"441.0\" mnemonicParsing=\"false\" onMouseEntered=\"#mouseOnButton\" onMouseExited=\"#mouseLeaveButton\" opacity=\"0.0\" prefHeight=\"48.0\" prefWidth=\"215.0\" text=\"Button\" />\r\n   </children>\r\n</AnchorPane>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/resources/menuScene.fxml b/target/classes/resources/menuScene.fxml
--- a/target/classes/resources/menuScene.fxml	(revision 33f441bfa3aba827c96c3f46c21d472ced86d083)
+++ b/target/classes/resources/menuScene.fxml	(date 1655112868409)
@@ -26,6 +26,6 @@
          </font></Text>
       <Button layoutX="456.0" layoutY="204.0" mnemonicParsing="false" onMouseClicked="#startNormalButton" onMouseEntered="#mouseOnButton" onMouseExited="#mouseLeaveButton" opacity="0.0" prefHeight="48.0" prefWidth="369.0" text="Button" />
       <Button layoutX="441.0" layoutY="318.0" mnemonicParsing="false" onMouseClicked="#startAdvanceButton" onMouseEntered="#mouseOnButton" onMouseExited="#mouseLeaveButton" opacity="0.0" prefHeight="48.0" prefWidth="397.0" text="Button" />
-      <Button layoutX="532.0" layoutY="441.0" mnemonicParsing="false" onMouseEntered="#mouseOnButton" onMouseExited="#mouseLeaveButton" opacity="0.0" prefHeight="48.0" prefWidth="215.0" text="Button" />
+      <Button layoutX="532.0" layoutY="441.0" mnemonicParsing="false" onMouseClicked="#startAIShowButton" onMouseEntered="#mouseOnButton" onMouseExited="#mouseLeaveButton" opacity="0.0" prefHeight="48.0" prefWidth="215.0" text="Button" />
    </children>
 </AnchorPane>
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"28e52107-b900-4ce7-bff4-f740d1529555\" name=\"Changes\" comment=\"algorithm GUI update\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/Main.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/Main.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/Main.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/Main.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/resources/mainScene.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/resources/mainScene.fxml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Enum\" />\r\n        <option value=\"FxmlFile\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"RESET_MODE\" value=\"MIXED\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"281El5VnHKW1oxjs0dAtV1ibU0u\" />\r\n  <component name=\"ProjectLevelVcsManager\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\r\n    <property name=\"extract.method.default.visibility\" value=\"private\" />\r\n    <property name=\"last_directory_selection\" value=\"$PROJECT_DIR$/src/util\" />\r\n    <property name=\"project.structure.last.edited\" value=\"Project\" />\r\n    <property name=\"project.structure.proportion\" value=\"0.0\" />\r\n    <property name=\"project.structure.side.proportion\" value=\"0.0\" />\r\n    <property name=\"settings.editor.selected.configurable\" value=\"preferences.pluginManager\" />\r\n  </component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\IdeaProjects\\WordleEx\\src\\main\\resources\" />\r\n      <recent name=\"D:\\Season4\\OO_Project\\WordleEx\\src\\Data\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\Season4\\OO_Project\\WordleEx\\src\\Data\" />\r\n    </key>\r\n    <key name=\"MoveClassesOrPackagesDialog.RECENTS_KEY\">\r\n      <recent name=\"\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.Main\">\r\n    <configuration name=\"HelloApplication\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.example.wordleex.HelloApplication\" />\r\n      <module name=\"WordleEx\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.example.wordleex.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\r\n      <module name=\"WordleEx\" />\r\n      <option name=\"VM_PARAMETERS\" value=\"--module-path &quot;D:\\Java\\JavaFX\\javafx-sdk-18\\lib&quot; --add-modules=javafx.base,javafx.controls,javafx.fxml,javafx.graphics,javafx.media,javafx.swing,javafx.web\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Test\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Test\" />\r\n      <module name=\"WordleEx\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"naniTest\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"naniTest\" />\r\n      <module name=\"WordleEx\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <list>\r\n      <item itemvalue=\"Application.Main\" />\r\n      <item itemvalue=\"Application.HelloApplication\" />\r\n      <item itemvalue=\"Application.Test\" />\r\n      <item itemvalue=\"Application.naniTest\" />\r\n    </list>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Test\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"28e52107-b900-4ce7-bff4-f740d1529555\" name=\"Changes\" comment=\"\" />\r\n      <created>1650375842923</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1650375842923</updated>\r\n      <workItem from=\"1650375843003\" duration=\"1275000\" />\r\n      <workItem from=\"1653198377145\" duration=\"16052000\" />\r\n      <workItem from=\"1653449527897\" duration=\"695000\" />\r\n      <workItem from=\"1653643590526\" duration=\"2473000\" />\r\n      <workItem from=\"1653646119075\" duration=\"2032000\" />\r\n      <workItem from=\"1653650061497\" duration=\"1435000\" />\r\n      <workItem from=\"1653655065606\" duration=\"287000\" />\r\n      <workItem from=\"1653700967604\" duration=\"6596000\" />\r\n      <workItem from=\"1653782154243\" duration=\"10560000\" />\r\n      <workItem from=\"1654502867795\" duration=\"10825000\" />\r\n      <workItem from=\"1654528669522\" duration=\"1184000\" />\r\n      <workItem from=\"1654530024195\" duration=\"729000\" />\r\n      <workItem from=\"1654709314006\" duration=\"4059000\" />\r\n      <workItem from=\"1654901364999\" duration=\"867000\" />\r\n      <workItem from=\"1654902260019\" duration=\"12078000\" />\r\n      <workItem from=\"1654916236638\" duration=\"4025000\" />\r\n      <workItem from=\"1654933943696\" duration=\"7308000\" />\r\n      <workItem from=\"1654949457097\" duration=\"13653000\" />\r\n      <workItem from=\"1654963642747\" duration=\"26000\" />\r\n      <workItem from=\"1654963736948\" duration=\"49000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"merge\">\r\n      <created>1654525263964</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1654525263964</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"make some adjustment\">\r\n      <created>1654713210637</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1654713210637</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"make some adjustment\">\r\n      <created>1654901414811</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1654901414812</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"make some adjustment\">\r\n      <created>1654901994608</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1654901994608</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"make some adjustment\">\r\n      <created>1654903017507</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1654903017507</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"finish some visible data\">\r\n      <created>1654912069036</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1654912069036</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"finish some visible data\">\r\n      <created>1654913865125</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1654913865125</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"finish some visible data\">\r\n      <created>1654935276796</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1654935276796</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"make some UI\">\r\n      <created>1654936817179</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1654936817179</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"make some UI\">\r\n      <created>1654941066954</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1654941066955</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"make some UI\">\r\n      <created>1654941286642</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1654941286642</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"algorithm GUI\">\r\n      <created>1654960134060</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1654960134060</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"algorithm GUI update\">\r\n      <created>1654963363914</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1654963363914</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"algorithm GUI update\">\r\n      <created>1654963655793</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1654963655793</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"15\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"origin/main\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"basic function\" />\r\n    <MESSAGE value=\"merge\" />\r\n    <MESSAGE value=\"make some adjustment\" />\r\n    <MESSAGE value=\"finish some visible data\" />\r\n    <MESSAGE value=\"make some UI\" />\r\n    <MESSAGE value=\"algorithm GUI\" />\r\n    <MESSAGE value=\"algorithm GUI update\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"algorithm GUI update\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <watches-manager>\r\n      <configuration name=\"Application\">\r\n        <watch expression=\"WordList.WordPrior\" language=\"JAVA\" />\r\n        <watch expression=\"GuessAlgorithm.wsList\" language=\"JAVA\" />\r\n        <watch expression=\"GuessAlgorithm.StateInfoList\" language=\"JAVA\" />\r\n        <watch expression=\"GuessAlgorithm.StateInfoList\" language=\"JAVA\" />\r\n        <watch expression=\"GuessAlgorithm.PossibleWordChance\" language=\"JAVA\" />\r\n        <watch expression=\"GuessAlgorithm.eNow\" language=\"JAVA\" />\r\n      </configuration>\r\n    </watches-manager>\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 33f441bfa3aba827c96c3f46c21d472ced86d083)
+++ b/.idea/workspace.xml	(date 1655129584881)
@@ -4,11 +4,17 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="28e52107-b900-4ce7-bff4-f740d1529555" name="Changes" comment="algorithm GUI update">
+    <list default="true" id="28e52107-b900-4ce7-bff4-f740d1529555" name="Changes" comment="finish new mode">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/Main.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/GuessAlgorithm.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/GuessAlgorithm.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/Letter.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/Letter.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/LetterIOException.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/LetterIOException.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/Main$1.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/Main$1.class" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/target/classes/Main.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/Main.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/resources/mainScene.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/resources/mainScene.fxml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/WordWithScore.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/WordWithScore.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/menuScene.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/menuScene.fxml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/resources/menuScene.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/resources/menuScene.fxml" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -141,6 +147,8 @@
       <workItem from="1654949457097" duration="13653000" />
       <workItem from="1654963642747" duration="26000" />
       <workItem from="1654963736948" duration="49000" />
+      <workItem from="1655106927591" duration="154000" />
+      <workItem from="1655112697227" duration="10722000" />
     </task>
     <task id="LOCAL-00001" summary="merge">
       <created>1654525263964</created>
@@ -240,7 +248,35 @@
       <option name="project" value="LOCAL" />
       <updated>1654963655793</updated>
     </task>
-    <option name="localTasksCounter" value="15" />
+    <task id="LOCAL-00015" summary="algorithm GUI update">
+      <created>1655106946525</created>
+      <option name="number" value="00015" />
+      <option name="presentableId" value="LOCAL-00015" />
+      <option name="project" value="LOCAL" />
+      <updated>1655106946525</updated>
+    </task>
+    <task id="LOCAL-00016" summary="algorithm GUI update">
+      <created>1655120733485</created>
+      <option name="number" value="00016" />
+      <option name="presentableId" value="LOCAL-00016" />
+      <option name="project" value="LOCAL" />
+      <updated>1655120733485</updated>
+    </task>
+    <task id="LOCAL-00017" summary="fix some bug">
+      <created>1655121577095</created>
+      <option name="number" value="00017" />
+      <option name="presentableId" value="LOCAL-00017" />
+      <option name="project" value="LOCAL" />
+      <updated>1655121577095</updated>
+    </task>
+    <task id="LOCAL-00018" summary="finish new mode">
+      <created>1655128734756</created>
+      <option name="number" value="00018" />
+      <option name="presentableId" value="LOCAL-00018" />
+      <option name="project" value="LOCAL" />
+      <updated>1655128734756</updated>
+    </task>
+    <option name="localTasksCounter" value="19" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -277,7 +313,10 @@
     <MESSAGE value="make some UI" />
     <MESSAGE value="algorithm GUI" />
     <MESSAGE value="algorithm GUI update" />
-    <option name="LAST_COMMIT_MESSAGE" value="algorithm GUI update" />
+    <MESSAGE value="fix letter upper case" />
+    <MESSAGE value="fix some bug" />
+    <MESSAGE value="finish new mode" />
+    <option name="LAST_COMMIT_MESSAGE" value="finish new mode" />
   </component>
   <component name="XDebuggerManager">
     <watches-manager>
Index: target/classes/menuScene.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<?import javafx.scene.control.*?>\r\n<?import javafx.scene.image.*?>\r\n<?import javafx.scene.layout.*?>\r\n<?import javafx.scene.text.*?>\r\n\r\n<AnchorPane prefHeight=\"800.0\" prefWidth=\"1280.0\" xmlns=\"http://javafx.com/javafx/16\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"MenuScene\">\r\n   <children>\r\n      <ImageView fitHeight=\"800.0\" fitWidth=\"1280.0\">\r\n         <image>\r\n            <Image url=\"@menuScreen.png\" />\r\n         </image>\r\n      </ImageView>\r\n      <Text fill=\"WHITE\" layoutX=\"456.0\" layoutY=\"248.0\" strokeType=\"OUTSIDE\" strokeWidth=\"0.0\" text=\"Normal Mode\">\r\n         <font>\r\n            <Font size=\"55.0\" />\r\n         </font></Text>\r\n      <Text fill=\"WHITE\" layoutX=\"441.0\" layoutY=\"362.0\" strokeType=\"OUTSIDE\" strokeWidth=\"0.0\" text=\"Advance Mode\">\r\n         <font>\r\n            <Font size=\"55.0\" />\r\n         </font></Text>\r\n      <Text fill=\"WHITE\" layoutX=\"532.0\" layoutY=\"485.0\" strokeType=\"OUTSIDE\" strokeWidth=\"0.0\" text=\"AI Show\">\r\n         <font>\r\n            <Font size=\"55.0\" />\r\n         </font></Text>\r\n      <Button layoutX=\"456.0\" layoutY=\"204.0\" mnemonicParsing=\"false\" onMouseClicked=\"#startNormalButton\" onMouseEntered=\"#mouseOnButton\" onMouseExited=\"#mouseLeaveButton\" opacity=\"0.0\" prefHeight=\"48.0\" prefWidth=\"369.0\" text=\"Button\" />\r\n      <Button layoutX=\"441.0\" layoutY=\"318.0\" mnemonicParsing=\"false\" onMouseClicked=\"#startAdvanceButton\" onMouseEntered=\"#mouseOnButton\" onMouseExited=\"#mouseLeaveButton\" opacity=\"0.0\" prefHeight=\"48.0\" prefWidth=\"397.0\" text=\"Button\" />\r\n      <Button layoutX=\"532.0\" layoutY=\"441.0\" mnemonicParsing=\"false\" onMouseEntered=\"#mouseOnButton\" onMouseExited=\"#mouseLeaveButton\" opacity=\"0.0\" prefHeight=\"48.0\" prefWidth=\"215.0\" text=\"Button\" />\r\n   </children>\r\n</AnchorPane>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/menuScene.fxml b/target/classes/menuScene.fxml
--- a/target/classes/menuScene.fxml	(revision 33f441bfa3aba827c96c3f46c21d472ced86d083)
+++ b/target/classes/menuScene.fxml	(date 1655112868409)
@@ -26,6 +26,6 @@
          </font></Text>
       <Button layoutX="456.0" layoutY="204.0" mnemonicParsing="false" onMouseClicked="#startNormalButton" onMouseEntered="#mouseOnButton" onMouseExited="#mouseLeaveButton" opacity="0.0" prefHeight="48.0" prefWidth="369.0" text="Button" />
       <Button layoutX="441.0" layoutY="318.0" mnemonicParsing="false" onMouseClicked="#startAdvanceButton" onMouseEntered="#mouseOnButton" onMouseExited="#mouseLeaveButton" opacity="0.0" prefHeight="48.0" prefWidth="397.0" text="Button" />
-      <Button layoutX="532.0" layoutY="441.0" mnemonicParsing="false" onMouseEntered="#mouseOnButton" onMouseExited="#mouseLeaveButton" opacity="0.0" prefHeight="48.0" prefWidth="215.0" text="Button" />
+      <Button layoutX="532.0" layoutY="441.0" mnemonicParsing="false" onMouseClicked="#startAIShowButton" onMouseEntered="#mouseOnButton" onMouseExited="#mouseLeaveButton" opacity="0.0" prefHeight="48.0" prefWidth="215.0" text="Button" />
    </children>
 </AnchorPane>
