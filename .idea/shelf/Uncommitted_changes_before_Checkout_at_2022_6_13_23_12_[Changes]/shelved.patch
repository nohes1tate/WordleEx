Index: src/main/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import javafx.animation.FadeTransition;\r\nimport javafx.application.Application;\r\nimport javafx.event.EventHandler;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.input.KeyCode;\r\nimport javafx.scene.input.KeyEvent;\r\nimport javafx.scene.layout.AnchorPane;\r\nimport javafx.scene.layout.BorderPane;\r\nimport javafx.scene.paint.Color;\r\nimport javafx.scene.shape.Rectangle;\r\nimport javafx.scene.text.Font;\r\nimport javafx.scene.text.FontPosture;\r\nimport javafx.scene.text.FontWeight;\r\nimport javafx.scene.text.Text;\r\nimport javafx.stage.Stage;\r\nimport javafx.util.Duration;\r\n\r\nimport java.io.IOException;\r\nimport java.nio.charset.StandardCharsets;\r\nimport java.text.DecimalFormat;\r\nimport java.util.*;\r\n\r\npublic class Main extends Application {\r\n\r\n    /**\r\n     * 游戏的主窗口\r\n     */\r\n    private static Stage mainWindow;\r\n\r\n    /**\r\n     * 主游戏体的屏幕场景\r\n     */\r\n    private static Scene mainMenuScene;\r\n\r\n    /**\r\n     * 主菜单布局\r\n     */\r\n    private Parent mainMenuLayout;\r\n\r\n    /**\r\n     * 得到主菜单布局\r\n     *\r\n     * @return {@link Parent}\r\n     */\r\n    public Parent getMainMenuLayout() {\r\n        return mainMenuLayout;\r\n    }\r\n\r\n    /**\r\n     * 得到主菜单场景\r\n     *\r\n     * @return {@link Scene}\r\n     */\r\n    public static Scene getMainMenuScene() {\r\n        return mainMenuScene;\r\n    }\r\n\r\n    /**\r\n     * 得到主窗口\r\n     *\r\n     * @return {@link Stage}\r\n     */\r\n    public static Stage getMainWindow() {\r\n        return mainWindow;\r\n    }\r\n\r\n    /**\r\n     * 设置主菜单布局\r\n     *\r\n     * @param mainMenuLayout 主菜单布局\r\n     */\r\n    public void setMainMenuLayout(Parent mainMenuLayout) {\r\n        this.mainMenuLayout = mainMenuLayout;\r\n    }\r\n\r\n    /**\r\n     * 主菜单设置场景\r\n     *\r\n     * @param mainMenuScene 主菜单场景\r\n     */\r\n    public static void setMainMenuScene(Scene mainMenuScene) {\r\n        Main.mainMenuScene = mainMenuScene;\r\n    }\r\n\r\n    public static void setMainWindow(Stage mainWindow) {\r\n        Main.mainWindow = mainWindow;\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        launch(args);\r\n    }\r\n\r\n    @Override\r\n    public void start(Stage menuStage) throws Exception {\r\n        menuStage.setTitle(\"WORDLE-EX\");\r\n        menuStage.setResizable(false);\r\n        menuStage.setAlwaysOnTop(true);\r\n\r\n        mainWindow = menuStage;\r\n        mainMenuLayout = FXMLLoader.load(getClass().getResource(\"resources/menuScene.fxml\"));\r\n        mainMenuScene = new Scene(mainMenuLayout, 1280, 800);\r\n\r\n        menuStage.setScene(mainMenuScene);\r\n        menuStage.show();\r\n    }\r\n\r\n    public static void startNormalMode() throws Exception {\r\n        WordList.PossibleWord = WordList.ReadWord(\"src/Data/possible_words.txt\");\r\n        WordList.LegalWord = WordList.ReadWord(\"src/Data/allowed_words.txt\");\r\n        WordList.AnswerWord = WordList.ReadWord(\"src/Data/possible_words.txt\");\r\n        Word testword = new Word();\r\n        ArrayList<String> list = new ArrayList<>(WordList.AnswerWord);\r\n        int ansIdx = new Random().nextInt(list.size());\r\n        String ans = list.get(ansIdx);\r\n\r\n        System.out.println(ans);\r\n\r\n        AniLetter[] aniLetters = new AniLetter[5];\r\n\r\n        AnchorPane pane = new AnchorPane();\r\n\r\n\r\n        Button button = new Button(\"测试\");\r\n        button.setOnKeyPressed(new EventHandler<KeyEvent>() {\r\n            private int index = 0;\r\n            private int line = 0;\r\n\r\n            @Override\r\n            public void handle(KeyEvent keyEvent) {\r\n                KeyCode kCode = keyEvent.getCode();\r\n                System.out.println(kCode.getName());\r\n                char toAddLetter;\r\n                try {\r\n                    if (kCode.isLetterKey() && index < 5) {\r\n                        toAddLetter = (char) (kCode.getCode() + 32);\r\n                        testword.AddLetter(toAddLetter);\r\n                        aniLetters[index] = new AniLetter(keyEvent.getText().toUpperCase(Locale.ROOT));\r\n                        pane.getChildren().add(aniLetters[index].ft.getNode());\r\n                        AnchorPane.setLeftAnchor(aniLetters[index].ft.getNode(), 500.0 + index * 60.0);\r\n                        AnchorPane.setTopAnchor(aniLetters[index].ft.getNode(), 120.0 + line * 60.);\r\n                        aniLetters[index].ft.play();\r\n                        index += 1;\r\n                        System.out.println(testword.WordContent);\r\n                    }\r\n                    if (kCode == KeyCode.BACK_SPACE && index >= 1) {\r\n                        testword.RemoveLetter();\r\n                        pane.getChildren().remove(aniLetters[index - 1].ft.getNode());\r\n                        index -= 1;\r\n                    }\r\n                    if (kCode == KeyCode.ENTER) {\r\n                        if (testword.letters.size() == 5) {\r\n                            try {\r\n                                int status;\r\n                                if (Word.CheckInList(testword.WordContent.toString())) {\r\n                                    index = 0;\r\n                                    line++;\r\n                                    testword.CheckAns(ans);\r\n                                    System.out.println(testword.ShowColor());\r\n                                    MenuScene.changeButtonQColor(1);\r\n                                    for (int i = 0; i < 5; i++) {\r\n                                        if (testword.letters.get(i).letterColor == LetterColor.Green) {\r\n                                            aniLetters[i].text.setFill(Color.GREEN);\r\n                                        }\r\n                                        if (testword.letters.get(i).letterColor == LetterColor.Yellow) {\r\n                                            aniLetters[i].text.setFill(Color.YELLOW);\r\n                                        }\r\n                                        if (testword.letters.get(i).letterColor == LetterColor.Grey) {\r\n                                            aniLetters[i].text.setFill(Color.BLACK);\r\n                                        }\r\n                                    }\r\n                                    status = testword.getState();\r\n                                    if (status == 0) {\r\n                                        System.out.println(\"you win\");\r\n                                    }\r\n                                    if (line == 6) {\r\n                                        System.out.println(\"you lose\");\r\n                                    }\r\n                                    for (int i = 0; i < 5; i++) {\r\n                                        testword.RemoveLetter();\r\n                                    }\r\n\r\n                                } else {\r\n                                    System.out.println(\"Not in the list\");\r\n                                }\r\n\r\n                            } catch (Exception e) {\r\n                                //throw new RuntimeException(e);\r\n                                System.out.println(\"Not in the list\");\r\n                                for (int i = 0; i < 5; i++) {\r\n                                    testword.RemoveLetter();\r\n                                }\r\n                            }\r\n                        } else {\r\n                            System.out.println(\"not enough letter!\");\r\n                        }\r\n                    }\r\n\r\n                } catch (Exception e) {\r\n                    throw new RuntimeException(e);\r\n                }\r\n\r\n\r\n            }\r\n        });\r\n        pane.getChildren().add(button);\r\n\r\n\r\n        Parent mainScene = FXMLLoader.load(Objects.requireNonNull(Main.class.getResource(\"resources/mainScene.fxml\")));\r\n        pane.getChildren().add(mainScene);\r\n\r\n\r\n        Scene scene = new Scene(pane, 1280, 800);\r\n\r\n        mainWindow.setScene(scene);\r\n        mainWindow.setTitle(\"WORDLE-EX\");\r\n        mainWindow.show();\r\n    }\r\n\r\n    public static void startAdvanceMode() throws Exception {\r\n        Button button = new Button(\"测试\");\r\n        AnchorPane pane = new AnchorPane();\r\n        pane.getChildren().add(button);\r\n        Parent mainScene = FXMLLoader.load(Objects.requireNonNull(Main.class.getResource(\"resources/advanceScene.fxml\")));\r\n        pane.getChildren().add(mainScene);\r\n\r\n        Scene scene = new Scene(pane, 1280, 800);\r\n\r\n        mainWindow.setScene(scene);\r\n        mainWindow.setTitle(\"WORDLE-EX\");\r\n        mainWindow.show();\r\n\r\n\r\n        WordList.AnswerWord = WordList.ReadWord(\"src/Data/possible_words.txt\");\r\n        WordList.PossibleWord = WordList.ReadWord(\"src/Data/allowed_words.txt\");\r\n        WordList.LegalWord = WordList.ReadWord(\"src/Data/allowed_words.txt\");\r\n        WordList.WordPrior = WordList.ReadPrior(\"src/Data/freq_map.json\");\r\n        Word testword = new Word();\r\n        ArrayList<String> list = new ArrayList<>(WordList.AnswerWord);\r\n        int ansIdx = new Random().nextInt(list.size());\r\n        String ans = list.get(ansIdx);\r\n\r\n        GuessAlgorithm.eNow = GuessAlgorithm.calENow(WordList.PossibleWord);\r\n        GuessAlgorithm.possibilities = WordList.PossibleWord.size();\r\n        GuessAlgorithm.getShowList(WordList.PossibleWord);\r\n\r\n        GuessAlgorithm.getWordScore(WordList.LegalWord, WordList.PossibleWord);\r\n\r\n        AniString hint = new AniString(\"TOP Picks    E[Info]    p(word)\", Color.WHITE);\r\n        pane.getChildren().add(hint.ft.getNode());\r\n        AnchorPane.setLeftAnchor(hint.ft.getNode(), 900.0);\r\n        AnchorPane.setTopAnchor(hint.ft.getNode(), 120.0);\r\n        hint.ft.play();\r\n\r\n        AniString[] recommend = new AniString[5];\r\n        AniString[] recommendInfo = new AniString[5];\r\n        AniString[] recommendPossibility = new AniString[5];\r\n\r\n        DecimalFormat df2 = new DecimalFormat(\"#.##\");\r\n        DecimalFormat df6 = new DecimalFormat(\"#.#####\");\r\n\r\n        for(int i=0; i<5&&i<GuessAlgorithm.wsList.size(); i++){\r\n            recommend[i] = new AniString(GuessAlgorithm.wsList.get(i).word, Color.WHITE);\r\n            pane.getChildren().add(recommend[i].ft.getNode());\r\n            AnchorPane.setLeftAnchor(recommend[i].ft.getNode(), 900.0);\r\n            AnchorPane.setTopAnchor(recommend[i].ft.getNode(), 180.0 + i * 60.0);\r\n            recommend[i].ft.play();\r\n            recommendInfo[i] = new AniString(df2.format(GuessAlgorithm.wsList.get(i).entropy), Color.WHITE);\r\n            pane.getChildren().add(recommendInfo[i].ft.getNode());\r\n            AnchorPane.setLeftAnchor(recommendInfo[i].ft.getNode(), 900.0 + 150.0);\r\n            AnchorPane.setTopAnchor(recommendInfo[i].ft.getNode(), 180.0 + i * 60.0);\r\n            recommendInfo[i].ft.play();\r\n            recommendPossibility[i] = new AniString(df6.format(GuessAlgorithm.wsList.get(i).possible), Color.WHITE);\r\n            pane.getChildren().add(recommendPossibility[i].ft.getNode());\r\n            AnchorPane.setLeftAnchor(recommendPossibility[i].ft.getNode(), 900.0 + 240.0);\r\n            AnchorPane.setTopAnchor(recommendPossibility[i].ft.getNode(), 180.0 + i * 60.0);\r\n            recommendPossibility[i].ft.play();\r\n        }\r\n\r\n        AniLetter[] aniLetters = new AniLetter[5];\r\n        ArrayList<AniString> aniStrings = new ArrayList<>();\r\n\r\n\r\n        aniStrings.add(new AniString(\"Possibilities:\", Color.WHITE));\r\n        pane.getChildren().add(aniStrings.get(aniStrings.size() - 1).ft.getNode());\r\n        AnchorPane.setLeftAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 150.0);\r\n        AnchorPane.setTopAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 125.0);\r\n        aniStrings.get(aniStrings.size() - 1).ft.play();\r\n\r\n        aniStrings.add(new AniString(\"\" + GuessAlgorithm.possibilities, Color.WHITE));\r\n        pane.getChildren().add(aniStrings.get(aniStrings.size() - 1).ft.getNode());\r\n        AnchorPane.setLeftAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 150.0  + aniStrings.size() * 75.0);\r\n        AnchorPane.setTopAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 125.0);\r\n        aniStrings.get(aniStrings.size() - 1).ft.play();\r\n\r\n        aniStrings.add(new AniString(\"/ E:\", Color.SKYBLUE));\r\n        pane.getChildren().add(aniStrings.get(aniStrings.size() - 1).ft.getNode());\r\n        AnchorPane.setLeftAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 150.0  + aniStrings.size() * 75.0);\r\n        AnchorPane.setTopAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 125.0);\r\n        aniStrings.get(aniStrings.size() - 1).ft.play();\r\n\r\n        // 保留小数点后两位\r\n\r\n        aniStrings.add(new AniString(\"\" + df2.format(GuessAlgorithm.eNow), Color.SKYBLUE));\r\n        pane.getChildren().add(aniStrings.get(aniStrings.size() - 1).ft.getNode());\r\n        AnchorPane.setLeftAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 120  + aniStrings.size() * 75.0);\r\n        AnchorPane.setTopAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 125.0);\r\n        aniStrings.get(aniStrings.size() - 1).ft.play();\r\n\r\n        aniStrings.clear();\r\n\r\n        button.setOnKeyPressed(new EventHandler<KeyEvent>() {\r\n            private int index = 0;\r\n            private int line = 0;\r\n\r\n            private int leftLine = 0;\r\n            private int rightLine = 0;\r\n\r\n            @Override\r\n            public void handle(KeyEvent keyEvent) {\r\n                KeyCode kCode = keyEvent.getCode();\r\n                System.out.println(kCode.getName());\r\n                char toAddLetter;\r\n                try {\r\n                    if (kCode.isLetterKey() && index < 5) {\r\n                        toAddLetter = (char) (kCode.getCode() + 32);\r\n                        testword.AddLetter(toAddLetter);\r\n                        aniLetters[index] = new AniLetter(keyEvent.getText().toUpperCase(Locale.ROOT));\r\n                        pane.getChildren().add(aniLetters[index].ft.getNode());\r\n                        AnchorPane.setLeftAnchor(aniLetters[index].ft.getNode(), 500.0 + index * 60.0);\r\n                        AnchorPane.setTopAnchor(aniLetters[index].ft.getNode(), 120.0 + line * 60.0);\r\n                        aniLetters[index].ft.play();\r\n                        index += 1;\r\n                        System.out.println(testword.WordContent);\r\n                    }\r\n                    if (kCode == KeyCode.BACK_SPACE && index >= 1) {\r\n                        testword.RemoveLetter();\r\n                        pane.getChildren().remove(aniLetters[index - 1].ft.getNode());\r\n                        index -= 1;\r\n                    }\r\n                    if (kCode == KeyCode.ENTER) {\r\n                        if (testword.letters.size() == 5) {\r\n                            try {\r\n                                int status;\r\n                                if (Word.CheckInList(testword.WordContent.toString())) {\r\n                                    index = 0;\r\n                                    line++;\r\n                                    testword.CheckAns(ans);\r\n                                    System.out.println(testword.ShowColor());\r\n                                    for (int i = 0; i < 5; i++) {\r\n                                        if (testword.letters.get(i).letterColor == LetterColor.Green) {\r\n                                            aniLetters[i].text.setFill(Color.GREEN);\r\n                                        }\r\n                                        if (testword.letters.get(i).letterColor == LetterColor.Yellow) {\r\n                                            aniLetters[i].text.setFill(Color.YELLOW);\r\n                                        }\r\n                                        if (testword.letters.get(i).letterColor == LetterColor.Grey) {\r\n                                            aniLetters[i].text.setFill(Color.BLACK);\r\n                                        }\r\n                                    }\r\n                                    status = testword.getState();\r\n                                    if (status == 0) {\r\n                                        System.out.println(\"you win\");\r\n                                    }\r\n                                    if (line == 6) {\r\n                                        System.out.println(\"you lose\");\r\n                                    }\r\n                                    WordList.PossibleWord=GuessAlgorithm.updatePossibleWord(WordList.PossibleWord, testword.getState(), testword.WordContent.toString());\r\n                                    GuessAlgorithm.possibilities = WordList.PossibleWord.size();\r\n                                    double newE = GuessAlgorithm.calENow(WordList.PossibleWord);\r\n                                    double info = GuessAlgorithm.eNow - newE;\r\n\r\n                                    AniString infoString = new AniString(df2.format(info) + \"bits\", Color.WHITE);\r\n                                    pane.getChildren().add(infoString.ft.getNode());\r\n                                    AnchorPane.setLeftAnchor(infoString.ft.getNode(), 800.0);\r\n                                    AnchorPane.setTopAnchor(infoString.ft.getNode(), 125.0 + leftLine * 60.0);\r\n                                    infoString.ft.play();\r\n\r\n                                    GuessAlgorithm.eNow = newE ;\r\n                                    leftLine++;\r\n                                    aniStrings.add(new AniString(\"Possibilities:\", Color.WHITE));\r\n                                    pane.getChildren().add(aniStrings.get(aniStrings.size() - 1).ft.getNode());\r\n                                    AnchorPane.setLeftAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 150.0);\r\n                                    AnchorPane.setTopAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 125.0 + leftLine * 60.0);\r\n                                    aniStrings.get(aniStrings.size() - 1).ft.play();\r\n\r\n                                    aniStrings.add(new AniString(\"\" + GuessAlgorithm.possibilities , Color.WHITE));\r\n                                    pane.getChildren().add(aniStrings.get(aniStrings.size() - 1).ft.getNode());\r\n                                    AnchorPane.setLeftAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 150.0  + aniStrings.size() * 75.0);\r\n                                    AnchorPane.setTopAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 125.0 + leftLine * 60.0);\r\n                                    aniStrings.get(aniStrings.size() - 1).ft.play();\r\n\r\n                                    aniStrings.add(new AniString(\"/ E:\", Color.SKYBLUE));\r\n                                    pane.getChildren().add(aniStrings.get(aniStrings.size() - 1).ft.getNode());\r\n                                    AnchorPane.setLeftAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 150.0  + aniStrings.size() * 75.0);\r\n                                    AnchorPane.setTopAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 125.0 + leftLine * 60.0);\r\n                                    aniStrings.get(aniStrings.size() - 1).ft.play();\r\n\r\n                                    // 保留小数点后两位\r\n                                    DecimalFormat df = new DecimalFormat(\"#.00\");\r\n                                    aniStrings.add(new AniString(\"\" + df.format(GuessAlgorithm.eNow), Color.SKYBLUE));\r\n                                    pane.getChildren().add(aniStrings.get(aniStrings.size() - 1).ft.getNode());\r\n                                    AnchorPane.setLeftAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 120  + aniStrings.size() * 75.0);\r\n                                    AnchorPane.setTopAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 125.0 + leftLine * 60.0);\r\n                                    aniStrings.get(aniStrings.size() - 1).ft.play();\r\n\r\n                                    aniStrings.clear();\r\n\r\n                                    GuessAlgorithm.getWordScore(WordList.LegalWord, WordList.PossibleWord);\r\n                                    for(int i=0; i<5&&i<GuessAlgorithm.wsList.size(); i++){\r\n                                        System.out.println(GuessAlgorithm.wsList.get(i).word+\" \"+GuessAlgorithm.wsList.get(i).entropy + \" \" + GuessAlgorithm.wsList.get(i).possible + \" \" + GuessAlgorithm.wsList.get(i).score);\r\n                                    }\r\n\r\n\r\n                                    for (int i = 0; i < 5; i++) {\r\n                                        testword.RemoveLetter();\r\n                                        pane.getChildren().remove(recommend[i].ft.getNode());\r\n                                        pane.getChildren().remove(recommendInfo[i].ft.getNode());\r\n                                        pane.getChildren().remove(recommendPossibility[i].ft.getNode());\r\n                                        AniString fadeRecommend = new AniString(recommend[i].string.getText(), Color.WHITE);\r\n                                        pane.getChildren().add(fadeRecommend.ft2.getNode());\r\n                                        AnchorPane.setLeftAnchor(fadeRecommend.ft2.getNode(), 900.0);\r\n                                        AnchorPane.setTopAnchor(fadeRecommend.ft2.getNode(), 180 + i * 60.0);\r\n                                        fadeRecommend.ft2.play();\r\n                                        AniString fadeRecommendInfo = new AniString(recommendInfo[i].string.getText(), Color.WHITE);\r\n                                        pane.getChildren().add(fadeRecommendInfo.ft2.getNode());\r\n                                        AnchorPane.setLeftAnchor(fadeRecommendInfo.ft2.getNode(), 900.0 + 150);\r\n                                        AnchorPane.setTopAnchor(fadeRecommendInfo.ft2.getNode(), 180 + i * 60.0);\r\n                                        fadeRecommendInfo.ft2.play();\r\n                                        AniString fadeRecommendPossibility = new AniString(recommendPossibility[i].string.getText(), Color.WHITE);\r\n                                        pane.getChildren().add(fadeRecommendPossibility.ft2.getNode());\r\n                                        AnchorPane.setLeftAnchor(fadeRecommendPossibility.ft2.getNode(), 900.0 + 240);\r\n                                        AnchorPane.setTopAnchor(fadeRecommendPossibility.ft2.getNode(), 180 + i * 60.0);\r\n                                        fadeRecommendPossibility.ft2.play();\r\n                                    }\r\n\r\n                                    for(int i=0; i<5&&i<GuessAlgorithm.wsList.size(); i++){\r\n                                        recommend[i] = new AniString(GuessAlgorithm.wsList.get(i).word, Color.WHITE);\r\n                                        pane.getChildren().add(recommend[i].ft.getNode());\r\n                                        AnchorPane.setLeftAnchor(recommend[i].ft.getNode(), 900.0);\r\n                                        AnchorPane.setTopAnchor(recommend[i].ft.getNode(), 180.0 + i * 60.0);\r\n                                        recommend[i].ft.play();\r\n                                        recommendInfo[i] = new AniString(df2.format(GuessAlgorithm.wsList.get(i).entropy), Color.WHITE);\r\n                                        pane.getChildren().add(recommendInfo[i].ft.getNode());\r\n                                        AnchorPane.setLeftAnchor(recommendInfo[i].ft.getNode(), 900.0 + 150.0);\r\n                                        AnchorPane.setTopAnchor(recommendInfo[i].ft.getNode(), 180.0 + i * 60.0);\r\n                                        recommendInfo[i].ft.play();\r\n                                        recommendPossibility[i] = new AniString(df6.format(GuessAlgorithm.wsList.get(i).possible), Color.WHITE);\r\n                                        pane.getChildren().add(recommendPossibility[i].ft.getNode());\r\n                                        AnchorPane.setLeftAnchor(recommendPossibility[i].ft.getNode(), 900.0 + 240.0);\r\n                                        AnchorPane.setTopAnchor(recommendPossibility[i].ft.getNode(), 180.0 + i * 60.0);\r\n                                        recommendPossibility[i].ft.play();\r\n                                    }\r\n\r\n                                } else {\r\n                                    System.out.println(\"Not in the list\");\r\n                                }\r\n\r\n                            } catch (Exception e) {\r\n                                //throw new RuntimeException(e);\r\n                                System.out.println(\"Not in the list\");\r\n                                for (int i = 0; i < 5; i++) {\r\n                                    testword.RemoveLetter();\r\n                                }\r\n                            }\r\n                        } else {\r\n                            System.out.println(\"not enough letter!\");\r\n                        }\r\n                    }\r\n\r\n                } catch (Exception e) {\r\n                    throw new RuntimeException(e);\r\n                }\r\n\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    public static void startAIShowMode() throws Exception {\r\n        System.out.println(\"start aishow mode\");\r\n        Button button = new Button(\"测试\");\r\n        AnchorPane pane = new AnchorPane();\r\n        pane.getChildren().add(button);\r\n        Parent mainScene = FXMLLoader.load(Objects.requireNonNull(Main.class.getResource(\"resources/advanceScene.fxml\")));\r\n        pane.getChildren().add(mainScene);\r\n\r\n        Scene scene = new Scene(pane, 1280, 800);\r\n\r\n        mainWindow.setScene(scene);\r\n        mainWindow.setTitle(\"WORDLE-EX\");\r\n        mainWindow.show();\r\n\r\n\r\n        WordList.AnswerWord = WordList.ReadWord(\"src/Data/possible_words.txt\");\r\n        WordList.PossibleWord = WordList.ReadWord(\"src/Data/allowed_words.txt\");\r\n        WordList.LegalWord = WordList.ReadWord(\"src/Data/allowed_words.txt\");\r\n        WordList.WordPrior = WordList.ReadPrior(\"src/Data/freq_map.json\");\r\n        ArrayList<String> list = new ArrayList<>(WordList.AnswerWord);\r\n        int ansIdx = new Random().nextInt(list.size());\r\n        String ans = list.get(ansIdx);\r\n\r\n        GuessAlgorithm.eNow = GuessAlgorithm.calENow(WordList.PossibleWord);\r\n        GuessAlgorithm.possibilities = WordList.PossibleWord.size();\r\n        GuessAlgorithm.getShowList(WordList.PossibleWord);\r\n\r\n        GuessAlgorithm.getWordScore(WordList.LegalWord, WordList.PossibleWord);\r\n        System.out.println(GuessAlgorithm.wsList.get(0).word);\r\n        Word testword = new Word(GuessAlgorithm.wsList.get(0).word);\r\n        System.out.println(\"Guess Word:\" + testword.WordContent);\r\n\r\n\r\n        AniString hint = new AniString(\"TOP Picks    E[Info]    p(word)\", Color.WHITE);\r\n        pane.getChildren().add(hint.ft.getNode());\r\n        AnchorPane.setLeftAnchor(hint.ft.getNode(), 900.0);\r\n        AnchorPane.setTopAnchor(hint.ft.getNode(), 120.0);\r\n        hint.ft.play();\r\n\r\n        AniString[] recommend = new AniString[5];\r\n        AniString[] recommendInfo = new AniString[5];\r\n        AniString[] recommendPossibility = new AniString[5];\r\n\r\n        DecimalFormat df2 = new DecimalFormat(\"#.##\");\r\n        DecimalFormat df6 = new DecimalFormat(\"#.#####\");\r\n\r\n        for(int i=0; i<5&&i<GuessAlgorithm.wsList.size(); i++){\r\n            recommend[i] = new AniString(GuessAlgorithm.wsList.get(i).word, Color.WHITE);\r\n            pane.getChildren().add(recommend[i].ft.getNode());\r\n            AnchorPane.setLeftAnchor(recommend[i].ft.getNode(), 900.0);\r\n            AnchorPane.setTopAnchor(recommend[i].ft.getNode(), 180.0 + i * 60.0);\r\n            recommend[i].ft.play();\r\n            recommendInfo[i] = new AniString(df2.format(GuessAlgorithm.wsList.get(i).entropy), Color.WHITE);\r\n            pane.getChildren().add(recommendInfo[i].ft.getNode());\r\n            AnchorPane.setLeftAnchor(recommendInfo[i].ft.getNode(), 900.0 + 150.0);\r\n            AnchorPane.setTopAnchor(recommendInfo[i].ft.getNode(), 180.0 + i * 60.0);\r\n            recommendInfo[i].ft.play();\r\n            recommendPossibility[i] = new AniString(df6.format(GuessAlgorithm.wsList.get(i).possible), Color.WHITE);\r\n            pane.getChildren().add(recommendPossibility[i].ft.getNode());\r\n            AnchorPane.setLeftAnchor(recommendPossibility[i].ft.getNode(), 900.0 + 240.0);\r\n            AnchorPane.setTopAnchor(recommendPossibility[i].ft.getNode(), 180.0 + i * 60.0);\r\n            recommendPossibility[i].ft.play();\r\n        }\r\n\r\n        AniLetter[] aniLetters = new AniLetter[5];\r\n        ArrayList<AniString> aniStrings = new ArrayList<>();\r\n\r\n        AniString tipString = new AniString(\"The Answer:\", Color.WHITE);\r\n        pane.getChildren().add(tipString.ft.getNode());\r\n        AnchorPane.setLeftAnchor(tipString.ft.getNode(), 50.0);\r\n        AnchorPane.setTopAnchor(tipString.ft.getNode(), 600.0);\r\n        tipString.ft.play();\r\n\r\n        AniString ansString = new AniString(ans, Color.GREEN);\r\n        pane.getChildren().add(ansString.ft.getNode());\r\n        AnchorPane.setLeftAnchor(ansString.ft.getNode(), 50.0);\r\n        AnchorPane.setTopAnchor(ansString.ft.getNode(), 650.0);\r\n        ansString.ft.play();\r\n\r\n        AniString tipString2 = new AniString(\"Press Enter To Show Next Step\", Color.GREY);\r\n        pane.getChildren().add(tipString2.ft.getNode());\r\n        AnchorPane.setLeftAnchor(tipString2.ft.getNode(), 50.0);\r\n        AnchorPane.setTopAnchor(tipString2.ft.getNode(), 700.0);\r\n        tipString2.ft.play();\r\n\r\n        aniStrings.add(new AniString(\"Possibilities:\", Color.WHITE));\r\n        pane.getChildren().add(aniStrings.get(aniStrings.size() - 1).ft.getNode());\r\n        AnchorPane.setLeftAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 150.0);\r\n        AnchorPane.setTopAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 125.0);\r\n        aniStrings.get(aniStrings.size() - 1).ft.play();\r\n\r\n        aniStrings.add(new AniString(\"\" + GuessAlgorithm.possibilities , Color.WHITE));\r\n        pane.getChildren().add(aniStrings.get(aniStrings.size() - 1).ft.getNode());\r\n        AnchorPane.setLeftAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 150.0  + aniStrings.size() * 75.0);\r\n        AnchorPane.setTopAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 125.0);\r\n        aniStrings.get(aniStrings.size() - 1).ft.play();\r\n\r\n        aniStrings.add(new AniString(\"/ E:\", Color.SKYBLUE));\r\n        pane.getChildren().add(aniStrings.get(aniStrings.size() - 1).ft.getNode());\r\n        AnchorPane.setLeftAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 150.0  + aniStrings.size() * 75.0);\r\n        AnchorPane.setTopAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 125.0);\r\n        aniStrings.get(aniStrings.size() - 1).ft.play();\r\n\r\n        // 保留小数点后两位\r\n\r\n        aniStrings.add(new AniString(\"\" + df2.format(GuessAlgorithm.eNow), Color.SKYBLUE));\r\n        pane.getChildren().add(aniStrings.get(aniStrings.size() - 1).ft.getNode());\r\n        AnchorPane.setLeftAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 120  + aniStrings.size() * 75.0);\r\n        AnchorPane.setTopAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 125.0);\r\n        aniStrings.get(aniStrings.size() - 1).ft.play();\r\n\r\n        aniStrings.clear();\r\n\r\n        ArrayList<AniString> infoWord = new ArrayList<>();\r\n        for(int i=0; i<5; i++){\r\n            infoWord.add(new AniString(GuessAlgorithm.PossibleWordChance.get(i).word, Color.WHITE));\r\n        }\r\n        for(int i=0; i<5; i++){\r\n            infoWord.add(new AniString(GuessAlgorithm.PossibleWordChance.get(GuessAlgorithm.PossibleWordChance.size()-6+i).word, Color.WHITE));\r\n        }\r\n        for (int i=0; i<infoWord.size(); i++){\r\n            pane.getChildren().add(infoWord.get(i).ft.getNode());\r\n            AnchorPane.setLeftAnchor(infoWord.get(i).ft.getNode(), 450.0 + (i/5) * 400.0);\r\n            AnchorPane.setTopAnchor(infoWord.get(i).ft.getNode(), 500 + (i%5) * 60.0);\r\n            infoWord.get(i).ft.play();\r\n        }\r\n        ArrayList<AniRectangular> infoChance = new ArrayList<>();\r\n        for(int i=0; i<5; i++){\r\n            infoChance.add(new AniRectangular(300*GuessAlgorithm.PossibleWordChance.get(i).fill, 30.0));\r\n          //  System.out.println(GuessAlgorithm.PossibleWordChance.get(i).fill);\r\n        }\r\n        for(int i=0; i<5; i++){\r\n            infoChance.add(new AniRectangular( 300*GuessAlgorithm.PossibleWordChance.get(GuessAlgorithm.PossibleWordChance.size()-6+i).fill, 30.0));\r\n           // System.out.println(GuessAlgorithm.PossibleWordChance.get(GuessAlgorithm.PossibleWordChance.size()-6+i).fill);\r\n        }\r\n        for (int i=0; i<infoChance.size(); i++){\r\n            pane.getChildren().add(infoChance.get(i).ft.getNode());\r\n            AnchorPane.setLeftAnchor(infoChance.get(i).ft.getNode(), 450 + 75.0 + (i/5) * 400.0);\r\n            AnchorPane.setTopAnchor(infoChance.get(i).ft.getNode(), 500 +(i%5) * 60.0);\r\n            infoChance.get(i).ft.play();\r\n        }\r\n\r\n\r\n        button.setOnKeyPressed(new EventHandler<KeyEvent>() {\r\n            private int index = 0;\r\n            private int line = 0;\r\n\r\n            private int leftLine = 0;\r\n            private int rightLine = 0;\r\n\r\n            @Override\r\n            public void handle(KeyEvent keyEvent) {\r\n                KeyCode kCode = keyEvent.getCode();\r\n                System.out.println(kCode.getName());\r\n                char toAddLetter;\r\n                try {\r\n\r\n                    if (kCode == KeyCode.ENTER) {\r\n                        if (testword.letters.size() == 5) {\r\n                            try {\r\n                                int status;\r\n                                for (index=0;index<5;index++) {\r\n                                    aniLetters[index] = new AniLetter((char)(testword.letters.get(index).letterContent-32)+\"\");\r\n                                    pane.getChildren().add(aniLetters[index].ft.getNode());\r\n                                    AnchorPane.setLeftAnchor(aniLetters[index].ft.getNode(), 500.0 + index * 60.0);\r\n                                    AnchorPane.setTopAnchor(aniLetters[index].ft.getNode(), 120.0 + line * 60.0);\r\n                                    aniLetters[index].ft.play();\r\n                                }\r\n                                if (Word.CheckInList(testword.WordContent.toString())) {\r\n                                    index = 0;\r\n                                    line++;\r\n                                    testword.CheckAns(ans);\r\n                                 //   System.out.println(testword.ShowColor());\r\n                                    for (int i = 0; i < 5; i++) {\r\n                                        if (testword.letters.get(i).letterColor == LetterColor.Green) {\r\n                                            aniLetters[i].text.setFill(Color.GREEN);\r\n                                        }\r\n                                        if (testword.letters.get(i).letterColor == LetterColor.Yellow) {\r\n                                            aniLetters[i].text.setFill(Color.YELLOW);\r\n                                        }\r\n                                        if (testword.letters.get(i).letterColor == LetterColor.Grey) {\r\n                                            aniLetters[i].text.setFill(Color.BLACK);\r\n                                        }\r\n                                    }\r\n                                    status = testword.getState();\r\n                                    if (status == 0) {\r\n                                        System.out.println(\"you win\");\r\n                                    }\r\n                                    if (line == 6) {\r\n                                        System.out.println(\"you lose\");\r\n                                    }\r\n                                    WordList.PossibleWord=GuessAlgorithm.updatePossibleWord(WordList.PossibleWord, testword.getState(), testword.WordContent.toString());\r\n                                    GuessAlgorithm.possibilities = WordList.PossibleWord.size();\r\n                                    double newE = GuessAlgorithm.calENow(WordList.PossibleWord);\r\n                                    double info = GuessAlgorithm.eNow - newE;\r\n\r\n                                    AniString infoString = new AniString(df2.format(info) + \"bits\", Color.WHITE);\r\n                                    pane.getChildren().add(infoString.ft.getNode());\r\n                                    AnchorPane.setLeftAnchor(infoString.ft.getNode(), 800.0);\r\n                                    AnchorPane.setTopAnchor(infoString.ft.getNode(), 125.0 + leftLine * 60.0);\r\n                                    infoString.ft.play();\r\n\r\n                                    GuessAlgorithm.eNow = newE ;\r\n                                    leftLine++;\r\n                                    aniStrings.add(new AniString(\"Possibilities:\", Color.WHITE));\r\n                                    pane.getChildren().add(aniStrings.get(aniStrings.size() - 1).ft.getNode());\r\n                                    AnchorPane.setLeftAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 150.0);\r\n                                    AnchorPane.setTopAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 125.0 + leftLine * 60.0);\r\n                                    aniStrings.get(aniStrings.size() - 1).ft.play();\r\n\r\n                                    aniStrings.add(new AniString(\"\" + GuessAlgorithm.possibilities , Color.WHITE));\r\n                                    pane.getChildren().add(aniStrings.get(aniStrings.size() - 1).ft.getNode());\r\n                                    AnchorPane.setLeftAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 150.0  + aniStrings.size() * 75.0);\r\n                                    AnchorPane.setTopAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 125.0 + leftLine * 60.0);\r\n                                    aniStrings.get(aniStrings.size() - 1).ft.play();\r\n\r\n                                    aniStrings.add(new AniString(\"/ E:\", Color.SKYBLUE));\r\n                                    pane.getChildren().add(aniStrings.get(aniStrings.size() - 1).ft.getNode());\r\n                                    AnchorPane.setLeftAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 150.0  + aniStrings.size() * 75.0);\r\n                                    AnchorPane.setTopAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 125.0 + leftLine * 60.0);\r\n                                    aniStrings.get(aniStrings.size() - 1).ft.play();\r\n\r\n                                    // 保留小数点后两位\r\n                                    DecimalFormat df = new DecimalFormat(\"#.00\");\r\n                                    aniStrings.add(new AniString(\"\" + df.format(GuessAlgorithm.eNow), Color.SKYBLUE));\r\n                                    pane.getChildren().add(aniStrings.get(aniStrings.size() - 1).ft.getNode());\r\n                                    AnchorPane.setLeftAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 120  + aniStrings.size() * 75.0);\r\n                                    AnchorPane.setTopAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 125.0 + leftLine * 60.0);\r\n                                    aniStrings.get(aniStrings.size() - 1).ft.play();\r\n\r\n                                    aniStrings.clear();\r\n\r\n                                    GuessAlgorithm.getWordScore(WordList.LegalWord, WordList.PossibleWord);\r\n                                  /*  for(int i=0; i<5&&i<GuessAlgorithm.wsList.size(); i++){\r\n                                        System.out.println(GuessAlgorithm.wsList.get(i).word+\" \"+GuessAlgorithm.wsList.get(i).entropy + \" \" + GuessAlgorithm.wsList.get(i).possible + \" \" + GuessAlgorithm.wsList.get(i).score);\r\n                                    }*/\r\n\r\n                                    for (int i = 0; i < 5; i++) {\r\n                                        testword.RemoveLetter();\r\n                                        pane.getChildren().remove(recommend[i].ft.getNode());\r\n                                        pane.getChildren().remove(recommendInfo[i].ft.getNode());\r\n                                        pane.getChildren().remove(recommendPossibility[i].ft.getNode());\r\n                                        AniString fadeRecommend = new AniString(recommend[i].string.getText(), Color.WHITE);\r\n                                        pane.getChildren().add(fadeRecommend.ft2.getNode());\r\n                                        AnchorPane.setLeftAnchor(fadeRecommend.ft2.getNode(), 900.0);\r\n                                        AnchorPane.setTopAnchor(fadeRecommend.ft2.getNode(), 180 + i * 60.0);\r\n                                        fadeRecommend.ft2.play();\r\n                                        AniString fadeRecommendInfo = new AniString(recommendInfo[i].string.getText(), Color.WHITE);\r\n                                        pane.getChildren().add(fadeRecommendInfo.ft2.getNode());\r\n                                        AnchorPane.setLeftAnchor(fadeRecommendInfo.ft2.getNode(), 900.0 + 150);\r\n                                        AnchorPane.setTopAnchor(fadeRecommendInfo.ft2.getNode(), 180 + i * 60.0);\r\n                                        fadeRecommendInfo.ft2.play();\r\n                                        AniString fadeRecommendPossibility = new AniString(recommendPossibility[i].string.getText(), Color.WHITE);\r\n                                        pane.getChildren().add(fadeRecommendPossibility.ft2.getNode());\r\n                                        AnchorPane.setLeftAnchor(fadeRecommendPossibility.ft2.getNode(), 900.0 + 240);\r\n                                        AnchorPane.setTopAnchor(fadeRecommendPossibility.ft2.getNode(), 180 + i * 60.0);\r\n                                        fadeRecommendPossibility.ft2.play();\r\n                                    }\r\n                                    for(int i=0; i<5; i++){\r\n                                        testword.AddLetter(GuessAlgorithm.wsList.get(0).word.charAt(i));\r\n                                       // System.out.println(\"wtf:\"+testword.WordContent);\r\n                                    }\r\n                                    for(int i=0; i<5&&i<GuessAlgorithm.wsList.size(); i++){\r\n                                        recommend[i] = new AniString(GuessAlgorithm.wsList.get(i).word, Color.WHITE);\r\n                                        pane.getChildren().add(recommend[i].ft.getNode());\r\n                                        AnchorPane.setLeftAnchor(recommend[i].ft.getNode(), 900.0);\r\n                                        AnchorPane.setTopAnchor(recommend[i].ft.getNode(), 180.0 + i * 60.0);\r\n                                        recommend[i].ft.play();\r\n                                        recommendInfo[i] = new AniString(df2.format(GuessAlgorithm.wsList.get(i).entropy), Color.WHITE);\r\n                                        pane.getChildren().add(recommendInfo[i].ft.getNode());\r\n                                        AnchorPane.setLeftAnchor(recommendInfo[i].ft.getNode(), 900.0 + 150.0);\r\n                                        AnchorPane.setTopAnchor(recommendInfo[i].ft.getNode(), 180.0 + i * 60.0);\r\n                                        recommendInfo[i].ft.play();\r\n                                        recommendPossibility[i] = new AniString(df6.format(GuessAlgorithm.wsList.get(i).possible), Color.WHITE);\r\n                                        pane.getChildren().add(recommendPossibility[i].ft.getNode());\r\n                                        AnchorPane.setLeftAnchor(recommendPossibility[i].ft.getNode(), 900.0 + 240.0);\r\n                                        AnchorPane.setTopAnchor(recommendPossibility[i].ft.getNode(), 180.0 + i * 60.0);\r\n                                        recommendPossibility[i].ft.play();\r\n                                    }\r\n\r\n                                    System.out.println(\"chancesize\"+infoChance.size());\r\n\r\n                                    for(int i=0; i<infoChance.size(); i++){\r\n                                        pane.getChildren().remove(infoChance.get(i).ft.getNode());\r\n                                    }\r\n\r\n                                    System.out.println(\"wordsize\"+infoWord.size());\r\n                                    for (int i=0; i<infoWord.size(); i++){\r\n                                        pane.getChildren().remove(infoWord.get(i).ft.getNode());\r\n                                    }\r\n\r\n                                    System.out.println(\"clear\");\r\n\r\n                                    GuessAlgorithm.getShowList(WordList.PossibleWord);\r\n\r\n                                    infoWord.clear();\r\n\r\n                                    for(int i=0; i<5&&i<GuessAlgorithm.PossibleWordChance.size(); i++){\r\n                                        infoWord.add(new AniString(GuessAlgorithm.PossibleWordChance.get(i).word, Color.WHITE));\r\n                                    }\r\n                                    if(GuessAlgorithm.PossibleWordChance.size()>5)\r\n                                    for(int i=0; i<5; i++){\r\n                                        infoWord.add(new AniString(GuessAlgorithm.PossibleWordChance.get(GuessAlgorithm.PossibleWordChance.size()-6+i).word, Color.WHITE));\r\n                                    }\r\n\r\n                                    for (int i=0; i<infoWord.size(); i++){\r\n                                        pane.getChildren().add(infoWord.get(i).ft.getNode());\r\n                                        AnchorPane.setLeftAnchor(infoWord.get(i).ft.getNode(), 450.0 + (i/5) * 400.0);\r\n                                        AnchorPane.setTopAnchor(infoWord.get(i).ft.getNode(), 500 + (i%5) * 60.0);\r\n                                        infoWord.get(i).ft.play();\r\n                                    }\r\n\r\n                                    infoChance.clear();\r\n\r\n                                    for(int i=0; i<5&&i<GuessAlgorithm.PossibleWordChance.size(); i++){\r\n                                        infoChance.add(new AniRectangular(300*GuessAlgorithm.PossibleWordChance.get(i).fill, 30.0));\r\n                                //        System.out.println(GuessAlgorithm.PossibleWordChance.get(i).fill);\r\n                                    }\r\n                                    if(GuessAlgorithm.PossibleWordChance.size()>5)\r\n                                    for(int i=0; i<5; i++){\r\n                                        infoChance.add(new AniRectangular( 300*GuessAlgorithm.PossibleWordChance.get(GuessAlgorithm.PossibleWordChance.size()-6+i).fill, 30.0));\r\n                                 //       System.out.println(GuessAlgorithm.PossibleWordChance.get(GuessAlgorithm.PossibleWordChance.size()-6+i).fill);\r\n                                    }\r\n                                    for (int i=0; i<infoChance.size(); i++){\r\n                                        pane.getChildren().add(infoChance.get(i).ft.getNode());\r\n                                        AnchorPane.setLeftAnchor(infoChance.get(i).ft.getNode(), 450 + 75.0 + (i/5) * 400.0);\r\n                                        AnchorPane.setTopAnchor(infoChance.get(i).ft.getNode(), 500 +(i%5) * 60.0);\r\n                                        infoChance.get(i).ft.play();\r\n                                    }\r\n\r\n                                } else {\r\n                                    System.out.println(\"Not in the list\");\r\n                                }\r\n\r\n                            } catch (Exception e) {\r\n                                //throw new RuntimeException(e);\r\n                                System.out.println(\"Not in the list\");\r\n                                for (int i = 0; i < 5; i++) {\r\n                                    testword.RemoveLetter();\r\n                                }\r\n                            }\r\n                        } else {\r\n                            System.out.println(\"not enough letter!\");\r\n                        }\r\n                    }\r\n\r\n                } catch (Exception e) {\r\n                    throw new RuntimeException(e);\r\n                }\r\n\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    public static void backMainMenu() throws Exception {\r\n        mainWindow.setScene(mainMenuScene);\r\n        mainWindow.setTitle(\"WORDLE-EX\");\r\n        mainWindow.show();\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>GBK
===================================================================
diff --git a/src/main/Main.java b/src/main/Main.java
--- a/src/main/Main.java	(revision 54e7f23f7b8f207ad4fe367378b1a16c837e2161)
+++ b/src/main/Main.java	(date 1655133172377)
@@ -104,7 +104,6 @@
         mainWindow = menuStage;
         mainMenuLayout = FXMLLoader.load(getClass().getResource("resources/menuScene.fxml"));
         mainMenuScene = new Scene(mainMenuLayout, 1280, 800);
-
         menuStage.setScene(mainMenuScene);
         menuStage.show();
     }
@@ -124,7 +123,6 @@
 
         AnchorPane pane = new AnchorPane();
 
-
         Button button = new Button("测试");
         button.setOnKeyPressed(new EventHandler<KeyEvent>() {
             private int index = 0;
@@ -161,7 +159,6 @@
                                     line++;
                                     testword.CheckAns(ans);
                                     System.out.println(testword.ShowColor());
-                                    MenuScene.changeButtonQColor(1);
                                     for (int i = 0; i < 5; i++) {
                                         if (testword.letters.get(i).letterColor == LetterColor.Green) {
                                             aniLetters[i].text.setFill(Color.GREEN);
@@ -637,7 +634,6 @@
                 System.out.println(kCode.getName());
                 char toAddLetter;
                 try {
-
                     if (kCode == KeyCode.ENTER) {
                         if (testword.letters.size() == 5) {
                             try {
Index: src/util/MenuScene.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.geometry.Insets;\r\nimport javafx.scene.Cursor;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.input.KeyCode;\r\nimport javafx.scene.input.KeyEvent;\r\nimport javafx.scene.layout.Background;\r\nimport javafx.scene.layout.BackgroundFill;\r\nimport javafx.scene.layout.BackgroundImage;\r\nimport javafx.scene.layout.CornerRadii;\r\nimport javafx.scene.paint.Paint;\r\n\r\nimport java.awt.*;\r\nimport java.io.FileInputStream;\r\nimport java.io.FileNotFoundException;\r\n\r\npublic class MenuScene {\r\n\r\n    @FXML\r\n    private static Button ButtonQ;\r\n\r\n    @FXML\r\n    private Button ButtonW;\r\n\r\n    @FXML\r\n    private Button ButtonE;\r\n\r\n    @FXML\r\n    private Button ButtonR;\r\n\r\n    @FXML\r\n    private Button ButtonT;\r\n\r\n    @FXML\r\n    private Button ButtonY;\r\n\r\n    @FXML\r\n    private Button ButtonU;\r\n\r\n    @FXML\r\n    private Button ButtonI;\r\n\r\n    @FXML\r\n    private Button ButtonO;\r\n\r\n    @FXML\r\n    private Button ButtonP;\r\n\r\n    @FXML\r\n    private Button ButtonA;\r\n\r\n    @FXML\r\n    private Button ButtonS;\r\n\r\n    @FXML\r\n    private Button ButtonD;\r\n\r\n    @FXML\r\n    private Button ButtonF;\r\n\r\n    @FXML\r\n    private Button ButtonG;\r\n\r\n    @FXML\r\n    private Button ButtonH;\r\n\r\n    @FXML\r\n    private Button ButtonJ;\r\n\r\n    @FXML\r\n    private Button ButtonK;\r\n\r\n    @FXML\r\n    private Button ButtonL;\r\n\r\n    @FXML\r\n    private Button ButtonZ;\r\n\r\n    @FXML\r\n    private Button ButtonX;\r\n\r\n    @FXML\r\n    private Button ButtonC;\r\n\r\n    @FXML\r\n    private Button ButtonV;\r\n\r\n    @FXML\r\n    private Button ButtonB;\r\n\r\n    @FXML\r\n    private Button ButtonN;\r\n\r\n    @FXML\r\n    private Button ButtonM;\r\n\r\n    @FXML\r\n    private Button ButtonENTER;\r\n\r\n    @FXML\r\n    private Button ButtonBackspace;\r\n\r\n    /**\r\n     * 当鼠标进入按钮区域改变鼠标样式的方法。\r\n     */\r\n    public void mouseOnButton(){\r\n       // Main.getMainMenuScene().setCursor(Cursor.HAND);\r\n        Main.getMainWindow().getScene().setCursor(Cursor.HAND);\r\n    }\r\n    /**\r\n     * 当鼠标离开按钮区域改变鼠标样式的方法。\r\n     */\r\n    public void mouseLeaveButton(){\r\n        // Main.getMainMenuScene().setCursor(Cursor.DEFAULT);\r\n        Main.getMainWindow().getScene().setCursor(Cursor.DEFAULT);\r\n      }\r\n\r\n      public void testMethod(){\r\n        System.out.println(\"testMethod\");\r\n          }\r\n\r\n    /**\r\n     * 开始普通模式的方法。\r\n     *\r\n     * @throws Exception 异常\r\n     */\r\n    public void startNormalButton() throws Exception {\r\n        Parent normalLayout = FXMLLoader.load(Main.class.getResource(\"/resources/mainScene.fxml\"));\r\n        Main.setMainMenuScene(new Scene(normalLayout));\r\n        Main.startNormalMode();\r\n    }\r\n\r\n    /**\r\n     * 开始进阶模式的方法。\r\n     *\r\n     * @throws Exception 异常\r\n     */\r\n    public void startAdvanceButton() throws Exception {\r\n        Parent advanceLayout = FXMLLoader.load(Main.class.getResource(\"/resources/advanceScene.fxml\"));\r\n        Main.setMainMenuScene(new Scene(advanceLayout));\r\n        Main.startAdvanceMode();\r\n    }\r\n\r\n    public void startAIShowButton() throws Exception {\r\n        Parent aiShowLayout = FXMLLoader.load(Main.class.getResource(\"/resources/aiShowScene.fxml\"));\r\n        Main.setMainMenuScene(new Scene(aiShowLayout));\r\n        Main.startAIShowMode();\r\n    }\r\n\r\n    /**\r\n     * 回到菜单\r\n     *\r\n     * @throws Exception 异常\r\n     */\r\n    public void backToMenu() throws Exception {\r\n        GuessAlgorithm.isFirst= true;\r\n        Parent normalLayout = FXMLLoader.load(Main.class.getResource(\"/resources/menuScene.fxml\"));\r\n        Main.setMainMenuScene(new Scene(normalLayout));\r\n        Main.backMainMenu();\r\n    }\r\n\r\n\r\n\r\n    public static void changeButtonQColor(int color) throws Exception{\r\n        if(color==1)\r\n        {\r\n            BackgroundFill background_fill = new BackgroundFill(Paint.valueOf(\"#808080\"),new CornerRadii(5),new Insets(10));\r\n            Background background = new Background(background_fill);\r\n            ButtonQ.setBackground(background);\r\n            System.out.println(\"changeButtonQColor\");\r\n        }\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>GBK
===================================================================
diff --git a/src/util/MenuScene.java b/src/util/MenuScene.java
--- a/src/util/MenuScene.java	(revision 54e7f23f7b8f207ad4fe367378b1a16c837e2161)
+++ b/src/util/MenuScene.java	(date 1655131405050)
@@ -21,7 +21,7 @@
 public class MenuScene {
 
     @FXML
-    private static Button ButtonQ;
+    private Button ButtonQ;
 
     @FXML
     private Button ButtonW;
@@ -165,10 +165,10 @@
 
 
 
-    public static void changeButtonQColor(int color) throws Exception{
+    public void changeButtonQColor(int color) throws Exception{
         if(color==1)
         {
-            BackgroundFill background_fill = new BackgroundFill(Paint.valueOf("#808080"),new CornerRadii(5),new Insets(10));
+            BackgroundFill background_fill = new BackgroundFill(Paint.valueOf("#808080"),new CornerRadii(1),new Insets(1));
             Background background = new Background(background_fill);
             ButtonQ.setBackground(background);
             System.out.println("changeButtonQColor");
Index: target/classes/resources/mainScene.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<?import javafx.scene.control.Button?>\r\n<?import javafx.scene.image.Image?>\r\n<?import javafx.scene.image.ImageView?>\r\n<?import javafx.scene.layout.AnchorPane?>\r\n<?import javafx.scene.layout.ColumnConstraints?>\r\n<?import javafx.scene.layout.GridPane?>\r\n<?import javafx.scene.layout.RowConstraints?>\r\n<?import javafx.scene.shape.Rectangle?>\r\n<?import javafx.scene.text.Font?>\r\n\r\n<AnchorPane prefHeight=\"800.0\" prefWidth=\"1280.0\" xmlns=\"http://javafx.com/javafx/8.0.171\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"MenuScene\">\r\n   <children>\r\n      <ImageView fitHeight=\"800.0\" fitWidth=\"1280.0\">\r\n         <image>\r\n            <Image url=\"@normalMode.png\" />\r\n         </image>\r\n      </ImageView>\r\n        <Rectangle arcHeight=\"5.0\" arcWidth=\"5.0\" fill=\"DODGERBLUE\" height=\"54.0\" layoutX=\"38.0\" layoutY=\"35.0\" stroke=\"BLACK\" strokeType=\"INSIDE\" width=\"120.0\" />\r\n      <Button layoutX=\"38.0\" layoutY=\"35.0\" mnemonicParsing=\"false\" onMouseClicked=\"#backToMenu\" onMouseEntered=\"#mouseOnButton\" onMouseExited=\"#mouseLeaveButton\" opacity=\"0.0\" prefHeight=\"54.0\" prefWidth=\"120.0\" text=\"Button\" />\r\n      <GridPane layoutX=\"244.0\" layoutY=\"508.0\" prefHeight=\"108.0\" prefWidth=\"793.0\">\r\n        <columnConstraints>\r\n            <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"150.0\" minWidth=\"10.0\" prefWidth=\"150.0\" />\r\n            <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"150.0\" minWidth=\"10.0\" prefWidth=\"150.0\" />\r\n            <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"150.0\" minWidth=\"10.0\" prefWidth=\"150.0\" />\r\n            <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"150.0\" minWidth=\"10.0\" prefWidth=\"150.0\" />\r\n            <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"150.0\" minWidth=\"10.0\" prefWidth=\"150.0\" />\r\n            <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"150.0\" minWidth=\"10.0\" prefWidth=\"150.0\" />\r\n            <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"150.0\" minWidth=\"10.0\" prefWidth=\"150.0\" />\r\n            <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"150.0\" minWidth=\"10.0\" prefWidth=\"150.0\" />\r\n            <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"150.0\" minWidth=\"10.0\" prefWidth=\"150.0\" />\r\n          <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"150.0\" minWidth=\"10.0\" prefWidth=\"150.0\" />\r\n        </columnConstraints>\r\n        <rowConstraints>\r\n          <RowConstraints minHeight=\"10.0\" prefHeight=\"30.0\" vgrow=\"SOMETIMES\" />\r\n        </rowConstraints>\r\n         <children>\r\n            <Button fx:id=\"ButtonQ\" mnemonicParsing=\"false\" prefHeight=\"65.0\" prefWidth=\"71.0\" text=\"Q\">\r\n               <font>\r\n                  <Font size=\"20.0\" />\r\n               </font>\r\n            </Button>\r\n            <Button fx:id=\"ButtonW\" layoutX=\"10.0\" layoutY=\"25.0\" mnemonicParsing=\"false\" prefHeight=\"65.0\" prefWidth=\"71.0\" text=\"W\" GridPane.columnIndex=\"1\">\r\n               <font>\r\n                  <Font size=\"20.0\" />\r\n               </font>\r\n            </Button>\r\n            <Button fx:id=\"ButtonE\" layoutX=\"108.0\" layoutY=\"25.0\" mnemonicParsing=\"false\" prefHeight=\"65.0\" prefWidth=\"71.0\" text=\"E\" GridPane.columnIndex=\"2\">\r\n               <font>\r\n                  <Font size=\"20.0\" />\r\n               </font>\r\n            </Button>\r\n            <Button fx:id=\"ButtonR\" layoutX=\"206.0\" layoutY=\"25.0\" mnemonicParsing=\"false\" prefHeight=\"65.0\" prefWidth=\"71.0\" text=\"R\" GridPane.columnIndex=\"3\">\r\n               <font>\r\n                  <Font size=\"20.0\" />\r\n               </font>\r\n            </Button>\r\n            <Button fx:id=\"ButtonT\" layoutX=\"304.0\" layoutY=\"25.0\" mnemonicParsing=\"false\" prefHeight=\"65.0\" prefWidth=\"71.0\" text=\"T\" textAlignment=\"CENTER\" GridPane.columnIndex=\"4\">\r\n               <font>\r\n                  <Font size=\"20.0\" />\r\n               </font>\r\n            </Button>\r\n            <Button fx:id=\"ButtonY\" layoutX=\"403.0\" layoutY=\"25.0\" mnemonicParsing=\"false\" prefHeight=\"65.0\" prefWidth=\"71.0\" text=\"Y\" GridPane.columnIndex=\"5\">\r\n               <font>\r\n                  <Font size=\"20.0\" />\r\n               </font>\r\n            </Button>\r\n            <Button fx:id=\"ButtonU\" layoutX=\"502.0\" layoutY=\"25.0\" mnemonicParsing=\"false\" prefHeight=\"65.0\" prefWidth=\"71.0\" text=\"U\" GridPane.columnIndex=\"6\">\r\n               <font>\r\n                  <Font size=\"20.0\" />\r\n               </font>\r\n            </Button>\r\n            <Button fx:id=\"ButtonI\" layoutX=\"601.0\" layoutY=\"25.0\" mnemonicParsing=\"false\" prefHeight=\"65.0\" prefWidth=\"71.0\" text=\"I\" GridPane.columnIndex=\"7\">\r\n               <font>\r\n                  <Font size=\"20.0\" />\r\n               </font>\r\n            </Button>\r\n            <Button fx:id=\"ButtonO\" layoutX=\"700.0\" layoutY=\"25.0\" mnemonicParsing=\"false\" prefHeight=\"65.0\" prefWidth=\"71.0\" text=\"O\" GridPane.columnIndex=\"8\">\r\n               <font>\r\n                  <Font size=\"20.0\" />\r\n               </font>\r\n            </Button>\r\n            <Button fx:id=\"ButtonP\" layoutX=\"799.0\" layoutY=\"25.0\" mnemonicParsing=\"false\" prefHeight=\"65.0\" prefWidth=\"71.0\" text=\"P\" GridPane.columnIndex=\"9\">\r\n               <font>\r\n                  <Font size=\"20.0\" />\r\n               </font>\r\n            </Button>\r\n         </children>\r\n      </GridPane>\r\n      <GridPane layoutX=\"285.0\" layoutY=\"584.0\" prefHeight=\"108.0\" prefWidth=\"712.0\">\r\n         <columnConstraints>\r\n            <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"150.0\" minWidth=\"10.0\" prefWidth=\"150.0\" />\r\n            <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"150.0\" minWidth=\"10.0\" prefWidth=\"150.0\" />\r\n            <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"150.0\" minWidth=\"10.0\" prefWidth=\"150.0\" />\r\n            <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"150.0\" minWidth=\"10.0\" prefWidth=\"150.0\" />\r\n            <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"150.0\" minWidth=\"10.0\" prefWidth=\"150.0\" />\r\n            <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"150.0\" minWidth=\"10.0\" prefWidth=\"150.0\" />\r\n            <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"150.0\" minWidth=\"10.0\" prefWidth=\"150.0\" />\r\n            <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"150.0\" minWidth=\"10.0\" prefWidth=\"150.0\" />\r\n            <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"150.0\" minWidth=\"10.0\" prefWidth=\"150.0\" />\r\n         </columnConstraints>\r\n         <rowConstraints>\r\n            <RowConstraints minHeight=\"10.0\" prefHeight=\"30.0\" vgrow=\"SOMETIMES\" />\r\n         </rowConstraints>\r\n         <children>\r\n            <Button fx:id=\"ButtonA\" mnemonicParsing=\"false\" prefHeight=\"65.0\" prefWidth=\"71.0\" text=\"A\">\r\n               <font>\r\n                  <Font size=\"20.0\" />\r\n               </font>\r\n            </Button>\r\n            <Button fx:id=\"ButtonS\" layoutX=\"10.0\" layoutY=\"25.0\" mnemonicParsing=\"false\" prefHeight=\"65.0\" prefWidth=\"71.0\" text=\"S\" GridPane.columnIndex=\"1\">\r\n               <font>\r\n                  <Font size=\"20.0\" />\r\n               </font>\r\n            </Button>\r\n            <Button fx:id=\"ButtonD\" layoutX=\"108.0\" layoutY=\"25.0\" mnemonicParsing=\"false\" prefHeight=\"65.0\" prefWidth=\"71.0\" text=\"D\" GridPane.columnIndex=\"2\">\r\n               <font>\r\n                  <Font size=\"20.0\" />\r\n               </font>\r\n            </Button>\r\n            <Button fx:id=\"ButtonF\" layoutX=\"206.0\" layoutY=\"25.0\" mnemonicParsing=\"false\" prefHeight=\"65.0\" prefWidth=\"71.0\" text=\"F\" GridPane.columnIndex=\"3\">\r\n               <font>\r\n                  <Font size=\"20.0\" />\r\n               </font>\r\n            </Button>\r\n            <Button fx:id=\"ButtonG\" layoutX=\"304.0\" layoutY=\"25.0\" mnemonicParsing=\"false\" prefHeight=\"65.0\" prefWidth=\"71.0\" text=\"G\" textAlignment=\"CENTER\" GridPane.columnIndex=\"4\">\r\n               <font>\r\n                  <Font size=\"20.0\" />\r\n               </font>\r\n            </Button>\r\n            <Button fx:id=\"ButtonH\" layoutX=\"403.0\" layoutY=\"25.0\" mnemonicParsing=\"false\" prefHeight=\"65.0\" prefWidth=\"71.0\" text=\"H\" GridPane.columnIndex=\"5\">\r\n               <font>\r\n                  <Font size=\"20.0\" />\r\n               </font>\r\n            </Button>\r\n            <Button fx:id=\"ButtonJ\" layoutX=\"502.0\" layoutY=\"25.0\" mnemonicParsing=\"false\" prefHeight=\"65.0\" prefWidth=\"71.0\" text=\"J\" GridPane.columnIndex=\"6\">\r\n               <font>\r\n                  <Font size=\"20.0\" />\r\n               </font>\r\n            </Button>\r\n            <Button fx:id=\"ButtonK\" layoutX=\"601.0\" layoutY=\"25.0\" mnemonicParsing=\"false\" prefHeight=\"65.0\" prefWidth=\"71.0\" text=\"K\" GridPane.columnIndex=\"7\">\r\n               <font>\r\n                  <Font size=\"20.0\" />\r\n               </font>\r\n            </Button>\r\n            <Button fx:id=\"ButtonL\" layoutX=\"700.0\" layoutY=\"25.0\" mnemonicParsing=\"false\" prefHeight=\"65.0\" prefWidth=\"71.0\" text=\"L\" GridPane.columnIndex=\"8\">\r\n               <font>\r\n                  <Font size=\"20.0\" />\r\n               </font>\r\n            </Button>\r\n         </children>\r\n      </GridPane>\r\n      <GridPane layoutX=\"363.0\" layoutY=\"663.0\" prefHeight=\"102.0\" prefWidth=\"557.0\">\r\n         <columnConstraints>\r\n            <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"150.0\" minWidth=\"10.0\" prefWidth=\"150.0\" />\r\n            <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"150.0\" minWidth=\"10.0\" prefWidth=\"150.0\" />\r\n            <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"150.0\" minWidth=\"10.0\" prefWidth=\"150.0\" />\r\n            <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"150.0\" minWidth=\"10.0\" prefWidth=\"150.0\" />\r\n            <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"150.0\" minWidth=\"10.0\" prefWidth=\"150.0\" />\r\n            <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"150.0\" minWidth=\"10.0\" prefWidth=\"150.0\" />\r\n            <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"150.0\" minWidth=\"10.0\" prefWidth=\"150.0\" />\r\n         </columnConstraints>\r\n         <rowConstraints>\r\n            <RowConstraints minHeight=\"10.0\" prefHeight=\"30.0\" vgrow=\"SOMETIMES\" />\r\n         </rowConstraints>\r\n         <children>\r\n            <Button fx:id=\"ButtonZ\" layoutX=\"10.0\" layoutY=\"25.0\" mnemonicParsing=\"false\" prefHeight=\"65.0\" prefWidth=\"71.0\" text=\"Z\">\r\n               <font>\r\n                  <Font size=\"20.0\" />\r\n               </font>\r\n            </Button>\r\n            <Button fx:id=\"ButtonX\" layoutX=\"108.0\" layoutY=\"25.0\" mnemonicParsing=\"false\" prefHeight=\"65.0\" prefWidth=\"71.0\" text=\"X\" GridPane.columnIndex=\"1\">\r\n               <font>\r\n                  <Font size=\"20.0\" />\r\n               </font>\r\n            </Button>\r\n            <Button fx:id=\"ButtonC\" layoutX=\"206.0\" layoutY=\"25.0\" mnemonicParsing=\"false\" prefHeight=\"65.0\" prefWidth=\"71.0\" text=\"C\" GridPane.columnIndex=\"2\">\r\n               <font>\r\n                  <Font size=\"20.0\" />\r\n               </font>\r\n            </Button>\r\n            <Button fx:id=\"ButtonV\" layoutX=\"304.0\" layoutY=\"25.0\" mnemonicParsing=\"false\" prefHeight=\"65.0\" prefWidth=\"71.0\" text=\"V\" textAlignment=\"CENTER\" GridPane.columnIndex=\"3\">\r\n               <font>\r\n                  <Font size=\"20.0\" />\r\n               </font>\r\n            </Button>\r\n            <Button fx:id=\"ButtonB\" layoutX=\"403.0\" layoutY=\"25.0\" mnemonicParsing=\"false\" prefHeight=\"65.0\" prefWidth=\"71.0\" text=\"B\" GridPane.columnIndex=\"4\">\r\n               <font>\r\n                  <Font size=\"20.0\" />\r\n               </font>\r\n            </Button>\r\n            <Button fx:id=\"ButtonN\" layoutX=\"502.0\" layoutY=\"25.0\" mnemonicParsing=\"false\" prefHeight=\"65.0\" prefWidth=\"71.0\" text=\"N\" GridPane.columnIndex=\"5\">\r\n               <font>\r\n                  <Font size=\"20.0\" />\r\n               </font>\r\n            </Button>\r\n            <Button fx:id=\"ButtonM\" layoutX=\"601.0\" layoutY=\"25.0\" mnemonicParsing=\"false\" prefHeight=\"65.0\" prefWidth=\"69.0\" text=\"M\" GridPane.columnIndex=\"6\">\r\n               <font>\r\n                  <Font size=\"20.0\" />\r\n               </font>\r\n            </Button>\r\n         </children>\r\n      </GridPane>\r\n      <Button fx:id=\"ButtonENTER\" layoutX=\"241.0\" layoutY=\"682.0\" mnemonicParsing=\"false\" prefHeight=\"65.0\" prefWidth=\"114.0\" text=\"ENTER\">\r\n         <font>\r\n            <Font size=\"20.0\" />\r\n         </font>\r\n      </Button>\r\n      <Button fx:id=\"ButtonBackspace\" layoutX=\"920.0\" layoutY=\"682.0\" mnemonicParsing=\"false\" prefHeight=\"65.0\" prefWidth=\"107.0\" stylesheets=\"@style.css\">\r\n         <font>\r\n            <Font size=\"20.0\" />\r\n         </font>\r\n      </Button>\r\n   </children>\r\n</AnchorPane>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/resources/mainScene.fxml b/target/classes/resources/mainScene.fxml
--- a/target/classes/resources/mainScene.fxml	(revision 54e7f23f7b8f207ad4fe367378b1a16c837e2161)
+++ b/target/classes/resources/mainScene.fxml	(date 1655132914455)
@@ -36,7 +36,7 @@
           <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES" />
         </rowConstraints>
          <children>
-            <Button fx:id="ButtonQ" mnemonicParsing="false" prefHeight="65.0" prefWidth="71.0" text="Q">
+            <Button fx:id="ButtonQ" mnemonicParsing="false" onMouseClicked="#changeButtonQColor" prefHeight="65.0" prefWidth="71.0" text="Q">
                <font>
                   <Font size="20.0" />
                </font>
Index: target/classes/mainScene.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<?import javafx.scene.control.Button?>\r\n<?import javafx.scene.image.Image?>\r\n<?import javafx.scene.image.ImageView?>\r\n<?import javafx.scene.layout.AnchorPane?>\r\n<?import javafx.scene.layout.ColumnConstraints?>\r\n<?import javafx.scene.layout.GridPane?>\r\n<?import javafx.scene.layout.RowConstraints?>\r\n<?import javafx.scene.shape.Rectangle?>\r\n<?import javafx.scene.text.Font?>\r\n\r\n<AnchorPane prefHeight=\"800.0\" prefWidth=\"1280.0\" xmlns=\"http://javafx.com/javafx/8.0.171\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"MenuScene\">\r\n   <children>\r\n      <ImageView fitHeight=\"800.0\" fitWidth=\"1280.0\">\r\n         <image>\r\n            <Image url=\"@normalMode.png\" />\r\n         </image>\r\n      </ImageView>\r\n        <Rectangle arcHeight=\"5.0\" arcWidth=\"5.0\" fill=\"DODGERBLUE\" height=\"54.0\" layoutX=\"38.0\" layoutY=\"35.0\" stroke=\"BLACK\" strokeType=\"INSIDE\" width=\"120.0\" />\r\n      <Button layoutX=\"38.0\" layoutY=\"35.0\" mnemonicParsing=\"false\" onMouseClicked=\"#backToMenu\" onMouseEntered=\"#mouseOnButton\" onMouseExited=\"#mouseLeaveButton\" opacity=\"0.0\" prefHeight=\"54.0\" prefWidth=\"120.0\" text=\"Button\" />\r\n      <GridPane layoutX=\"244.0\" layoutY=\"508.0\" prefHeight=\"108.0\" prefWidth=\"793.0\">\r\n        <columnConstraints>\r\n            <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"150.0\" minWidth=\"10.0\" prefWidth=\"150.0\" />\r\n            <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"150.0\" minWidth=\"10.0\" prefWidth=\"150.0\" />\r\n            <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"150.0\" minWidth=\"10.0\" prefWidth=\"150.0\" />\r\n            <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"150.0\" minWidth=\"10.0\" prefWidth=\"150.0\" />\r\n            <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"150.0\" minWidth=\"10.0\" prefWidth=\"150.0\" />\r\n            <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"150.0\" minWidth=\"10.0\" prefWidth=\"150.0\" />\r\n            <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"150.0\" minWidth=\"10.0\" prefWidth=\"150.0\" />\r\n            <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"150.0\" minWidth=\"10.0\" prefWidth=\"150.0\" />\r\n            <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"150.0\" minWidth=\"10.0\" prefWidth=\"150.0\" />\r\n          <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"150.0\" minWidth=\"10.0\" prefWidth=\"150.0\" />\r\n        </columnConstraints>\r\n        <rowConstraints>\r\n          <RowConstraints minHeight=\"10.0\" prefHeight=\"30.0\" vgrow=\"SOMETIMES\" />\r\n        </rowConstraints>\r\n         <children>\r\n            <Button fx:id=\"ButtonQ\" mnemonicParsing=\"false\" prefHeight=\"65.0\" prefWidth=\"71.0\" text=\"Q\">\r\n               <font>\r\n                  <Font size=\"20.0\" />\r\n               </font>\r\n            </Button>\r\n            <Button fx:id=\"ButtonW\" layoutX=\"10.0\" layoutY=\"25.0\" mnemonicParsing=\"false\" prefHeight=\"65.0\" prefWidth=\"71.0\" text=\"W\" GridPane.columnIndex=\"1\">\r\n               <font>\r\n                  <Font size=\"20.0\" />\r\n               </font>\r\n            </Button>\r\n            <Button fx:id=\"ButtonE\" layoutX=\"108.0\" layoutY=\"25.0\" mnemonicParsing=\"false\" prefHeight=\"65.0\" prefWidth=\"71.0\" text=\"E\" GridPane.columnIndex=\"2\">\r\n               <font>\r\n                  <Font size=\"20.0\" />\r\n               </font>\r\n            </Button>\r\n            <Button fx:id=\"ButtonR\" layoutX=\"206.0\" layoutY=\"25.0\" mnemonicParsing=\"false\" prefHeight=\"65.0\" prefWidth=\"71.0\" text=\"R\" GridPane.columnIndex=\"3\">\r\n               <font>\r\n                  <Font size=\"20.0\" />\r\n               </font>\r\n            </Button>\r\n            <Button fx:id=\"ButtonT\" layoutX=\"304.0\" layoutY=\"25.0\" mnemonicParsing=\"false\" prefHeight=\"65.0\" prefWidth=\"71.0\" text=\"T\" textAlignment=\"CENTER\" GridPane.columnIndex=\"4\">\r\n               <font>\r\n                  <Font size=\"20.0\" />\r\n               </font>\r\n            </Button>\r\n            <Button fx:id=\"ButtonY\" layoutX=\"403.0\" layoutY=\"25.0\" mnemonicParsing=\"false\" prefHeight=\"65.0\" prefWidth=\"71.0\" text=\"Y\" GridPane.columnIndex=\"5\">\r\n               <font>\r\n                  <Font size=\"20.0\" />\r\n               </font>\r\n            </Button>\r\n            <Button fx:id=\"ButtonU\" layoutX=\"502.0\" layoutY=\"25.0\" mnemonicParsing=\"false\" prefHeight=\"65.0\" prefWidth=\"71.0\" text=\"U\" GridPane.columnIndex=\"6\">\r\n               <font>\r\n                  <Font size=\"20.0\" />\r\n               </font>\r\n            </Button>\r\n            <Button fx:id=\"ButtonI\" layoutX=\"601.0\" layoutY=\"25.0\" mnemonicParsing=\"false\" prefHeight=\"65.0\" prefWidth=\"71.0\" text=\"I\" GridPane.columnIndex=\"7\">\r\n               <font>\r\n                  <Font size=\"20.0\" />\r\n               </font>\r\n            </Button>\r\n            <Button fx:id=\"ButtonO\" layoutX=\"700.0\" layoutY=\"25.0\" mnemonicParsing=\"false\" prefHeight=\"65.0\" prefWidth=\"71.0\" text=\"O\" GridPane.columnIndex=\"8\">\r\n               <font>\r\n                  <Font size=\"20.0\" />\r\n               </font>\r\n            </Button>\r\n            <Button fx:id=\"ButtonP\" layoutX=\"799.0\" layoutY=\"25.0\" mnemonicParsing=\"false\" prefHeight=\"65.0\" prefWidth=\"71.0\" text=\"P\" GridPane.columnIndex=\"9\">\r\n               <font>\r\n                  <Font size=\"20.0\" />\r\n               </font>\r\n            </Button>\r\n         </children>\r\n      </GridPane>\r\n      <GridPane layoutX=\"285.0\" layoutY=\"584.0\" prefHeight=\"108.0\" prefWidth=\"712.0\">\r\n         <columnConstraints>\r\n            <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"150.0\" minWidth=\"10.0\" prefWidth=\"150.0\" />\r\n            <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"150.0\" minWidth=\"10.0\" prefWidth=\"150.0\" />\r\n            <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"150.0\" minWidth=\"10.0\" prefWidth=\"150.0\" />\r\n            <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"150.0\" minWidth=\"10.0\" prefWidth=\"150.0\" />\r\n            <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"150.0\" minWidth=\"10.0\" prefWidth=\"150.0\" />\r\n            <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"150.0\" minWidth=\"10.0\" prefWidth=\"150.0\" />\r\n            <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"150.0\" minWidth=\"10.0\" prefWidth=\"150.0\" />\r\n            <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"150.0\" minWidth=\"10.0\" prefWidth=\"150.0\" />\r\n            <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"150.0\" minWidth=\"10.0\" prefWidth=\"150.0\" />\r\n         </columnConstraints>\r\n         <rowConstraints>\r\n            <RowConstraints minHeight=\"10.0\" prefHeight=\"30.0\" vgrow=\"SOMETIMES\" />\r\n         </rowConstraints>\r\n         <children>\r\n            <Button fx:id=\"ButtonA\" mnemonicParsing=\"false\" prefHeight=\"65.0\" prefWidth=\"71.0\" text=\"A\">\r\n               <font>\r\n                  <Font size=\"20.0\" />\r\n               </font>\r\n            </Button>\r\n            <Button fx:id=\"ButtonS\" layoutX=\"10.0\" layoutY=\"25.0\" mnemonicParsing=\"false\" prefHeight=\"65.0\" prefWidth=\"71.0\" text=\"S\" GridPane.columnIndex=\"1\">\r\n               <font>\r\n                  <Font size=\"20.0\" />\r\n               </font>\r\n            </Button>\r\n            <Button fx:id=\"ButtonD\" layoutX=\"108.0\" layoutY=\"25.0\" mnemonicParsing=\"false\" prefHeight=\"65.0\" prefWidth=\"71.0\" text=\"D\" GridPane.columnIndex=\"2\">\r\n               <font>\r\n                  <Font size=\"20.0\" />\r\n               </font>\r\n            </Button>\r\n            <Button fx:id=\"ButtonF\" layoutX=\"206.0\" layoutY=\"25.0\" mnemonicParsing=\"false\" prefHeight=\"65.0\" prefWidth=\"71.0\" text=\"F\" GridPane.columnIndex=\"3\">\r\n               <font>\r\n                  <Font size=\"20.0\" />\r\n               </font>\r\n            </Button>\r\n            <Button fx:id=\"ButtonG\" layoutX=\"304.0\" layoutY=\"25.0\" mnemonicParsing=\"false\" prefHeight=\"65.0\" prefWidth=\"71.0\" text=\"G\" textAlignment=\"CENTER\" GridPane.columnIndex=\"4\">\r\n               <font>\r\n                  <Font size=\"20.0\" />\r\n               </font>\r\n            </Button>\r\n            <Button fx:id=\"ButtonH\" layoutX=\"403.0\" layoutY=\"25.0\" mnemonicParsing=\"false\" prefHeight=\"65.0\" prefWidth=\"71.0\" text=\"H\" GridPane.columnIndex=\"5\">\r\n               <font>\r\n                  <Font size=\"20.0\" />\r\n               </font>\r\n            </Button>\r\n            <Button fx:id=\"ButtonJ\" layoutX=\"502.0\" layoutY=\"25.0\" mnemonicParsing=\"false\" prefHeight=\"65.0\" prefWidth=\"71.0\" text=\"J\" GridPane.columnIndex=\"6\">\r\n               <font>\r\n                  <Font size=\"20.0\" />\r\n               </font>\r\n            </Button>\r\n            <Button fx:id=\"ButtonK\" layoutX=\"601.0\" layoutY=\"25.0\" mnemonicParsing=\"false\" prefHeight=\"65.0\" prefWidth=\"71.0\" text=\"K\" GridPane.columnIndex=\"7\">\r\n               <font>\r\n                  <Font size=\"20.0\" />\r\n               </font>\r\n            </Button>\r\n            <Button fx:id=\"ButtonL\" layoutX=\"700.0\" layoutY=\"25.0\" mnemonicParsing=\"false\" prefHeight=\"65.0\" prefWidth=\"71.0\" text=\"L\" GridPane.columnIndex=\"8\">\r\n               <font>\r\n                  <Font size=\"20.0\" />\r\n               </font>\r\n            </Button>\r\n         </children>\r\n      </GridPane>\r\n      <GridPane layoutX=\"363.0\" layoutY=\"663.0\" prefHeight=\"102.0\" prefWidth=\"557.0\">\r\n         <columnConstraints>\r\n            <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"150.0\" minWidth=\"10.0\" prefWidth=\"150.0\" />\r\n            <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"150.0\" minWidth=\"10.0\" prefWidth=\"150.0\" />\r\n            <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"150.0\" minWidth=\"10.0\" prefWidth=\"150.0\" />\r\n            <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"150.0\" minWidth=\"10.0\" prefWidth=\"150.0\" />\r\n            <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"150.0\" minWidth=\"10.0\" prefWidth=\"150.0\" />\r\n            <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"150.0\" minWidth=\"10.0\" prefWidth=\"150.0\" />\r\n            <ColumnConstraints hgrow=\"SOMETIMES\" maxWidth=\"150.0\" minWidth=\"10.0\" prefWidth=\"150.0\" />\r\n         </columnConstraints>\r\n         <rowConstraints>\r\n            <RowConstraints minHeight=\"10.0\" prefHeight=\"30.0\" vgrow=\"SOMETIMES\" />\r\n         </rowConstraints>\r\n         <children>\r\n            <Button fx:id=\"ButtonZ\" layoutX=\"10.0\" layoutY=\"25.0\" mnemonicParsing=\"false\" prefHeight=\"65.0\" prefWidth=\"71.0\" text=\"Z\">\r\n               <font>\r\n                  <Font size=\"20.0\" />\r\n               </font>\r\n            </Button>\r\n            <Button fx:id=\"ButtonX\" layoutX=\"108.0\" layoutY=\"25.0\" mnemonicParsing=\"false\" prefHeight=\"65.0\" prefWidth=\"71.0\" text=\"X\" GridPane.columnIndex=\"1\">\r\n               <font>\r\n                  <Font size=\"20.0\" />\r\n               </font>\r\n            </Button>\r\n            <Button fx:id=\"ButtonC\" layoutX=\"206.0\" layoutY=\"25.0\" mnemonicParsing=\"false\" prefHeight=\"65.0\" prefWidth=\"71.0\" text=\"C\" GridPane.columnIndex=\"2\">\r\n               <font>\r\n                  <Font size=\"20.0\" />\r\n               </font>\r\n            </Button>\r\n            <Button fx:id=\"ButtonV\" layoutX=\"304.0\" layoutY=\"25.0\" mnemonicParsing=\"false\" prefHeight=\"65.0\" prefWidth=\"71.0\" text=\"V\" textAlignment=\"CENTER\" GridPane.columnIndex=\"3\">\r\n               <font>\r\n                  <Font size=\"20.0\" />\r\n               </font>\r\n            </Button>\r\n            <Button fx:id=\"ButtonB\" layoutX=\"403.0\" layoutY=\"25.0\" mnemonicParsing=\"false\" prefHeight=\"65.0\" prefWidth=\"71.0\" text=\"B\" GridPane.columnIndex=\"4\">\r\n               <font>\r\n                  <Font size=\"20.0\" />\r\n               </font>\r\n            </Button>\r\n            <Button fx:id=\"ButtonN\" layoutX=\"502.0\" layoutY=\"25.0\" mnemonicParsing=\"false\" prefHeight=\"65.0\" prefWidth=\"71.0\" text=\"N\" GridPane.columnIndex=\"5\">\r\n               <font>\r\n                  <Font size=\"20.0\" />\r\n               </font>\r\n            </Button>\r\n            <Button fx:id=\"ButtonM\" layoutX=\"601.0\" layoutY=\"25.0\" mnemonicParsing=\"false\" prefHeight=\"65.0\" prefWidth=\"69.0\" text=\"M\" GridPane.columnIndex=\"6\">\r\n               <font>\r\n                  <Font size=\"20.0\" />\r\n               </font>\r\n            </Button>\r\n         </children>\r\n      </GridPane>\r\n      <Button fx:id=\"ButtonENTER\" layoutX=\"241.0\" layoutY=\"682.0\" mnemonicParsing=\"false\" prefHeight=\"65.0\" prefWidth=\"114.0\" text=\"ENTER\">\r\n         <font>\r\n            <Font size=\"20.0\" />\r\n         </font>\r\n      </Button>\r\n      <Button fx:id=\"ButtonBackspace\" layoutX=\"920.0\" layoutY=\"682.0\" mnemonicParsing=\"false\" prefHeight=\"65.0\" prefWidth=\"107.0\" stylesheets=\"@style.css\">\r\n         <font>\r\n            <Font size=\"20.0\" />\r\n         </font>\r\n      </Button>\r\n   </children>\r\n</AnchorPane>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/mainScene.fxml b/target/classes/mainScene.fxml
--- a/target/classes/mainScene.fxml	(revision 54e7f23f7b8f207ad4fe367378b1a16c837e2161)
+++ b/target/classes/mainScene.fxml	(date 1655132914455)
@@ -36,7 +36,7 @@
           <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES" />
         </rowConstraints>
          <children>
-            <Button fx:id="ButtonQ" mnemonicParsing="false" prefHeight="65.0" prefWidth="71.0" text="Q">
+            <Button fx:id="ButtonQ" mnemonicParsing="false" onMouseClicked="#changeButtonQColor" prefHeight="65.0" prefWidth="71.0" text="Q">
                <font>
                   <Font size="20.0" />
                </font>
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"28e52107-b900-4ce7-bff4-f740d1529555\" name=\"Changes\" comment=\"wang‘s commmit\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/Main.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/Main.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/mainScene.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/resources/mainScene.fxml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/util/MenuScene.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/util/MenuScene.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/Main$1.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/Main$1.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/Main.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/Main.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/mainScene.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/mainScene.fxml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/resources/mainScene.fxml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/resources/mainScene.fxml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Enum\" />\r\n        <option value=\"FxmlFile\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"RESET_MODE\" value=\"MIXED\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"281El5VnHKW1oxjs0dAtV1ibU0u\" />\r\n  <component name=\"ProjectLevelVcsManager\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\r\n    <property name=\"extract.method.default.visibility\" value=\"private\" />\r\n    <property name=\"last_directory_selection\" value=\"$PROJECT_DIR$/src/util\" />\r\n    <property name=\"project.structure.last.edited\" value=\"Project\" />\r\n    <property name=\"project.structure.proportion\" value=\"0.0\" />\r\n    <property name=\"project.structure.side.proportion\" value=\"0.0\" />\r\n    <property name=\"settings.editor.selected.configurable\" value=\"preferences.pluginManager\" />\r\n  </component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\IdeaProjects\\WordleEx\\src\\main\\resources\" />\r\n      <recent name=\"D:\\Season4\\OO_Project\\WordleEx\\src\\Data\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\Season4\\OO_Project\\WordleEx\\src\\Data\" />\r\n    </key>\r\n    <key name=\"MoveClassesOrPackagesDialog.RECENTS_KEY\">\r\n      <recent name=\"\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.Main\">\r\n    <configuration name=\"HelloApplication\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.example.wordleex.HelloApplication\" />\r\n      <module name=\"WordleEx\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.example.wordleex.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\r\n      <module name=\"WordleEx\" />\r\n      <option name=\"VM_PARAMETERS\" value=\"--module-path &quot;D:\\Java\\JavaFX\\javafx-sdk-18\\lib&quot; --add-modules=javafx.base,javafx.controls,javafx.fxml,javafx.graphics,javafx.media,javafx.swing,javafx.web\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Test\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Test\" />\r\n      <module name=\"WordleEx\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"naniTest\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"naniTest\" />\r\n      <module name=\"WordleEx\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <list>\r\n      <item itemvalue=\"Application.Main\" />\r\n      <item itemvalue=\"Application.HelloApplication\" />\r\n      <item itemvalue=\"Application.Test\" />\r\n      <item itemvalue=\"Application.naniTest\" />\r\n    </list>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Test\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"28e52107-b900-4ce7-bff4-f740d1529555\" name=\"Changes\" comment=\"\" />\r\n      <created>1650375842923</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1650375842923</updated>\r\n      <workItem from=\"1650375843003\" duration=\"1275000\" />\r\n      <workItem from=\"1653198377145\" duration=\"16052000\" />\r\n      <workItem from=\"1653449527897\" duration=\"695000\" />\r\n      <workItem from=\"1653643590526\" duration=\"2473000\" />\r\n      <workItem from=\"1653646119075\" duration=\"2032000\" />\r\n      <workItem from=\"1653650061497\" duration=\"1435000\" />\r\n      <workItem from=\"1653655065606\" duration=\"287000\" />\r\n      <workItem from=\"1653700967604\" duration=\"6596000\" />\r\n      <workItem from=\"1653782154243\" duration=\"10560000\" />\r\n      <workItem from=\"1654502867795\" duration=\"10825000\" />\r\n      <workItem from=\"1654528669522\" duration=\"1184000\" />\r\n      <workItem from=\"1654530024195\" duration=\"729000\" />\r\n      <workItem from=\"1654709314006\" duration=\"4059000\" />\r\n      <workItem from=\"1654901364999\" duration=\"867000\" />\r\n      <workItem from=\"1654902260019\" duration=\"12078000\" />\r\n      <workItem from=\"1654916236638\" duration=\"4025000\" />\r\n      <workItem from=\"1654933943696\" duration=\"7308000\" />\r\n      <workItem from=\"1654949457097\" duration=\"13653000\" />\r\n      <workItem from=\"1654963642747\" duration=\"26000\" />\r\n      <workItem from=\"1654963736948\" duration=\"49000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"merge\">\r\n      <created>1654525263964</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1654525263964</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"make some adjustment\">\r\n      <created>1654713210637</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1654713210637</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"make some adjustment\">\r\n      <created>1654901414811</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1654901414812</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"make some adjustment\">\r\n      <created>1654901994608</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1654901994608</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"make some adjustment\">\r\n      <created>1654903017507</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1654903017507</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"finish some visible data\">\r\n      <created>1654912069036</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1654912069036</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"finish some visible data\">\r\n      <created>1654913865125</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1654913865125</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"finish some visible data\">\r\n      <created>1654935276796</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1654935276796</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"make some UI\">\r\n      <created>1654936817179</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1654936817179</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"make some UI\">\r\n      <created>1654941066954</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1654941066955</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"make some UI\">\r\n      <created>1654941286642</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1654941286642</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"algorithm GUI\">\r\n      <created>1654960134060</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1654960134060</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"algorithm GUI update\">\r\n      <created>1654963363914</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1654963363914</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"algorithm GUI update\">\r\n      <created>1654963655793</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1654963655793</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"wang‘s commmit\">\r\n      <created>1655129093479</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1655129093479</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"wang‘s commmit\">\r\n      <created>1655129657852</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1655129657852</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"wang‘s commmit\">\r\n      <created>1655129679693</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1655129679693</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"18\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"origin/main\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"basic function\" />\r\n    <MESSAGE value=\"merge\" />\r\n    <MESSAGE value=\"make some adjustment\" />\r\n    <MESSAGE value=\"finish some visible data\" />\r\n    <MESSAGE value=\"make some UI\" />\r\n    <MESSAGE value=\"algorithm GUI\" />\r\n    <MESSAGE value=\"algorithm GUI update\" />\r\n    <MESSAGE value=\"wang‘s commmit\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"wang‘s commmit\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <watches-manager>\r\n      <configuration name=\"Application\">\r\n        <watch expression=\"WordList.WordPrior\" language=\"JAVA\" />\r\n        <watch expression=\"GuessAlgorithm.wsList\" language=\"JAVA\" />\r\n        <watch expression=\"GuessAlgorithm.StateInfoList\" language=\"JAVA\" />\r\n        <watch expression=\"GuessAlgorithm.StateInfoList\" language=\"JAVA\" />\r\n        <watch expression=\"GuessAlgorithm.PossibleWordChance\" language=\"JAVA\" />\r\n        <watch expression=\"GuessAlgorithm.eNow\" language=\"JAVA\" />\r\n      </configuration>\r\n    </watches-manager>\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 54e7f23f7b8f207ad4fe367378b1a16c837e2161)
+++ b/.idea/workspace.xml	(date 1655133104279)
@@ -7,7 +7,6 @@
     <list default="true" id="28e52107-b900-4ce7-bff4-f740d1529555" name="Changes" comment="wang‘s commmit">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/Main.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/mainScene.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/mainScene.fxml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/util/MenuScene.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/util/MenuScene.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/target/classes/Main$1.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/Main$1.class" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/target/classes/Main.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/Main.class" afterDir="false" />
@@ -265,7 +264,14 @@
       <option name="project" value="LOCAL" />
       <updated>1655129679693</updated>
     </task>
-    <option name="localTasksCounter" value="18" />
+    <task id="LOCAL-00018" summary="wang‘s commmit">
+      <created>1655130818290</created>
+      <option name="number" value="00018" />
+      <option name="presentableId" value="LOCAL-00018" />
+      <option name="project" value="LOCAL" />
+      <updated>1655130818290</updated>
+    </task>
+    <option name="localTasksCounter" value="19" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
