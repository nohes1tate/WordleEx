Index: src/word/Word.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.StringTokenizer;\r\n\r\n/**\r\n * 单词\r\n * 字母以单词为单位进行输入和判断\r\n * @author 宋益康\r\n */\r\npublic class Word {\r\n    /**\r\n     * 一个单词包含的字母\r\n     */\r\n    public ArrayList<Letter> letters = new ArrayList<>();\r\n\r\n    /**\r\n     * 当前单词内容\r\n     */\r\n    StringBuilder WordContent = new StringBuilder();\r\n\r\n    /**\r\n     * Word类的构造方法\r\n     *\r\n     * @param word 输入的单词\r\n     * @throws Exception 异常\r\n     */\r\n    public Word(String word) throws Exception{\r\n        for(int i=0;i<word.length();i++){\r\n            this.AddLetter(word.charAt(i));\r\n        }\r\n    }\r\n    public Word(){}\r\n    /**\r\n     * 向单词中添加字母\r\n     * 方法会判定单词字母数是否已满\r\n     * @param c c\r\n     * @throws Exception 抛出单词输入异常\r\n     */\r\n    public void AddLetter(char c) throws Exception {\r\n        if(letters.size()<5){\r\n        letters.add(new Letter(c, letters.size()));\r\n        WordContent.append(c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 删除最后一个字母\r\n     */\r\n    public void RemoveLetter() {\r\n        if(letters.size()>0){\r\n            int idx = letters.size() -1;\r\n            letters.remove(idx);\r\n            WordContent.deleteCharAt(idx);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取单词当前状态，以3进制计数，绿色、黄色、灰色分别对应三进制的0、1、2，黑色返回异常值-1\r\n     *\r\n     * @return int 状态对应的数\r\n     * @throws Exception 可能的异常\r\n     */\r\n    public int getState() throws Exception{\r\n        int res=0;\r\n        for (Letter l:letters){\r\n            res*=3;\r\n            if(l.letterColor.equals(LetterColor.Black)){\r\n                throw new WordColorException(\"Found Black Letter in word \"+WordContent);\r\n            }\r\n            else if(l.letterColor.equals(LetterColor.Green)){\r\n                res+=0;\r\n            }\r\n            else if(l.letterColor.equals(LetterColor.Yellow)){\r\n                res+=1;\r\n            }\r\n            else if(l.letterColor.equals(LetterColor.Grey)){\r\n                res+=2;\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n\r\n    public String ShowColor() {\r\n        StringBuilder sb = new StringBuilder();\r\n        for (Letter l:letters){\r\n            if(l.letterColor.equals(LetterColor.Green)){\r\n                sb.append(\"Green \");\r\n            }\r\n            else if(l.letterColor.equals(LetterColor.Yellow)){\r\n                sb.append(\"Yellow \");\r\n            }\r\n            else if(l.letterColor.equals(LetterColor.Grey)){\r\n                sb.append(\"Grey \");\r\n            }\r\n        }\r\n        return sb.toString();\r\n    }\r\n\r\n    /**\r\n     * 检查输入答案并对字母着色\r\n     * 字母着色规则见LetterColor\r\n     * 当前字母数不足5个时抛出字母数不足异常\r\n     * 当前单词不在可能的单词中时抛出不合法单词异常\r\n     * @param ans 正确答案\r\n     * @see LetterColor\r\n     * @throws Exception 可能的异常\r\n     */\r\n    public void CheckAns(String ans) throws Exception{\r\n        if(letters.size()<5){\r\n            throw new WordSizeException(\"Not enough letters\");\r\n        }\r\n        else {\r\n            String wordContent = this.WordContent.toString();\r\n            if(!WordList.LegalWord.contains(wordContent)){\r\n                throw new WordIllegalException(\"Not in the word list\");\r\n            }\r\n            else {\r\n                int i, j;\r\n                boolean[] PosIsJudge = new boolean[5];\r\n                Arrays.fill(PosIsJudge, false);\r\n                for (i = 0; i < 5; i++){\r\n                    PosIsJudge[i]=letters.get(i).JudgeColor(ans, i);\r\n                }\r\n                for (i = 0; i < 5; i++){\r\n                    if(!PosIsJudge[i]){\r\n                        for(j=0;j<5;j++){\r\n                            if(j!=i&&!PosIsJudge[i]){\r\n                                PosIsJudge[i]=letters.get(i).JudgeColor(ans, j);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                for (i = 0; i < 5; i++){\r\n                    if(!PosIsJudge[i]){\r\n                        letters.get(i).letterColor=LetterColor.Grey;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * 单词数目异常\r\n * @author 宋益康\r\n */\r\nclass WordSizeException extends Exception{\r\n    String message;\r\n    public WordSizeException(String ErrMessage){\r\n        message=ErrMessage;\r\n    }\r\n\r\n    @Override\r\n    public String toString(){\r\n        return message;\r\n    }\r\n}\r\n\r\n/**\r\n * 单词不合规异常\r\n * @author 宋益康\r\n */\r\nclass WordIllegalException extends Exception{\r\n    String message;\r\n    public WordIllegalException(String ErrMessage){\r\n        message=ErrMessage;\r\n    }\r\n\r\n    @Override\r\n    public String toString(){\r\n        return message;\r\n    }\r\n}\r\n\r\nclass WordColorException extends Exception{\r\n    String message;\r\n    public WordColorException(String ErrMessage) { message=ErrMessage; }\r\n\r\n    @Override\r\n    public String toString() { return message; }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>GBK
===================================================================
diff --git a/src/word/Word.java b/src/word/Word.java
--- a/src/word/Word.java	(revision 1b8a5d00b6ab3d1ed171cb5a7cb76b916f225872)
+++ b/src/word/Word.java	(date 1653873132694)
@@ -117,21 +117,25 @@
             else {
                 int i, j;
                 boolean[] PosIsJudge = new boolean[5];
+                boolean[] LetterIsJudge = new boolean[5];
                 Arrays.fill(PosIsJudge, false);
+                Arrays.fill(LetterIsJudge, false);
                 for (i = 0; i < 5; i++){
                     PosIsJudge[i]=letters.get(i).JudgeColor(ans, i);
+                    LetterIsJudge[i]=PosIsJudge[i];
                 }
                 for (i = 0; i < 5; i++){
-                    if(!PosIsJudge[i]){
+                    if(!LetterIsJudge[i]){
                         for(j=0;j<5;j++){
-                            if(j!=i&&!PosIsJudge[i]){
-                                PosIsJudge[i]=letters.get(i).JudgeColor(ans, j);
+                            if(j!=i&&!PosIsJudge[j]&&!LetterIsJudge[i]){
+                                PosIsJudge[j]=letters.get(i).JudgeColor(ans, j);
+                                LetterIsJudge[i]=PosIsJudge[j];
                             }
                         }
                     }
                 }
                 for (i = 0; i < 5; i++){
-                    if(!PosIsJudge[i]){
+                    if(!LetterIsJudge[i]){
                         letters.get(i).letterColor=LetterColor.Grey;
                     }
                 }
Index: src/main/Test.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.util.ArrayList;\r\nimport java.util.Random;\r\nimport java.util.Scanner;\r\n\r\n/**\r\n * 测试类\r\n *\r\n * @author 宋益康\r\n */\r\npublic class Test {\r\n    /**\r\n     * @param args 命令行参数\r\n     */\r\n    public static void main(String[] args) {\r\n        try{\r\n            WordList.PossibleWord = WordList.ReadWord(\"src/Data/possible_words.txt\");\r\n            WordList.LegalWord = WordList.ReadWord(\"src/Data/allowed_words.txt\");\r\n            WordList.WordPrior = WordList.ReadPrior(\"src/Data/freq_map.json\");\r\n            ArrayList<String> list = new ArrayList<>(WordList.PossibleWord);\r\n            int ansIdx = new Random().nextInt(list.size());\r\n            String ans = list.get(ansIdx);\r\n            int cnt=0;\r\n            boolean got=false;\r\n            while (!got){\r\n                cnt++;\r\n            GuessAlgorithm.getWordScore(WordList.LegalWord,WordList.PossibleWord);\r\n            String guessWord = GuessAlgorithm.wsList.get(0).word;\r\n            Word guess = new Word(guessWord);\r\n            guess.CheckAns(ans);\r\n            System.out.println(\"guess num: \"+cnt + \" guess word: \"+guessWord);\r\n            System.out.println(\"Color: \"+ guess.ShowColor());\r\n            if(guess.getState()!=0){\r\n                WordList.PossibleWord=GuessAlgorithm.updatePossibleWord(WordList.PossibleWord,guess.getState(),guessWord);\r\n            }else {\r\n                got=true;\r\n                System.out.println(\"ans: \"+ans+\" guess: \"+guessWord+\" times: \"+cnt);\r\n            }\r\n            }\r\n            System.out.println(\"Finish\");\r\n        }\r\n        catch (Exception e){\r\n            System.out.println(e);\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>GBK
===================================================================
diff --git a/src/main/Test.java b/src/main/Test.java
--- a/src/main/Test.java	(revision 1b8a5d00b6ab3d1ed171cb5a7cb76b916f225872)
+++ b/src/main/Test.java	(date 1653873398479)
@@ -14,28 +14,14 @@
     public static void main(String[] args) {
         try{
             WordList.PossibleWord = WordList.ReadWord("src/Data/possible_words.txt");
-            WordList.LegalWord = WordList.ReadWord("src/Data/allowed_words.txt");
+            WordList.LegalWord = WordList.ReadWord("src/Data/possible_words.txt");
             WordList.WordPrior = WordList.ReadPrior("src/Data/freq_map.json");
-            ArrayList<String> list = new ArrayList<>(WordList.PossibleWord);
-            int ansIdx = new Random().nextInt(list.size());
-            String ans = list.get(ansIdx);
-            int cnt=0;
-            boolean got=false;
-            while (!got){
-                cnt++;
+            WordList.PossibleWord=GuessAlgorithm.updatePossibleWord(WordList.PossibleWord,(0*1+1*3+2*9+2*27+1*81),"legal");
+            WordList.PossibleWord=GuessAlgorithm.updatePossibleWord(WordList.PossibleWord,(2*1+2*3+2*9+1*27+1*81),"taint");
+            WordList.PossibleWord=GuessAlgorithm.updatePossibleWord(WordList.PossibleWord,(0*1+0*3+1*9+0*27+2*81),"stall");
+            //WordList.PossibleWord=GuessAlgorithm.updatePossibleWord(WordList.PossibleWord,(1*1+0*3+2*9+2*27+0*81),"adult");
             GuessAlgorithm.getWordScore(WordList.LegalWord,WordList.PossibleWord);
-            String guessWord = GuessAlgorithm.wsList.get(0).word;
-            Word guess = new Word(guessWord);
-            guess.CheckAns(ans);
-            System.out.println("guess num: "+cnt + " guess word: "+guessWord);
-            System.out.println("Color: "+ guess.ShowColor());
-            if(guess.getState()!=0){
-                WordList.PossibleWord=GuessAlgorithm.updatePossibleWord(WordList.PossibleWord,guess.getState(),guessWord);
-            }else {
-                got=true;
-                System.out.println("ans: "+ans+" guess: "+guessWord+" times: "+cnt);
-            }
-            }
+            System.out.println(GuessAlgorithm.wsList.get(0).word);
             System.out.println("Finish");
         }
         catch (Exception e){
Index: src/algorithm/GuessAlgorithm.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.util.*;\r\n\r\npublic class GuessAlgorithm {\r\n    /**\r\n     * 每种情况出现的加权概率\r\n     */\r\n    static double[] chance = new double[3*3*3*3*3];\r\n\r\n    /**\r\n     * 所有可能单词的权重和\r\n     */\r\n    static double priorAll;\r\n\r\n    /**\r\n     * 评价每个单词猜测的分数\r\n     */\r\n    static ArrayList<WordWithScore> wsList = new ArrayList<>();\r\n\r\n    /**\r\n     * 更新可能词\r\n     *\r\n     * @param preSet 先前的可能词集合\r\n     * @param state  状态\r\n     * @param guess  上次猜测的词\r\n     * @return {@link Set}<{@link String}>\r\n     * @throws Exception 异常\r\n     */\r\n    public static Set<String> updatePossibleWord (Set<String> preSet,int state,String guess) throws Exception{\r\n        Set<String> res = new HashSet<>();\r\n        Word GuessWord = new Word(guess);\r\n        for (String w : preSet){\r\n            GuessWord.CheckAns(w);\r\n            if(state==GuessWord.getState()){\r\n                res.add(w);\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n\r\n    /**\r\n     * 获取单词的分数\r\n     *\r\n     * @param LegalWord    合法词\r\n     * @param PossibleWord 当前状态的可能值\r\n     * @throws Exception 异常\r\n     */\r\n    public static void getWordScore(Set<String> LegalWord, Set<String> PossibleWord) throws Exception{\r\n        ArrayList<WordWithScore> tmpList = new ArrayList<>();\r\n        //第一层循环，遍历所有合法的单词\r\n        for (String lWord : LegalWord) {\r\n            boolean show = false;\r\n            priorAll=0;\r\n            Arrays.fill(chance, 0);\r\n            Word tmpWord = new Word(lWord);\r\n\r\n            //遍历可能为答案的词\r\n            for (String pWord : PossibleWord) {\r\n                tmpWord.CheckAns(pWord);\r\n                int state;\r\n                state = tmpWord.getState();\r\n                chance[state] += WordList.WordPrior.get(pWord);\r\n                if(show){\r\n                    System.out.println(\"possible word:\"+pWord+\" result:\" + tmpWord.ShowColor());\r\n                }\r\n            }\r\n            //计算每种状态的概率之和\r\n            for (double c : chance) {\r\n                priorAll += c;\r\n            }\r\n            for (int i = 0; i < chance.length; i++) {\r\n                chance[i] /= priorAll;\r\n            }\r\n            //获取单词对应的信息熵\r\n                double p;\r\n                double h = 0;\r\n                double c;\r\n            for (double v : chance) {\r\n                p = v;\r\n                if (p != 0)\r\n                    h += p * Math.log(1 / p) / Math.log(2);\r\n            }\r\n                c=chance[0];\r\n                tmpList.add(new WordWithScore(lWord, h + c, h, c));\r\n        }\r\n        tmpList.sort(Collections.reverseOrder());\r\n        wsList=tmpList;\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * 单词与其对应得分\r\n *\r\n * @author 宋益康\r\n */\r\nclass WordWithScore implements Comparable<WordWithScore>{\r\n        String word;\r\n        double score;\r\n        double possible;\r\n        double entropy;\r\n        WordWithScore(String w, double s, double h, double p){\r\n        word=w;\r\n        score=s;\r\n        entropy=h;\r\n        possible=p;\r\n        }\r\n\r\n@Override\r\npublic int compareTo(WordWithScore w){\r\n        if(this.score>w.score)\r\n        return 1;\r\n        else if(this.score == w.score)\r\n        return 0;\r\n        return -1;\r\n        }\r\n        }\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>GBK
===================================================================
diff --git a/src/algorithm/GuessAlgorithm.java b/src/algorithm/GuessAlgorithm.java
--- a/src/algorithm/GuessAlgorithm.java	(revision 1b8a5d00b6ab3d1ed171cb5a7cb76b916f225872)
+++ b/src/algorithm/GuessAlgorithm.java	(date 1653793235133)
@@ -113,4 +113,4 @@
         return 0;
         return -1;
         }
-        }
+}
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"28e52107-b900-4ce7-bff4-f740d1529555\" name=\"Changes\" comment=\"basic function\">\r\n      <change afterPath=\"$PROJECT_DIR$/src/Data/freq_map.json\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/TestDir/naniTest.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/algorithm/GuessAlgorithm.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/algorithm/Utils.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/encodings.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/encodings.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/WordleEx.iml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/WordleEx.iml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/Main.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/Main.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/Test.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/Test.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/word/Letter.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/word/Letter.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/word/Word.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/word/Word.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/word/WordList.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/word/WordList.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/Letter.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/Letter.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/LetterIOException.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/LetterIOException.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/Main.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/Main.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/Test.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/Test.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/WordList.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/WordList.class\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Enum\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"281El5VnHKW1oxjs0dAtV1ibU0u\" />\r\n  <component name=\"ProjectLevelVcsManager\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"SHARE_PROJECT_CONFIGURATION_FILES\" value=\"true\" />\r\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$/src/Data\" />\r\n    <property name=\"project.structure.last.edited\" value=\"Libraries\" />\r\n    <property name=\"project.structure.proportion\" value=\"0.0\" />\r\n    <property name=\"project.structure.side.proportion\" value=\"0.0\" />\r\n    <property name=\"settings.editor.selected.configurable\" value=\"preferences.JavaFX\" />\r\n  </component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\Season4\\OO_Project\\WordleEx\\src\\Data\" />\r\n    </key>\r\n    <key name=\"MoveClassesOrPackagesDialog.RECENTS_KEY\">\r\n      <recent name=\"\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.Test\">\r\n    <configuration name=\"HelloApplication\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.example.wordleex.HelloApplication\" />\r\n      <module name=\"WordleEx\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.example.wordleex.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\r\n      <module name=\"WordleEx\" />\r\n      <option name=\"VM_PARAMETERS\" value=\"--module-path &quot;D:\\Java\\JavaFX\\javafx-sdk-18\\lib&quot; --add-modules javafx.controls,javafx.fxml\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Test\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Test\" />\r\n      <module name=\"WordleEx\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"naniTest\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"naniTest\" />\r\n      <module name=\"WordleEx\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <list>\r\n      <item itemvalue=\"Application.HelloApplication\" />\r\n      <item itemvalue=\"Application.Main\" />\r\n      <item itemvalue=\"Application.Test\" />\r\n      <item itemvalue=\"Application.naniTest\" />\r\n    </list>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Test\" />\r\n        <item itemvalue=\"Application.naniTest\" />\r\n        <item itemvalue=\"Application.Main\" />\r\n        <item itemvalue=\"Application.HelloApplication\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"28e52107-b900-4ce7-bff4-f740d1529555\" name=\"Changes\" comment=\"\" />\r\n      <created>1650375842923</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1650375842923</updated>\r\n      <workItem from=\"1650375843003\" duration=\"1275000\" />\r\n      <workItem from=\"1653198377145\" duration=\"16052000\" />\r\n      <workItem from=\"1653449527897\" duration=\"695000\" />\r\n      <workItem from=\"1653643590526\" duration=\"2473000\" />\r\n      <workItem from=\"1653646119075\" duration=\"2032000\" />\r\n      <workItem from=\"1653650061497\" duration=\"1435000\" />\r\n      <workItem from=\"1653655065606\" duration=\"287000\" />\r\n      <workItem from=\"1653700967604\" duration=\"6596000\" />\r\n      <workItem from=\"1653782154243\" duration=\"10560000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"basic function\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"basic function\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/Main.java</url>\r\n          <line>11</line>\r\n          <option name=\"timeStamp\" value=\"2\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n    <watches-manager>\r\n      <configuration name=\"Application\">\r\n        <watch expression=\"WordList.WordPrior\" language=\"JAVA\" />\r\n        <watch expression=\"GuessAlgorithm.wsList\" language=\"JAVA\" />\r\n      </configuration>\r\n    </watches-manager>\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 1b8a5d00b6ab3d1ed171cb5a7cb76b916f225872)
+++ b/.idea/workspace.xml	(date 1654351758209)
@@ -4,24 +4,15 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="28e52107-b900-4ce7-bff4-f740d1529555" name="Changes" comment="basic function">
-      <change afterPath="$PROJECT_DIR$/src/Data/freq_map.json" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/TestDir/naniTest.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/algorithm/GuessAlgorithm.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/algorithm/Utils.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/encodings.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/encodings.xml" afterDir="false" />
+    <list default="true" id="28e52107-b900-4ce7-bff4-f740d1529555" name="Changes" comment="finish basic Algorithm of guess word">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/WordleEx.iml" beforeDir="false" afterPath="$PROJECT_DIR$/WordleEx.iml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/Main.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/algorithm/GuessAlgorithm.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/algorithm/GuessAlgorithm.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/Test.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/Test.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/word/Letter.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/word/Letter.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/word/Word.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/word/Word.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/word/WordList.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/word/WordList.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/Letter.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/Letter.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/LetterIOException.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/LetterIOException.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/Main.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/Main.class" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/target/classes/Test.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/Test.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/WordList.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/WordList.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/Word.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/Word.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/WordIllegalException.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/WordIllegalException.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/WordSizeException.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/WordSizeException.class" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -136,8 +127,18 @@
       <workItem from="1653650061497" duration="1435000" />
       <workItem from="1653655065606" duration="287000" />
       <workItem from="1653700967604" duration="6596000" />
-      <workItem from="1653782154243" duration="10560000" />
+      <workItem from="1653782154243" duration="11981000" />
+      <workItem from="1653871597755" duration="2383000" />
+      <workItem from="1654348627400" duration="1221000" />
+    </task>
+    <task id="LOCAL-00001" summary="finish basic Algorithm of guess word">
+      <created>1653793026349</created>
+      <option name="number" value="00001" />
+      <option name="presentableId" value="LOCAL-00001" />
+      <option name="project" value="LOCAL" />
+      <updated>1653793026349</updated>
     </task>
+    <option name="localTasksCounter" value="2" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -156,7 +157,8 @@
   </component>
   <component name="VcsManagerConfiguration">
     <MESSAGE value="basic function" />
-    <option name="LAST_COMMIT_MESSAGE" value="basic function" />
+    <MESSAGE value="finish basic Algorithm of guess word" />
+    <option name="LAST_COMMIT_MESSAGE" value="finish basic Algorithm of guess word" />
   </component>
   <component name="XDebuggerManager">
     <breakpoint-manager>
@@ -165,6 +167,11 @@
           <url>file://$PROJECT_DIR$/src/main/Main.java</url>
           <line>11</line>
           <option name="timeStamp" value="2" />
+        </line-breakpoint>
+        <line-breakpoint enabled="true" type="java-line">
+          <url>file://$PROJECT_DIR$/src/main/Test.java</url>
+          <line>24</line>
+          <option name="timeStamp" value="16" />
         </line-breakpoint>
       </breakpoints>
     </breakpoint-manager>
