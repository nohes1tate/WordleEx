Index: src/main/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import javafx.animation.FadeTransition;\r\nimport javafx.application.Application;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.scene.Parent;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.input.KeyCode;\r\nimport javafx.scene.input.KeyEvent;\r\nimport javafx.scene.input.MouseEvent;\r\nimport javafx.scene.layout.AnchorPane;\r\nimport javafx.scene.paint.Color;\r\nimport javafx.scene.shape.Rectangle;\r\nimport javafx.scene.text.*;\r\nimport javafx.stage.Stage;\r\nimport javafx.util.Duration;\r\n\r\nimport java.io.IOException;\r\nimport java.text.DecimalFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Locale;\r\nimport java.util.Random;\r\n\r\n/**\r\n * 启动游戏主方法\r\n *\r\n * @author 宋益康\r\n * @author 王添逸\r\n * @author 王胤澄\r\n */\r\npublic class Main extends Application {\r\n\r\n    /**\r\n     * 游戏的主窗口\r\n     */\r\n    private static Stage mainWindow;\r\n\r\n    /**\r\n     * 主游戏体的屏幕场景\r\n     */\r\n    private static Scene mainMenuScene;\r\n\r\n    /**\r\n     * 获取游戏主窗口\r\n     *\r\n     * @return {@link Stage}\r\n     */\r\n    public static Stage getMainWindow() {\r\n        return mainWindow;\r\n    }\r\n\r\n    /**\r\n     * 主菜单设置场景\r\n     *\r\n     * @param mainMenuScene 主菜单场景\r\n     */\r\n    public static void setMainMenuScene(Scene mainMenuScene) {\r\n        Main.mainMenuScene = mainMenuScene;\r\n    }\r\n\r\n    /**\r\n     * 用于循环的变量\r\n     */\r\n    private static int index = 0;\r\n\r\n    /**\r\n     * 记录单词行数\r\n     */\r\n    private static int line = 0;\r\n\r\n    /**\r\n     * 用于显示左侧信息\r\n     */\r\n    private static int leftLine = 0;\r\n\r\n    /**\r\n     * 窗格\r\n     */\r\n    private static AnchorPane pane = new AnchorPane();\r\n\r\n    /**\r\n     * 动画字母数组\r\n     */\r\n    private static AniLetter[] aniLetters = new AniLetter[5];\r\n\r\n    /**\r\n     * 当前单词\r\n     */\r\n    private static Word testword = new Word();\r\n\r\n    /**\r\n     * 题目答案\r\n     */\r\n    private static String ans;\r\n\r\n    /**\r\n     * 推荐单词\r\n     */\r\n    private static AniString[] recommend = new AniString[5];\r\n\r\n    /**\r\n     * 推荐单词的期望提供信息\r\n     */\r\n    private static AniString[] recommendInfo = new AniString[5];\r\n\r\n    /**\r\n     * 推荐单词为正确答案的可能性\r\n     */\r\n    private static AniString[] recommendPossibility = new AniString[5];\r\n\r\n    /**\r\n     * 字符串动画\r\n     */\r\n    private static ArrayList<AniString> aniStrings = new ArrayList<>();\r\n\r\n    /**\r\n     * 格式化小数\r\n     */\r\n    private static DecimalFormat df2 = new DecimalFormat(\"#.##\");\r\n    /**\r\n     * 格式化小数\r\n     */\r\n    private static DecimalFormat df6 = new DecimalFormat(\"#.#####\");\r\n\r\n    /**\r\n     * 页面控制器\r\n     */\r\n    private static MenuScene Controller;\r\n    /**\r\n     * 页面控制器\r\n     */\r\n    private static AdvanceScene advanceController;\r\n    /**\r\n     * 记录游戏是否结束\r\n     */\r\n    private static boolean gameIsOver = false;\r\n\r\n    /**\r\n     * 游戏进入主方法\r\n     *\r\n     * @param args arg游戏\r\n     */\r\n    public static void main(String[] args) {\r\n        launch(args);\r\n    }\r\n\r\n    /**\r\n     * 游戏\r\n     *\r\n     * @param menuStage 游戏主窗口\r\n     * @throws Exception 异常\r\n     */\r\n    @Override\r\n    public void start(Stage menuStage) throws Exception {\r\n\r\n        menuStage.setTitle(\"WORDLE-EX\");\r\n        menuStage.setResizable(false);\r\n        menuStage.setAlwaysOnTop(true);\r\n\r\n        mainWindow = menuStage;\r\n        Parent mainMenuLayout = FXMLLoader.load(getClass().getResource(\"resources/menuScene.fxml\"));\r\n        mainMenuScene = new Scene(mainMenuLayout, 1280, 800);\r\n\r\n        menuStage.setScene(mainMenuScene);\r\n        menuStage.show();\r\n    }\r\n\r\n    /**\r\n     * 进入规则页面\r\n     */\r\n    public static void toRuleView() {\r\n        try {\r\n            Parent ruleLayout = FXMLLoader.load(Main.class.getResource(\"resources/basicRule.fxml\"));\r\n            Scene ruleScene = new Scene(ruleLayout, 1280, 800);\r\n            mainWindow.setScene(ruleScene);\r\n            mainWindow.show();\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 进入NormalMode规则\r\n     */\r\n    public static void toNormalRule(){\r\n        try {\r\n            Parent ruleLayout = FXMLLoader.load(Main.class.getResource(\"resources/NormalMode.fxml\"));\r\n            Scene ruleScene = new Scene(ruleLayout, 1280, 800);\r\n            mainWindow.setScene(ruleScene);\r\n            mainWindow.show();\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 进入AdvancdMode规则页面\r\n     */\r\n    public static void toAdvanceRule(){\r\n        try {\r\n            Parent ruleLayout = FXMLLoader.load(Main.class.getResource(\"resources/AdvanceMode.fxml\"));\r\n            Scene ruleScene = new Scene(ruleLayout, 1280, 800);\r\n            mainWindow.setScene(ruleScene);\r\n            mainWindow.show();\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 进入AIRule规则页面\r\n     */\r\n    public static void toAIRule() {\r\n        try {\r\n            Parent ruleLayout = FXMLLoader.load(Main.class.getResource(\"resources/AIMode.fxml\"));\r\n            Scene ruleScene = new Scene(ruleLayout, 1280, 800);\r\n            mainWindow.setScene(ruleScene);\r\n            mainWindow.show();\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 进入NormalMode的方法\r\n     *\r\n     * @throws Exception 异常\r\n     */\r\n    public static void startNormalMode() throws Exception {\r\n        gameIsOver = false;\r\n        WordList.PossibleWord = WordList.ReadWord(\"src/Data/possible_words.txt\");\r\n        WordList.LegalWord = WordList.ReadWord(\"src/Data/allowed_words.txt\");\r\n        WordList.AnswerWord = WordList.ReadWord(\"src/Data/possible_words.txt\");\r\n\r\n        testword = new Word();\r\n        ArrayList<String> list = new ArrayList<>(WordList.AnswerWord);\r\n        int ansIdx = new Random().nextInt(list.size());\r\n        ans = list.get(ansIdx);\r\n\r\n        System.out.println(ans);\r\n\r\n\r\n        index = 0;\r\n\r\n        line = 0;\r\n        pane = new AnchorPane();\r\n        FXMLLoader loader = new FXMLLoader(Main.class.getResource(\"resources/mainScene.fxml\"));\r\n        Parent mainScene = loader.load();\r\n        pane.getChildren().add(mainScene);\r\n\r\n\r\n        Scene scene = new Scene(pane, 1280, 800);\r\n\r\n        Controller = loader.getController();\r\n\r\n        pane.addEventFilter(KeyEvent.KEY_PRESSED, (KeyEvent keyEvent) -> {\r\n            KeyCode kCode = keyEvent.getCode();\r\n            System.out.println(kCode.getName());\r\n            char toAddLetter;\r\n            try {\r\n                if (!gameIsOver) {\r\n                    if (kCode.isLetterKey() && index < 5 && line < 6) {\r\n                        toAddLetter = (char) (kCode.getCode() + 32);\r\n                        testword.AddLetter(toAddLetter);\r\n                        aniLetters[index] = new AniLetter(keyEvent.getText().toUpperCase(Locale.ROOT));\r\n                        pane.getChildren().add(aniLetters[index].ft.getNode());\r\n                        AnchorPane.setLeftAnchor(aniLetters[index].ft.getNode(), 500.0 + index * 60.0);\r\n                        AnchorPane.setTopAnchor(aniLetters[index].ft.getNode(), 120.0 + line * 60.);\r\n                        aniLetters[index].ft.play();\r\n                        index += 1;\r\n                        System.out.println(testword.WordContent);\r\n                    }\r\n                    if (kCode == KeyCode.BACK_SPACE && index >= 1) {\r\n                        testword.RemoveLetter();\r\n                        pane.getChildren().remove(aniLetters[index - 1].ft.getNode());\r\n                        index -= 1;\r\n                    }\r\n                    if (kCode == KeyCode.ENTER) {\r\n                        if (testword.letters.size() == 5) {\r\n                            try {\r\n                                int status;\r\n                                if (Word.CheckInList(testword.WordContent.toString())) {\r\n                                    index = 0;\r\n                                    line++;\r\n                                    testword.CheckAns(ans);\r\n                                    System.out.println(testword.ShowColor());\r\n                                    for (int i = 0; i < 5; i++) {\r\n                                        if (testword.letters.get(i).letterColor == LetterColor.Green) {\r\n                                            aniLetters[i].text.setFill(Color.GREEN);\r\n                                            Controller.changeButtonColor(testword.letters.get(i).letterContent, 3);\r\n                                        }\r\n                                        if (testword.letters.get(i).letterColor == LetterColor.Yellow) {\r\n                                            aniLetters[i].text.setFill(Color.YELLOW);\r\n                                            Controller.changeButtonColor(testword.letters.get(i).letterContent, 2);\r\n                                        }\r\n                                        if (testword.letters.get(i).letterColor == LetterColor.Grey) {\r\n                                            aniLetters[i].text.setFill(Color.BLACK);\r\n                                            Controller.changeButtonColor(testword.letters.get(i).letterContent, 1);\r\n                                        }\r\n\r\n                                    }\r\n                                    status = testword.getState();\r\n                                    if (status == 0) {\r\n                                        System.out.println(\"you win\");\r\n                                        Rectangle recB = new Rectangle();\r\n                                        recB.setFill(Color.BLACK);\r\n                                        recB.setWidth(1280);\r\n                                        recB.setHeight(800);\r\n//                                        pane.getChildren().add(recB);\r\n                                        FadeTransition black = new FadeTransition();\r\n                                        black.setNode(recB);\r\n                                        black.setFromValue(0);\r\n                                        black.setToValue(0.8);\r\n                                        black.setDuration(Duration.seconds(1));\r\n                                        pane.getChildren().add(black.getNode());\r\n                                        AnchorPane.setTopAnchor(black.getNode(), 0.);\r\n                                        AnchorPane.setLeftAnchor(black.getNode(), 0.);\r\n                                        black.play();\r\n\r\n                                        FadeTransition win = new FadeTransition();\r\n                                        Text text = new Text(\"WIN!!\");\r\n                                        gameIsOver = true;\r\n                                        text.setFont(Font.font(\"times new roman\", FontWeight.MEDIUM, FontPosture.REGULAR, 100));\r\n                                        text.setTextAlignment(TextAlignment.JUSTIFY);\r\n                                        text.setFill(Color.GREEN);\r\n                                        win.setNode(text);\r\n                                        win.setFromValue(0);\r\n                                        win.setToValue(1);\r\n                                        win.setDuration(Duration.seconds(1));\r\n                                        pane.getChildren().add(win.getNode());\r\n                                        AnchorPane.setTopAnchor(win.getNode(), 280.0);\r\n                                        AnchorPane.setLeftAnchor(win.getNode(), 500.0);\r\n                                        win.play();\r\n\r\n                                        Button b = new Button();\r\n                                        b.setText(\"Back to Menu\");\r\n                                        b.setLayoutX(200);\r\n                                        b.setLayoutY(50);\r\n                                        b.setPrefWidth(200);\r\n                                        b.setPrefHeight(50);\r\n                                        //当鼠标进入按钮时添加阴影特效\r\n                                        b.addEventHandler(MouseEvent.MOUSE_ENTERED, (MouseEvent e) -> b.setStyle(\r\n                                                \"-fx-background-color:#a8a8a8;\" +         //设置背景颜色\r\n                                                        \"-fx-background-radius:5;\" +     //设置背景圆角\r\n                                                        \"-fx-text-fill:#ffffff;\" +        //设置字体颜色\r\n                                                        \"-fx-border-radius:5;\" +         //设置边框圆角\r\n                                                        \"-fx-border-color:#838383;\"     //设置边框颜色\r\n                                                        + \"-fx-font-size: 20\"\r\n                                        ));\r\n                                        //当鼠标离开按钮时移除阴影效果\r\n                                        b.addEventHandler(MouseEvent.MOUSE_EXITED, (MouseEvent e) -> b.setStyle(\r\n                                                \"-fx-background-color:#7a7a7a;\" +         //设置背景颜色\r\n                                                        \"-fx-background-radius:5;\" +     //设置背景圆角\r\n                                                        \"-fx-text-fill:#ffffff;\" +        //设置字体颜色\r\n                                                        \"-fx-border-radius:5;\" +         //设置边框圆角\r\n                                                        \"-fx-border-color:#838383;\"     //设置边框颜色\r\n                                                        + \"-fx-font-size: 20\"\r\n                                        ));\r\n                                        b.setStyle(\r\n                                                \"-fx-background-color:#7a7a7a;\" +         //设置背景颜色\r\n                                                        \"-fx-background-radius:5;\" +     //设置背景圆角\r\n                                                        \"-fx-text-fill:#ffffff;\" +        //设置字体颜色\r\n                                                        \"-fx-border-radius:5;\" +         //设置边框圆角\r\n                                                        \"-fx-border-color:#838383;\"     //设置边框颜色\r\n                                                        + \"-fx-font-size: 20\"\r\n                                        );\r\n                                        AnchorPane.setTopAnchor(b, 400.);\r\n                                        AnchorPane.setLeftAnchor(b, 530.);\r\n                                        pane.getChildren().add(b);\r\n                                        b.setOnMouseClicked(finish -> {\r\n                                            try {\r\n                                                Controller.backToMenu();\r\n                                            } catch (Exception e) {\r\n                                                throw new RuntimeException(e);\r\n                                            }\r\n                                        });\r\n\r\n                                    }\r\n                                    if (line == 6 && !gameIsOver) {\r\n                                        System.out.println(\"you lose\");\r\n                                        System.out.println(\"you win\");\r\n                                        Rectangle recB = new Rectangle();\r\n                                        recB.setFill(Color.BLACK);\r\n                                        recB.setWidth(1280);\r\n                                        recB.setHeight(800);\r\n//                                        pane.getChildren().add(recB);\r\n                                        FadeTransition black = new FadeTransition();\r\n                                        black.setNode(recB);\r\n                                        black.setFromValue(0);\r\n                                        black.setToValue(0.8);\r\n                                        black.setDuration(Duration.seconds(1));\r\n                                        pane.getChildren().add(black.getNode());\r\n                                        AnchorPane.setTopAnchor(black.getNode(), 0.);\r\n                                        AnchorPane.setLeftAnchor(black.getNode(), 0.);\r\n                                        black.play();\r\n\r\n                                        FadeTransition win = new FadeTransition();\r\n                                        Text text = new Text(\"LOSE!!\");\r\n                                        gameIsOver = true;\r\n                                        text.setFont(Font.font(\"times new roman\", FontWeight.MEDIUM, FontPosture.REGULAR, 100));\r\n                                        text.setTextAlignment(TextAlignment.JUSTIFY);\r\n                                        text.setFill(Color.RED);\r\n                                        win.setNode(text);\r\n                                        win.setFromValue(0);\r\n                                        win.setToValue(1);\r\n                                        win.setDuration(Duration.seconds(1));\r\n                                        pane.getChildren().add(win.getNode());\r\n                                        AnchorPane.setTopAnchor(win.getNode(), 280.0);\r\n                                        AnchorPane.setLeftAnchor(win.getNode(), 500.0);\r\n                                        win.play();\r\n\r\n                                        Button b = new Button();\r\n                                        b.setText(\"Back to Menu\");\r\n                                        b.setLayoutX(200);\r\n                                        b.setLayoutY(50);\r\n                                        b.setPrefWidth(200);\r\n                                        b.setPrefHeight(50);\r\n                                        b.addEventHandler(MouseEvent.MOUSE_ENTERED, (MouseEvent e) -> b.setStyle(\r\n                                                \"-fx-background-color:#a8a8a8;\" +         //设置背景颜色\r\n                                                        \"-fx-background-radius:5;\" +     //设置背景圆角\r\n                                                        \"-fx-text-fill:#ffffff;\" +        //设置字体颜色\r\n                                                        \"-fx-border-radius:5;\" +         //设置边框圆角\r\n                                                        \"-fx-border-color:#838383;\"     //设置边框颜色\r\n                                                        + \"-fx-font-size: 20\"\r\n                                        ));\r\n                                        //当鼠标离开按钮时移除阴影效果\r\n                                        b.addEventHandler(MouseEvent.MOUSE_EXITED, (MouseEvent e) -> b.setStyle(\r\n                                                \"-fx-background-color:#7a7a7a;\" +         //设置背景颜色\r\n                                                        \"-fx-background-radius:5;\" +     //设置背景圆角\r\n                                                        \"-fx-text-fill:#ffffff;\" +        //设置字体颜色\r\n                                                        \"-fx-border-radius:5;\" +         //设置边框圆角\r\n                                                        \"-fx-border-color:#838383;\"     //设置边框颜色\r\n                                                        + \"-fx-font-size: 20\"\r\n                                        ));\r\n                                        b.setStyle(\r\n                                                \"-fx-background-color:#7a7a7a;\" +         //设置背景颜色\r\n                                                        \"-fx-background-radius:5;\" +     //设置背景圆角\r\n                                                        \"-fx-text-fill:#ffffff;\" +        //设置字体颜色\r\n                                                        \"-fx-border-radius:5;\" +         //设置边框圆角\r\n                                                        \"-fx-border-color:#838383;\"     //设置边框颜色\r\n//                                                        \"-fx-border-style:dashed;\"+      //设置边框样式\r\n//                                                        \"-fx-border-width:5;\"+           //设置边框宽度\r\n//                                                        \"-fx-border-insets:-5\"           //设置边框插入值\r\n                                                        + \"-fx-font-size: 20\"\r\n                                        );\r\n                                        AnchorPane.setTopAnchor(b, 400.);\r\n                                        AnchorPane.setLeftAnchor(b, 530.);\r\n                                        pane.getChildren().add(b);\r\n                                        b.setOnMouseClicked(finish -> {\r\n                                            try {\r\n                                                Controller.backToMenu();\r\n                                            } catch (Exception e) {\r\n                                                throw new RuntimeException(e);\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                    for (int i = 0; i < 5; i++) {\r\n                                        testword.RemoveLetter();\r\n                                    }\r\n\r\n                                } else {\r\n                                    System.out.println(\"Not in the list\");\r\n\r\n                                    Rectangle recB = new Rectangle();\r\n                                    recB.setFill(Color.BLACK);\r\n                                    recB.setWidth(1280);\r\n                                    recB.setHeight(800);\r\n//                                        pane.getChildren().add(recB);\r\n                                    FadeTransition black = new FadeTransition();\r\n                                    black.setNode(recB);\r\n                                    black.setFromValue(0);\r\n                                    black.setToValue(0.2);\r\n                                    black.setCycleCount(2);\r\n                                    black.setAutoReverse(true);\r\n                                    black.setDuration(Duration.seconds(1));\r\n\r\n\r\n                                    pane.getChildren().add(black.getNode());\r\n                                    AnchorPane.setTopAnchor(black.getNode(), 0.);\r\n                                    AnchorPane.setLeftAnchor(black.getNode(), 0.);\r\n                                    black.play();\r\n                                    black.setOnFinished(finish-> pane.getChildren().remove(black.getNode()));\r\n\r\n                                    FadeTransition win = new FadeTransition();\r\n                                    Text text = new Text(\"Not in Word List!!\");\r\n                                    text.setFont(Font.font(\"times new roman\", FontWeight.MEDIUM, FontPosture.REGULAR, 80));\r\n                                    text.setTextAlignment(TextAlignment.JUSTIFY);\r\n                                    text.setFill(Color.YELLOW);\r\n                                    win.setNode(text);\r\n                                    win.setFromValue(0);\r\n                                    win.setToValue(1);\r\n                                    win.setDuration(Duration.seconds(1));\r\n                                    win.setAutoReverse(true);\r\n                                    win.setCycleCount(2);\r\n                                    pane.getChildren().add(win.getNode());\r\n                                    AnchorPane.setTopAnchor(win.getNode(), 300.0);\r\n                                    AnchorPane.setLeftAnchor(win.getNode(), 350.0);\r\n                                    win.play();\r\n                                    win.setOnFinished(finish->{\r\n                                        pane.getChildren().remove(win.getNode());\r\n                                        System.out.println(\"YES\");\r\n                                    });\r\n                                }\r\n\r\n                            } catch (Exception e) {\r\n                                //throw new RuntimeException(e);\r\n                                System.out.println(e);\r\n                                for (int i = 0; i < 5; i++) {\r\n                                    testword.RemoveLetter();\r\n                                }\r\n                            }\r\n                        } else {\r\n                            System.out.println(testword.WordContent);\r\n                            System.out.println(testword.letters.size());\r\n                            System.out.println(\"not enough letter!\");\r\n                        }\r\n                    }\r\n                }\r\n\r\n            } catch (Exception e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n        });\r\n\r\n        //  Parent mainScene = FXMLLoader.load(Objects.requireNonNull(Main.class.getResource(\"resources/mainScene.fxml\")));\r\n\r\n\r\n        mainWindow.setScene(scene);\r\n        mainWindow.setTitle(\"WORDLE-EX\");\r\n        mainWindow.show();\r\n    }\r\n\r\n    /**\r\n     * 进入AdvanceMode的方法\r\n     *\r\n     * @throws Exception 异常\r\n     */\r\n    public static void startAdvanceMode() throws Exception {\r\n        gameIsOver = false;\r\n        index = 0;\r\n        line = 0;\r\n        leftLine = 0;\r\n        Button button = new Button(\"测试\");\r\n        testword = new Word();\r\n        pane = new AnchorPane();\r\n        pane.getChildren().add(button);\r\n        // Parent mainScene = FXMLLoader.load(Objects.requireNonNull(Main.class.getResource(\"resources/advanceScene.fxml\")));\r\n\r\n\r\n        FXMLLoader loader = new FXMLLoader(Main.class.getResource(\"resources/advanceScene.fxml\"));\r\n        Parent mainScene = loader.load();\r\n        pane.getChildren().add(mainScene);\r\n\r\n        Scene scene = new Scene(pane, 1280, 800);\r\n\r\n        advanceController = loader.getController();\r\n\r\n\r\n        mainWindow.setScene(scene);\r\n        mainWindow.setTitle(\"WORDLE-EX\");\r\n        mainWindow.show();\r\n\r\n\r\n        WordList.AnswerWord = WordList.ReadWord(\"src/Data/possible_words.txt\");\r\n        WordList.PossibleWord = WordList.ReadWord(\"src/Data/allowed_words.txt\");\r\n        WordList.LegalWord = WordList.ReadWord(\"src/Data/allowed_words.txt\");\r\n        WordList.WordPrior = WordList.ReadPrior(\"src/Data/freq_map.json\");\r\n\r\n        ArrayList<String> list = new ArrayList<>(WordList.AnswerWord);\r\n        int ansIdx = new Random().nextInt(list.size());\r\n        ans = list.get(ansIdx);\r\n\r\n        GuessAlgorithm.eNow = GuessAlgorithm.calENow(WordList.PossibleWord);\r\n        GuessAlgorithm.possibilities = WordList.PossibleWord.size();\r\n        GuessAlgorithm.getShowList(WordList.PossibleWord);\r\n\r\n        GuessAlgorithm.getWordScore(WordList.LegalWord, WordList.PossibleWord);\r\n\r\n        AniString hint = new AniString(\"TOP Picks    E[Info]    p(word)\", Color.WHITE);\r\n        pane.getChildren().add(hint.ft.getNode());\r\n        AnchorPane.setLeftAnchor(hint.ft.getNode(), 900.0);\r\n        AnchorPane.setTopAnchor(hint.ft.getNode(), 120.0);\r\n        hint.ft.play();\r\n\r\n        recommend = new AniString[5];\r\n        recommendInfo = new AniString[5];\r\n        recommendPossibility = new AniString[5];\r\n\r\n        df2 = new DecimalFormat(\"#.##\");\r\n        df6 = new DecimalFormat(\"#.#####\");\r\n\r\n        for (int i = 0; i < 5 && i < GuessAlgorithm.wsList.size(); i++) {\r\n            recommend[i] = new AniString(GuessAlgorithm.wsList.get(i).word, Color.WHITE);\r\n            pane.getChildren().add(recommend[i].ft.getNode());\r\n            AnchorPane.setLeftAnchor(recommend[i].ft.getNode(), 900.0);\r\n            AnchorPane.setTopAnchor(recommend[i].ft.getNode(), 180.0 + i * 60.0);\r\n            recommend[i].ft.play();\r\n            recommendInfo[i] = new AniString(df2.format(GuessAlgorithm.wsList.get(i).entropy), Color.WHITE);\r\n            pane.getChildren().add(recommendInfo[i].ft.getNode());\r\n            AnchorPane.setLeftAnchor(recommendInfo[i].ft.getNode(), 900.0 + 150.0);\r\n            AnchorPane.setTopAnchor(recommendInfo[i].ft.getNode(), 180.0 + i * 60.0);\r\n            recommendInfo[i].ft.play();\r\n            recommendPossibility[i] = new AniString(df6.format(GuessAlgorithm.wsList.get(i).possible), Color.WHITE);\r\n            pane.getChildren().add(recommendPossibility[i].ft.getNode());\r\n            AnchorPane.setLeftAnchor(recommendPossibility[i].ft.getNode(), 900.0 + 240.0);\r\n            AnchorPane.setTopAnchor(recommendPossibility[i].ft.getNode(), 180.0 + i * 60.0);\r\n            recommendPossibility[i].ft.play();\r\n        }\r\n\r\n        aniLetters = new AniLetter[5];\r\n        aniStrings = new ArrayList<>();\r\n\r\n\r\n        aniStrings.add(new AniString(\"Possibilities:\", Color.WHITE));\r\n        pane.getChildren().add(aniStrings.get(aniStrings.size() - 1).ft.getNode());\r\n        AnchorPane.setLeftAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 150.0);\r\n        AnchorPane.setTopAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 125.0);\r\n        aniStrings.get(aniStrings.size() - 1).ft.play();\r\n\r\n        aniStrings.add(new AniString(\"\" + GuessAlgorithm.possibilities, Color.WHITE));\r\n        pane.getChildren().add(aniStrings.get(aniStrings.size() - 1).ft.getNode());\r\n        AnchorPane.setLeftAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 150.0 + aniStrings.size() * 75.0);\r\n        AnchorPane.setTopAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 125.0);\r\n        aniStrings.get(aniStrings.size() - 1).ft.play();\r\n\r\n        aniStrings.add(new AniString(\"/ E:\", Color.SKYBLUE));\r\n        pane.getChildren().add(aniStrings.get(aniStrings.size() - 1).ft.getNode());\r\n        AnchorPane.setLeftAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 150.0 + aniStrings.size() * 75.0);\r\n        AnchorPane.setTopAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 125.0);\r\n        aniStrings.get(aniStrings.size() - 1).ft.play();\r\n\r\n        // 保留小数点后两位\r\n\r\n        aniStrings.add(new AniString(\"\" + df2.format(GuessAlgorithm.eNow), Color.SKYBLUE));\r\n        pane.getChildren().add(aniStrings.get(aniStrings.size() - 1).ft.getNode());\r\n        AnchorPane.setLeftAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 120 + aniStrings.size() * 75.0);\r\n        AnchorPane.setTopAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 125.0);\r\n        aniStrings.get(aniStrings.size() - 1).ft.play();\r\n\r\n        aniStrings.clear();\r\n\r\n        pane.addEventFilter(KeyEvent.KEY_PRESSED, (KeyEvent keyEvent) -> {\r\n\r\n            KeyCode kCode = keyEvent.getCode();\r\n            System.out.println(kCode.getName());\r\n            char toAddLetter;\r\n            try {\r\n                if (!gameIsOver) {\r\n                    if (kCode.isLetterKey() && index < 5 && line < 6) {\r\n                        toAddLetter = (char) (kCode.getCode() + 32);\r\n                        testword.AddLetter(toAddLetter);\r\n                        aniLetters[index] = new AniLetter(keyEvent.getText().toUpperCase(Locale.ROOT));\r\n                        pane.getChildren().add(aniLetters[index].ft.getNode());\r\n                        AnchorPane.setLeftAnchor(aniLetters[index].ft.getNode(), 500.0 + index * 60.0);\r\n                        AnchorPane.setTopAnchor(aniLetters[index].ft.getNode(), 120.0 + line * 60.0);\r\n                        aniLetters[index].ft.play();\r\n                        index += 1;\r\n                        System.out.println(testword.WordContent);\r\n                    }\r\n                    else if (kCode == KeyCode.BACK_SPACE && index >= 1) {\r\n                        testword.RemoveLetter();\r\n                        pane.getChildren().remove(aniLetters[index - 1].ft.getNode());\r\n                        index -= 1;\r\n                    }\r\n                    else if (kCode == KeyCode.ENTER) {\r\n                        if (testword.letters.size() == 5) {\r\n                            try {\r\n                                int status;\r\n                                if (Word.CheckInList(testword.WordContent.toString())) {\r\n                                    index = 0;\r\n                                    line++;\r\n                                    testword.CheckAns(ans);\r\n                                    System.out.println(testword.ShowColor());\r\n                                    for (int i = 0; i < 5; i++) {\r\n                                        if (testword.letters.get(i).letterColor == LetterColor.Green) {\r\n                                            aniLetters[i].text.setFill(Color.GREEN);\r\n                                            advanceController.changeButtonColor(testword.letters.get(i).letterContent, 3);\r\n                                        }\r\n                                        if (testword.letters.get(i).letterColor == LetterColor.Yellow) {\r\n                                            aniLetters[i].text.setFill(Color.YELLOW);\r\n                                            advanceController.changeButtonColor(testword.letters.get(i).letterContent, 2);\r\n                                        }\r\n                                        if (testword.letters.get(i).letterColor == LetterColor.Grey) {\r\n                                            aniLetters[i].text.setFill(Color.BLACK);\r\n                                            System.out.println(\"changecolorbegin\");\r\n                                            advanceController.changeButtonColor(testword.letters.get(i).letterContent, 1);\r\n                                            System.out.println(\"changecolorend\");\r\n                                        }\r\n                                    }\r\n                                    status = testword.getState();\r\n\r\n                                    WordList.PossibleWord = GuessAlgorithm.updatePossibleWord(WordList.PossibleWord, testword.getState(), testword.WordContent.toString());\r\n                                    GuessAlgorithm.possibilities = WordList.PossibleWord.size();\r\n                                    double newE = GuessAlgorithm.calENow(WordList.PossibleWord);\r\n                                    double info = GuessAlgorithm.eNow - newE;\r\n\r\n                                    AniString infoString = new AniString(df2.format(info) + \"bits\", Color.WHITE);\r\n                                    pane.getChildren().add(infoString.ft.getNode());\r\n                                    AnchorPane.setLeftAnchor(infoString.ft.getNode(), 800.0);\r\n                                    AnchorPane.setTopAnchor(infoString.ft.getNode(), 125.0 + leftLine * 60.0);\r\n                                    infoString.ft.play();\r\n\r\n                                    GuessAlgorithm.eNow = newE;\r\n                                    leftLine++;\r\n                                    aniStrings.add(new AniString(\"Possibilities:\", Color.WHITE));\r\n                                    pane.getChildren().add(aniStrings.get(aniStrings.size() - 1).ft.getNode());\r\n                                    AnchorPane.setLeftAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 150.0);\r\n                                    AnchorPane.setTopAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 125.0 + leftLine * 60.0);\r\n                                    aniStrings.get(aniStrings.size() - 1).ft.play();\r\n\r\n                                    aniStrings.add(new AniString(\"\" + GuessAlgorithm.possibilities, Color.WHITE));\r\n                                    pane.getChildren().add(aniStrings.get(aniStrings.size() - 1).ft.getNode());\r\n                                    AnchorPane.setLeftAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 150.0 + aniStrings.size() * 75.0);\r\n                                    AnchorPane.setTopAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 125.0 + leftLine * 60.0);\r\n                                    aniStrings.get(aniStrings.size() - 1).ft.play();\r\n\r\n                                    aniStrings.add(new AniString(\"/ E:\", Color.SKYBLUE));\r\n                                    pane.getChildren().add(aniStrings.get(aniStrings.size() - 1).ft.getNode());\r\n                                    AnchorPane.setLeftAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 150.0 + aniStrings.size() * 75.0);\r\n                                    AnchorPane.setTopAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 125.0 + leftLine * 60.0);\r\n                                    aniStrings.get(aniStrings.size() - 1).ft.play();\r\n\r\n                                    // 保留小数点后两位\r\n                                    DecimalFormat df = new DecimalFormat(\"#.00\");\r\n                                    aniStrings.add(new AniString(\"\" + df.format(GuessAlgorithm.eNow), Color.SKYBLUE));\r\n                                    pane.getChildren().add(aniStrings.get(aniStrings.size() - 1).ft.getNode());\r\n                                    AnchorPane.setLeftAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 120 + aniStrings.size() * 75.0);\r\n                                    AnchorPane.setTopAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 125.0 + leftLine * 60.0);\r\n                                    aniStrings.get(aniStrings.size() - 1).ft.play();\r\n\r\n                                    aniStrings.clear();\r\n\r\n                                    GuessAlgorithm.getWordScore(WordList.LegalWord, WordList.PossibleWord);\r\n                                    for (int i = 0; i < 5 && i < GuessAlgorithm.wsList.size(); i++) {\r\n                                        System.out.println(GuessAlgorithm.wsList.get(i).word + \" \" + GuessAlgorithm.wsList.get(i).entropy + \" \" + GuessAlgorithm.wsList.get(i).possible + \" \" + GuessAlgorithm.wsList.get(i).score);\r\n                                    }\r\n\r\n\r\n                                    for (int i = 0; i < 5; i++) {\r\n                                        testword.RemoveLetter();\r\n                                        pane.getChildren().remove(recommend[i].ft.getNode());\r\n                                        pane.getChildren().remove(recommendInfo[i].ft.getNode());\r\n                                        pane.getChildren().remove(recommendPossibility[i].ft.getNode());\r\n                                        AniString fadeRecommend = new AniString(recommend[i].string.getText(), Color.WHITE);\r\n                                        pane.getChildren().add(fadeRecommend.ft2.getNode());\r\n                                        AnchorPane.setLeftAnchor(fadeRecommend.ft2.getNode(), 900.0);\r\n                                        AnchorPane.setTopAnchor(fadeRecommend.ft2.getNode(), 180 + i * 60.0);\r\n                                        fadeRecommend.ft2.play();\r\n                                        AniString fadeRecommendInfo = new AniString(recommendInfo[i].string.getText(), Color.WHITE);\r\n                                        pane.getChildren().add(fadeRecommendInfo.ft2.getNode());\r\n                                        AnchorPane.setLeftAnchor(fadeRecommendInfo.ft2.getNode(), 900.0 + 150);\r\n                                        AnchorPane.setTopAnchor(fadeRecommendInfo.ft2.getNode(), 180 + i * 60.0);\r\n                                        fadeRecommendInfo.ft2.play();\r\n                                        AniString fadeRecommendPossibility = new AniString(recommendPossibility[i].string.getText(), Color.WHITE);\r\n                                        pane.getChildren().add(fadeRecommendPossibility.ft2.getNode());\r\n                                        AnchorPane.setLeftAnchor(fadeRecommendPossibility.ft2.getNode(), 900.0 + 240);\r\n                                        AnchorPane.setTopAnchor(fadeRecommendPossibility.ft2.getNode(), 180 + i * 60.0);\r\n                                        fadeRecommendPossibility.ft2.play();\r\n                                    }\r\n\r\n                                    for (int i = 0; i < 5 && i < GuessAlgorithm.wsList.size(); i++) {\r\n                                        recommend[i] = new AniString(GuessAlgorithm.wsList.get(i).word, Color.WHITE);\r\n                                        pane.getChildren().add(recommend[i].ft.getNode());\r\n                                        AnchorPane.setLeftAnchor(recommend[i].ft.getNode(), 900.0);\r\n                                        AnchorPane.setTopAnchor(recommend[i].ft.getNode(), 180.0 + i * 60.0);\r\n                                        recommend[i].ft.play();\r\n                                        recommendInfo[i] = new AniString(df2.format(GuessAlgorithm.wsList.get(i).entropy), Color.WHITE);\r\n                                        pane.getChildren().add(recommendInfo[i].ft.getNode());\r\n                                        AnchorPane.setLeftAnchor(recommendInfo[i].ft.getNode(), 900.0 + 150.0);\r\n                                        AnchorPane.setTopAnchor(recommendInfo[i].ft.getNode(), 180.0 + i * 60.0);\r\n                                        recommendInfo[i].ft.play();\r\n                                        recommendPossibility[i] = new AniString(df6.format(GuessAlgorithm.wsList.get(i).possible), Color.WHITE);\r\n                                        pane.getChildren().add(recommendPossibility[i].ft.getNode());\r\n                                        AnchorPane.setLeftAnchor(recommendPossibility[i].ft.getNode(), 900.0 + 240.0);\r\n                                        AnchorPane.setTopAnchor(recommendPossibility[i].ft.getNode(), 180.0 + i * 60.0);\r\n                                        recommendPossibility[i].ft.play();\r\n                                    }\r\n                                    if (status == 0) {\r\n                                        System.out.println(\"you win\");\r\n                                        Rectangle recB = new Rectangle();\r\n                                        recB.setFill(Color.BLACK);\r\n                                        recB.setWidth(1280);\r\n                                        recB.setHeight(800);\r\n//                                        pane.getChildren().add(recB);\r\n                                        FadeTransition black = new FadeTransition();\r\n                                        black.setNode(recB);\r\n                                        black.setFromValue(0);\r\n                                        black.setToValue(0.8);\r\n                                        black.setDuration(Duration.seconds(1));\r\n                                        pane.getChildren().add(black.getNode());\r\n                                        AnchorPane.setTopAnchor(black.getNode(), 0.);\r\n                                        AnchorPane.setLeftAnchor(black.getNode(), 0.);\r\n                                        black.play();\r\n\r\n                                        FadeTransition win = new FadeTransition();\r\n                                        Text text = new Text(\"WIN!!\");\r\n                                        gameIsOver = true;\r\n                                        text.setFont(Font.font(\"times new roman\", FontWeight.MEDIUM, FontPosture.REGULAR, 100));\r\n                                        text.setTextAlignment(TextAlignment.JUSTIFY);\r\n                                        text.setFill(Color.GREEN);\r\n                                        win.setNode(text);\r\n                                        win.setFromValue(0);\r\n                                        win.setToValue(1);\r\n                                        win.setDuration(Duration.seconds(1));\r\n                                        pane.getChildren().add(win.getNode());\r\n                                        AnchorPane.setTopAnchor(win.getNode(), 280.0);\r\n                                        AnchorPane.setLeftAnchor(win.getNode(), 500.0);\r\n                                        win.play();\r\n\r\n                                        Button b = new Button();\r\n                                        b.setText(\"Back to Menu\");\r\n                                        b.setLayoutX(200);\r\n                                        b.setLayoutY(50);\r\n                                        b.setPrefWidth(200);\r\n                                        b.setPrefHeight(50);\r\n                                        b.addEventHandler(MouseEvent.MOUSE_ENTERED, (MouseEvent e) -> b.setStyle(\r\n                                                \"-fx-background-color:#a8a8a8;\" +         //设置背景颜色\r\n                                                        \"-fx-background-radius:5;\" +     //设置背景圆角\r\n                                                        \"-fx-text-fill:#ffffff;\" +        //设置字体颜色\r\n                                                        \"-fx-border-radius:5;\" +         //设置边框圆角\r\n                                                        \"-fx-border-color:#838383;\"     //设置边框颜色\r\n                                                        + \"-fx-font-size: 20\"\r\n                                        ));\r\n                                        //当鼠标离开按钮时移除阴影效果\r\n                                        b.addEventHandler(MouseEvent.MOUSE_EXITED, (MouseEvent e) -> b.setStyle(\r\n                                                \"-fx-background-color:#7a7a7a;\" +         //设置背景颜色\r\n                                                        \"-fx-background-radius:5;\" +     //设置背景圆角\r\n                                                        \"-fx-text-fill:#ffffff;\" +        //设置字体颜色\r\n                                                        \"-fx-border-radius:5;\" +         //设置边框圆角\r\n                                                        \"-fx-border-color:#838383;\"     //设置边框颜色\r\n                                                        + \"-fx-font-size: 20\"\r\n                                        ));\r\n                                        b.setStyle(\r\n                                                \"-fx-background-color:#7a7a7a;\" +         //设置背景颜色\r\n                                                        \"-fx-background-radius:5;\" +     //设置背景圆角\r\n                                                        \"-fx-text-fill:#ffffff;\" +        //设置字体颜色\r\n                                                        \"-fx-border-radius:5;\" +         //设置边框圆角\r\n                                                        \"-fx-border-color:#838383;\"     //设置边框颜色\r\n//                                                        \"-fx-border-style:dashed;\"+      //设置边框样式\r\n//                                                        \"-fx-border-width:5;\"+           //设置边框宽度\r\n//                                                        \"-fx-border-insets:-5\"           //设置边框插入值\r\n                                                        + \"-fx-font-size: 20\"\r\n                                        );\r\n                                        AnchorPane.setTopAnchor(b, 400.);\r\n                                        AnchorPane.setLeftAnchor(b, 530.);\r\n                                        pane.getChildren().add(b);\r\n                                        b.setOnMouseClicked(finish -> {\r\n                                            try {\r\n                                                advanceController.backToMenu();\r\n                                            } catch (Exception e) {\r\n                                                throw new RuntimeException(e);\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                    if (line == 6 && !gameIsOver) {\r\n                                        System.out.println(\"you lose\");\r\n\r\n                                        Rectangle recB = new Rectangle();\r\n                                        recB.setFill(Color.BLACK);\r\n                                        recB.setWidth(1280);\r\n                                        recB.setHeight(800);\r\n//                                        pane.getChildren().add(recB);\r\n                                        FadeTransition black = new FadeTransition();\r\n                                        black.setNode(recB);\r\n                                        black.setFromValue(0);\r\n                                        black.setToValue(0.8);\r\n                                        black.setDuration(Duration.seconds(1));\r\n                                        pane.getChildren().add(black.getNode());\r\n                                        AnchorPane.setTopAnchor(black.getNode(), 0.);\r\n                                        AnchorPane.setLeftAnchor(black.getNode(), 0.);\r\n                                        black.play();\r\n\r\n                                        FadeTransition win = new FadeTransition();\r\n                                        Text text = new Text(\"LOSE!!\");\r\n                                        gameIsOver = true;\r\n                                        text.setFont(Font.font(\"times new roman\", FontWeight.MEDIUM, FontPosture.REGULAR, 100));\r\n                                        text.setTextAlignment(TextAlignment.JUSTIFY);\r\n                                        text.setFill(Color.RED);\r\n                                        win.setNode(text);\r\n                                        win.setFromValue(0);\r\n                                        win.setToValue(1);\r\n                                        win.setDuration(Duration.seconds(1));\r\n                                        pane.getChildren().add(win.getNode());\r\n                                        AnchorPane.setTopAnchor(win.getNode(), 280.0);\r\n                                        AnchorPane.setLeftAnchor(win.getNode(), 500.0);\r\n                                        win.play();\r\n\r\n                                        Button b = new Button();\r\n                                        b.setText(\"Back to Menu\");\r\n                                        b.setLayoutX(200);\r\n                                        b.setLayoutY(50);\r\n                                        b.setPrefWidth(200);\r\n                                        b.setPrefHeight(50);\r\n                                        b.addEventHandler(MouseEvent.MOUSE_ENTERED, (MouseEvent e) -> b.setStyle(\r\n                                                \"-fx-background-color:#a8a8a8;\" +         //设置背景颜色\r\n                                                        \"-fx-background-radius:5;\" +     //设置背景圆角\r\n                                                        \"-fx-text-fill:#ffffff;\" +        //设置字体颜色\r\n                                                        \"-fx-border-radius:5;\" +         //设置边框圆角\r\n                                                        \"-fx-border-color:#838383;\"     //设置边框颜色\r\n                                                        + \"-fx-font-size: 20\"\r\n                                        ));\r\n                                        //当鼠标离开按钮时移除阴影效果\r\n                                        b.addEventHandler(MouseEvent.MOUSE_EXITED, (MouseEvent e) -> b.setStyle(\r\n                                                \"-fx-background-color:#7a7a7a;\" +         //设置背景颜色\r\n                                                        \"-fx-background-radius:5;\" +     //设置背景圆角\r\n                                                        \"-fx-text-fill:#ffffff;\" +        //设置字体颜色\r\n                                                        \"-fx-border-radius:5;\" +         //设置边框圆角\r\n                                                        \"-fx-border-color:#838383;\"     //设置边框颜色\r\n                                                        + \"-fx-font-size: 20\"\r\n                                        ));\r\n                                        b.setStyle(\r\n                                                \"-fx-background-color:#7a7a7a;\" +         //设置背景颜色\r\n                                                        \"-fx-background-radius:5;\" +     //设置背景圆角\r\n                                                        \"-fx-text-fill:#ffffff;\" +        //设置字体颜色\r\n                                                        \"-fx-border-radius:5;\" +         //设置边框圆角\r\n                                                        \"-fx-border-color:#838383;\"     //设置边框颜色\r\n//                                                        \"-fx-border-style:dashed;\"+      //设置边框样式\r\n//                                                        \"-fx-border-width:5;\"+           //设置边框宽度\r\n//                                                        \"-fx-border-insets:-5\"           //设置边框插入值\r\n                                                        + \"-fx-font-size: 20\"\r\n                                        );\r\n                                        AnchorPane.setTopAnchor(b, 400.);\r\n                                        AnchorPane.setLeftAnchor(b, 530.);\r\n                                        pane.getChildren().add(b);\r\n                                        b.setOnMouseClicked(finish -> {\r\n                                            try {\r\n                                                Controller.backToMenu();\r\n                                            } catch (Exception e) {\r\n                                                throw new RuntimeException(e);\r\n                                            }\r\n                                        });\r\n                                    }\r\n\r\n                                } else {\r\n                                    System.out.println(\"Not in the list\");\r\n\r\n                                    Rectangle recB = new Rectangle();\r\n                                    recB.setFill(Color.BLACK);\r\n                                    recB.setWidth(1280);\r\n                                    recB.setHeight(800);\r\n//                                        pane.getChildren().add(recB);\r\n                                    FadeTransition black = new FadeTransition();\r\n                                    black.setNode(recB);\r\n                                    black.setFromValue(0);\r\n                                    black.setToValue(0.2);\r\n                                    black.setCycleCount(2);\r\n                                    black.setAutoReverse(true);\r\n                                    black.setDuration(Duration.seconds(1));\r\n\r\n\r\n                                    pane.getChildren().add(black.getNode());\r\n                                    AnchorPane.setTopAnchor(black.getNode(), 0.);\r\n                                    AnchorPane.setLeftAnchor(black.getNode(), 0.);\r\n                                    black.play();\r\n                                    black.setOnFinished(finish-> pane.getChildren().remove(black.getNode()));\r\n\r\n                                    FadeTransition win = new FadeTransition();\r\n                                    Text text = new Text(\"Not in Word List!!\");\r\n                                    text.setFont(Font.font(\"times new roman\", FontWeight.MEDIUM, FontPosture.REGULAR, 80));\r\n                                    text.setTextAlignment(TextAlignment.JUSTIFY);\r\n                                    text.setFill(Color.YELLOW);\r\n                                    win.setNode(text);\r\n                                    win.setFromValue(0);\r\n                                    win.setToValue(1);\r\n                                    win.setDuration(Duration.seconds(1));\r\n                                    win.setAutoReverse(true);\r\n                                    win.setCycleCount(2);\r\n                                    pane.getChildren().add(win.getNode());\r\n                                    AnchorPane.setTopAnchor(win.getNode(), 300.0);\r\n                                    AnchorPane.setLeftAnchor(win.getNode(), 350.0);\r\n                                    win.play();\r\n                                    win.setOnFinished(finish->{\r\n                                        pane.getChildren().remove(win.getNode());\r\n                                        System.out.println(\"YES\");\r\n                                    });\r\n                                }\r\n\r\n                            } catch (Exception e) {\r\n                                //throw new RuntimeException(e);\r\n                                System.out.println(e);\r\n                                for (int i = 0; i < 5; i++) {\r\n                                    testword.RemoveLetter();\r\n                                }\r\n                            }\r\n                        } else {\r\n                            System.out.println(\"not enough letter!\");\r\n                        }\r\n                    }\r\n                }\r\n            } catch (Exception e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 进入AIShow模式的方法\r\n     *\r\n     * @throws Exception 异常\r\n     */\r\n    public static void startAIShowMode() throws Exception {\r\n        gameIsOver = false;\r\n        index = 0;\r\n        line = 0;\r\n        System.out.println(\"start aishow mode\");\r\n        AnchorPane pane = new AnchorPane();\r\n\r\n        FXMLLoader loader = new FXMLLoader(Main.class.getResource(\"resources/aiShowScene.fxml\"));\r\n        Parent mainScene = loader.load();\r\n        pane.getChildren().add(mainScene);\r\n\r\n        Scene scene = new Scene(pane, 1280, 800);\r\n\r\n        MenuScene Controller = loader.getController();\r\n\r\n        mainWindow.setScene(scene);\r\n        mainWindow.setTitle(\"WORDLE-EX\");\r\n        mainWindow.show();\r\n\r\n\r\n        WordList.AnswerWord = WordList.ReadWord(\"src/Data/possible_words.txt\");\r\n        WordList.PossibleWord = WordList.ReadWord(\"src/Data/allowed_words.txt\");\r\n        WordList.LegalWord = WordList.ReadWord(\"src/Data/allowed_words.txt\");\r\n        WordList.WordPrior = WordList.ReadPrior(\"src/Data/freq_map.json\");\r\n        ArrayList<String> list = new ArrayList<>(WordList.AnswerWord);\r\n        int ansIdx = new Random().nextInt(list.size());\r\n        String ans = list.get(ansIdx);\r\n\r\n        GuessAlgorithm.eNow = GuessAlgorithm.calENow(WordList.PossibleWord);\r\n        GuessAlgorithm.possibilities = WordList.PossibleWord.size();\r\n        GuessAlgorithm.getShowList(WordList.PossibleWord);\r\n\r\n        GuessAlgorithm.getWordScore(WordList.LegalWord, WordList.PossibleWord);\r\n        System.out.println(GuessAlgorithm.wsList.get(0).word);\r\n        Word testword = new Word(GuessAlgorithm.wsList.get(0).word);\r\n        System.out.println(\"Guess Word:\" + testword.WordContent);\r\n\r\n\r\n        AniString hint = new AniString(\"TOP Picks    E[Info]    p(word)\", Color.WHITE);\r\n        pane.getChildren().add(hint.ft.getNode());\r\n        AnchorPane.setLeftAnchor(hint.ft.getNode(), 900.0);\r\n        AnchorPane.setTopAnchor(hint.ft.getNode(), 120.0);\r\n        hint.ft.play();\r\n\r\n        AniString[] recommend = new AniString[5];\r\n        AniString[] recommendInfo = new AniString[5];\r\n        AniString[] recommendPossibility = new AniString[5];\r\n\r\n        DecimalFormat df2 = new DecimalFormat(\"#.##\");\r\n        DecimalFormat df6 = new DecimalFormat(\"#.#####\");\r\n\r\n        for (int i = 0; i < 5 && i < GuessAlgorithm.wsList.size(); i++) {\r\n            recommend[i] = new AniString(GuessAlgorithm.wsList.get(i).word, Color.WHITE);\r\n            pane.getChildren().add(recommend[i].ft.getNode());\r\n            AnchorPane.setLeftAnchor(recommend[i].ft.getNode(), 900.0);\r\n            AnchorPane.setTopAnchor(recommend[i].ft.getNode(), 180.0 + i * 60.0);\r\n            recommend[i].ft.play();\r\n            recommendInfo[i] = new AniString(df2.format(GuessAlgorithm.wsList.get(i).entropy), Color.WHITE);\r\n            pane.getChildren().add(recommendInfo[i].ft.getNode());\r\n            AnchorPane.setLeftAnchor(recommendInfo[i].ft.getNode(), 900.0 + 150.0);\r\n            AnchorPane.setTopAnchor(recommendInfo[i].ft.getNode(), 180.0 + i * 60.0);\r\n            recommendInfo[i].ft.play();\r\n            recommendPossibility[i] = new AniString(df6.format(GuessAlgorithm.wsList.get(i).possible), Color.WHITE);\r\n            pane.getChildren().add(recommendPossibility[i].ft.getNode());\r\n            AnchorPane.setLeftAnchor(recommendPossibility[i].ft.getNode(), 900.0 + 240.0);\r\n            AnchorPane.setTopAnchor(recommendPossibility[i].ft.getNode(), 180.0 + i * 60.0);\r\n            recommendPossibility[i].ft.play();\r\n        }\r\n\r\n        AniLetter[] aniLetters = new AniLetter[5];\r\n        ArrayList<AniString> aniStrings = new ArrayList<>();\r\n\r\n        AniString tipString = new AniString(\"The Answer:\", Color.WHITE);\r\n        pane.getChildren().add(tipString.ft.getNode());\r\n        AnchorPane.setLeftAnchor(tipString.ft.getNode(), 50.0);\r\n        AnchorPane.setTopAnchor(tipString.ft.getNode(), 600.0);\r\n        tipString.ft.play();\r\n\r\n        AniString ansString = new AniString(ans, Color.GREEN);\r\n        pane.getChildren().add(ansString.ft.getNode());\r\n        AnchorPane.setLeftAnchor(ansString.ft.getNode(), 50.0);\r\n        AnchorPane.setTopAnchor(ansString.ft.getNode(), 650.0);\r\n        ansString.ft.play();\r\n\r\n        AniString tipString2 = new AniString(\"Press Enter To Show Next Step\", Color.GREY);\r\n        pane.getChildren().add(tipString2.ft.getNode());\r\n        AnchorPane.setLeftAnchor(tipString2.ft.getNode(), 50.0);\r\n        AnchorPane.setTopAnchor(tipString2.ft.getNode(), 700.0);\r\n        tipString2.ft.play();\r\n\r\n        aniStrings.add(new AniString(\"Possibilities:\", Color.WHITE));\r\n        pane.getChildren().add(aniStrings.get(0).ft.getNode());\r\n        AnchorPane.setLeftAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 150.0);\r\n        AnchorPane.setTopAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 125.0);\r\n        aniStrings.get(aniStrings.size() - 1).ft.play();\r\n\r\n        aniStrings.add(new AniString(\"\" + GuessAlgorithm.possibilities, Color.WHITE));\r\n        pane.getChildren().add(aniStrings.get(aniStrings.size() - 1).ft.getNode());\r\n        AnchorPane.setLeftAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 150.0 + aniStrings.size() * 75.0);\r\n        AnchorPane.setTopAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 125.0);\r\n        aniStrings.get(aniStrings.size() - 1).ft.play();\r\n\r\n        aniStrings.add(new AniString(\"/ E:\", Color.SKYBLUE));\r\n        pane.getChildren().add(aniStrings.get(aniStrings.size() - 1).ft.getNode());\r\n        AnchorPane.setLeftAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 150.0 + aniStrings.size() * 75.0);\r\n        AnchorPane.setTopAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 125.0);\r\n        aniStrings.get(aniStrings.size() - 1).ft.play();\r\n\r\n        // 保留小数点后两位\r\n\r\n        aniStrings.add(new AniString(\"\" + df2.format(GuessAlgorithm.eNow), Color.SKYBLUE));\r\n        pane.getChildren().add(aniStrings.get(aniStrings.size() - 1).ft.getNode());\r\n        AnchorPane.setLeftAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 120 + aniStrings.size() * 75.0);\r\n        AnchorPane.setTopAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 125.0);\r\n        aniStrings.get(aniStrings.size() - 1).ft.play();\r\n\r\n        aniStrings.clear();\r\n\r\n        ArrayList<AniString> infoWord = new ArrayList<>();\r\n        for (int i = 0; i < 5; i++) {\r\n            infoWord.add(new AniString(GuessAlgorithm.PossibleWordChance.get(i).word, Color.WHITE));\r\n        }\r\n        for (int i = 0; i < 5; i++) {\r\n            infoWord.add(new AniString(GuessAlgorithm.PossibleWordChance.get(GuessAlgorithm.PossibleWordChance.size() - 6 + i).word, Color.WHITE));\r\n        }\r\n        for (int i = 0; i < infoWord.size(); i++) {\r\n            pane.getChildren().add(infoWord.get(i).ft.getNode());\r\n            AnchorPane.setLeftAnchor(infoWord.get(i).ft.getNode(), 450.0 + (i / 5) * 400.0);\r\n            AnchorPane.setTopAnchor(infoWord.get(i).ft.getNode(), 500 + (i % 5) * 60.0);\r\n            infoWord.get(i).ft.play();\r\n        }\r\n        ArrayList<AniRectangular> infoChance = new ArrayList<>();\r\n        for (int i = 0; i < 5; i++) {\r\n            infoChance.add(new AniRectangular(300 * GuessAlgorithm.PossibleWordChance.get(i).fill, 30.0));\r\n            //  System.out.println(GuessAlgorithm.PossibleWordChance.get(i).fill);\r\n        }\r\n        for (int i = 0; i < 5; i++) {\r\n            infoChance.add(new AniRectangular(300 * GuessAlgorithm.PossibleWordChance.get(GuessAlgorithm.PossibleWordChance.size() - 6 + i).fill, 30.0));\r\n            // System.out.println(GuessAlgorithm.PossibleWordChance.get(GuessAlgorithm.PossibleWordChance.size()-6+i).fill);\r\n        }\r\n        for (int i = 0; i < infoChance.size(); i++) {\r\n            pane.getChildren().add(infoChance.get(i).ft.getNode());\r\n            AnchorPane.setLeftAnchor(infoChance.get(i).ft.getNode(), 450 + 75.0 + (i / 5) * 400.0);\r\n            AnchorPane.setTopAnchor(infoChance.get(i).ft.getNode(), 500 + (i % 5) * 60.0);\r\n            infoChance.get(i).ft.play();\r\n        }\r\n\r\n        index = 0;\r\n        line = 0;\r\n        leftLine = 0;\r\n\r\n\r\n        pane.addEventFilter(KeyEvent.KEY_PRESSED, (KeyEvent keyEvent) -> {\r\n\r\n\r\n            KeyCode kCode = keyEvent.getCode();\r\n            System.out.println(kCode.getName());\r\n            try {\r\n                if (!gameIsOver) {\r\n                    if (kCode == KeyCode.ENTER) {\r\n                        if (testword.letters.size() == 5 && line < 6) {\r\n                            try {\r\n                                int status;\r\n                                for (index = 0; index < 5; index++) {\r\n                                    aniLetters[index] = new AniLetter((char) (testword.letters.get(index).letterContent - 32) + \"\");\r\n                                    pane.getChildren().add(aniLetters[index].ft.getNode());\r\n                                    AnchorPane.setLeftAnchor(aniLetters[index].ft.getNode(), 500.0 + index * 60.0);\r\n                                    AnchorPane.setTopAnchor(aniLetters[index].ft.getNode(), 120.0 + line * 60.0);\r\n                                    aniLetters[index].ft.play();\r\n                                }\r\n                                if (Word.CheckInList(testword.WordContent.toString())) {\r\n                                    index = 0;\r\n                                    line++;\r\n                                    testword.CheckAns(ans);\r\n                                    //   System.out.println(testword.ShowColor());\r\n                                    for (int i = 0; i < 5; i++) {\r\n                                        if (testword.letters.get(i).letterColor == LetterColor.Green) {\r\n                                            aniLetters[i].text.setFill(Color.GREEN);\r\n                                        }\r\n                                        if (testword.letters.get(i).letterColor == LetterColor.Yellow) {\r\n                                            aniLetters[i].text.setFill(Color.YELLOW);\r\n                                        }\r\n                                        if (testword.letters.get(i).letterColor == LetterColor.Grey) {\r\n                                            aniLetters[i].text.setFill(Color.BLACK);\r\n                                        }\r\n                                    }\r\n                                    status = testword.getState();\r\n\r\n                                    WordList.PossibleWord = GuessAlgorithm.updatePossibleWord(WordList.PossibleWord, testword.getState(), testword.WordContent.toString());\r\n                                    GuessAlgorithm.possibilities = WordList.PossibleWord.size();\r\n                                    double newE = GuessAlgorithm.calENow(WordList.PossibleWord);\r\n                                    double info = GuessAlgorithm.eNow - newE;\r\n\r\n                                    AniString infoString = new AniString(df2.format(info) + \"bits\", Color.WHITE);\r\n                                    pane.getChildren().add(infoString.ft.getNode());\r\n                                    AnchorPane.setLeftAnchor(infoString.ft.getNode(), 800.0);\r\n                                    AnchorPane.setTopAnchor(infoString.ft.getNode(), 125.0 + leftLine * 60.0);\r\n                                    infoString.ft.play();\r\n\r\n                                    GuessAlgorithm.eNow = newE;\r\n                                    leftLine++;\r\n                                    aniStrings.add(new AniString(\"Possibilities:\", Color.WHITE));\r\n                                    pane.getChildren().add(aniStrings.get(aniStrings.size() - 1).ft.getNode());\r\n                                    AnchorPane.setLeftAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 150.0);\r\n                                    AnchorPane.setTopAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 125.0 + leftLine * 60.0);\r\n                                    aniStrings.get(aniStrings.size() - 1).ft.play();\r\n\r\n                                    aniStrings.add(new AniString(\"\" + GuessAlgorithm.possibilities, Color.WHITE));\r\n                                    pane.getChildren().add(aniStrings.get(aniStrings.size() - 1).ft.getNode());\r\n                                    AnchorPane.setLeftAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 150.0 + aniStrings.size() * 75.0);\r\n                                    AnchorPane.setTopAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 125.0 + leftLine * 60.0);\r\n                                    aniStrings.get(aniStrings.size() - 1).ft.play();\r\n\r\n                                    aniStrings.add(new AniString(\"/ E:\", Color.SKYBLUE));\r\n                                    pane.getChildren().add(aniStrings.get(aniStrings.size() - 1).ft.getNode());\r\n                                    AnchorPane.setLeftAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 150.0 + aniStrings.size() * 75.0);\r\n                                    AnchorPane.setTopAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 125.0 + leftLine * 60.0);\r\n                                    aniStrings.get(aniStrings.size() - 1).ft.play();\r\n\r\n                                    // 保留小数点后两位\r\n                                    DecimalFormat df = new DecimalFormat(\"#.00\");\r\n                                    aniStrings.add(new AniString(\"\" + df.format(GuessAlgorithm.eNow), Color.SKYBLUE));\r\n                                    pane.getChildren().add(aniStrings.get(aniStrings.size() - 1).ft.getNode());\r\n                                    AnchorPane.setLeftAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 120 + aniStrings.size() * 75.0);\r\n                                    AnchorPane.setTopAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 125.0 + leftLine * 60.0);\r\n                                    aniStrings.get(aniStrings.size() - 1).ft.play();\r\n\r\n                                    aniStrings.clear();\r\n\r\n                                    GuessAlgorithm.getWordScore(WordList.LegalWord, WordList.PossibleWord);\r\n\r\n                                    for (int i = 0; i < 5; i++) {\r\n                                        testword.RemoveLetter();\r\n                                        pane.getChildren().remove(recommend[i].ft.getNode());\r\n                                        pane.getChildren().remove(recommendInfo[i].ft.getNode());\r\n                                        pane.getChildren().remove(recommendPossibility[i].ft.getNode());\r\n                                        AniString fadeRecommend = new AniString(recommend[i].string.getText(), Color.WHITE);\r\n                                        pane.getChildren().add(fadeRecommend.ft2.getNode());\r\n                                        AnchorPane.setLeftAnchor(fadeRecommend.ft2.getNode(), 900.0);\r\n                                        AnchorPane.setTopAnchor(fadeRecommend.ft2.getNode(), 180 + i * 60.0);\r\n                                        fadeRecommend.ft2.play();\r\n                                        AniString fadeRecommendInfo = new AniString(recommendInfo[i].string.getText(), Color.WHITE);\r\n                                        pane.getChildren().add(fadeRecommendInfo.ft2.getNode());\r\n                                        AnchorPane.setLeftAnchor(fadeRecommendInfo.ft2.getNode(), 900.0 + 150);\r\n                                        AnchorPane.setTopAnchor(fadeRecommendInfo.ft2.getNode(), 180 + i * 60.0);\r\n                                        fadeRecommendInfo.ft2.play();\r\n                                        AniString fadeRecommendPossibility = new AniString(recommendPossibility[i].string.getText(), Color.WHITE);\r\n                                        pane.getChildren().add(fadeRecommendPossibility.ft2.getNode());\r\n                                        AnchorPane.setLeftAnchor(fadeRecommendPossibility.ft2.getNode(), 900.0 + 240);\r\n                                        AnchorPane.setTopAnchor(fadeRecommendPossibility.ft2.getNode(), 180 + i * 60.0);\r\n                                        fadeRecommendPossibility.ft2.play();\r\n                                    }\r\n                                    for (int i = 0; i < 5; i++) {\r\n                                        testword.AddLetter(GuessAlgorithm.wsList.get(0).word.charAt(i));\r\n                                        // System.out.println(\"wtf:\"+testword.WordContent);\r\n                                    }\r\n                                    for (int i = 0; i < 5 && i < GuessAlgorithm.wsList.size(); i++) {\r\n                                        recommend[i] = new AniString(GuessAlgorithm.wsList.get(i).word, Color.WHITE);\r\n                                        pane.getChildren().add(recommend[i].ft.getNode());\r\n                                        AnchorPane.setLeftAnchor(recommend[i].ft.getNode(), 900.0);\r\n                                        AnchorPane.setTopAnchor(recommend[i].ft.getNode(), 180.0 + i * 60.0);\r\n                                        recommend[i].ft.play();\r\n                                        recommendInfo[i] = new AniString(df2.format(GuessAlgorithm.wsList.get(i).entropy), Color.WHITE);\r\n                                        pane.getChildren().add(recommendInfo[i].ft.getNode());\r\n                                        AnchorPane.setLeftAnchor(recommendInfo[i].ft.getNode(), 900.0 + 150.0);\r\n                                        AnchorPane.setTopAnchor(recommendInfo[i].ft.getNode(), 180.0 + i * 60.0);\r\n                                        recommendInfo[i].ft.play();\r\n                                        recommendPossibility[i] = new AniString(df6.format(GuessAlgorithm.wsList.get(i).possible), Color.WHITE);\r\n                                        pane.getChildren().add(recommendPossibility[i].ft.getNode());\r\n                                        AnchorPane.setLeftAnchor(recommendPossibility[i].ft.getNode(), 900.0 + 240.0);\r\n                                        AnchorPane.setTopAnchor(recommendPossibility[i].ft.getNode(), 180.0 + i * 60.0);\r\n                                        recommendPossibility[i].ft.play();\r\n                                    }\r\n\r\n                                    System.out.println(\"chancesize\" + infoChance.size());\r\n\r\n                                    for (AniRectangular aniRectangular : infoChance) {\r\n                                        pane.getChildren().remove(aniRectangular.ft.getNode());\r\n                                    }\r\n\r\n                                    System.out.println(\"wordsize\" + infoWord.size());\r\n                                    for (AniString aniString : infoWord) {\r\n                                        pane.getChildren().remove(aniString.ft.getNode());\r\n                                    }\r\n\r\n                                    System.out.println(\"clear\");\r\n\r\n                                    GuessAlgorithm.getShowList(WordList.PossibleWord);\r\n\r\n                                    infoWord.clear();\r\n\r\n                                    for (int i = 0; i < 5 && i < GuessAlgorithm.PossibleWordChance.size(); i++) {\r\n                                        infoWord.add(new AniString(GuessAlgorithm.PossibleWordChance.get(i).word, Color.WHITE));\r\n                                    }\r\n                                    if (GuessAlgorithm.PossibleWordChance.size() > 5)\r\n                                        for (int i = 0; i < 5; i++) {\r\n                                            infoWord.add(new AniString(GuessAlgorithm.PossibleWordChance.get(GuessAlgorithm.PossibleWordChance.size() - 6 + i).word, Color.WHITE));\r\n                                        }\r\n\r\n                                    for (int i = 0; i < infoWord.size(); i++) {\r\n                                        pane.getChildren().add(infoWord.get(i).ft.getNode());\r\n                                        AnchorPane.setLeftAnchor(infoWord.get(i).ft.getNode(), 450.0 + (i / 5) * 400.0);\r\n                                        AnchorPane.setTopAnchor(infoWord.get(i).ft.getNode(), 500 + (i % 5) * 60.0);\r\n                                        infoWord.get(i).ft.play();\r\n                                    }\r\n\r\n                                    infoChance.clear();\r\n\r\n                                    for (int i = 0; i < 5 && i < GuessAlgorithm.PossibleWordChance.size(); i++) {\r\n                                        infoChance.add(new AniRectangular(300 * GuessAlgorithm.PossibleWordChance.get(i).fill, 30.0));\r\n                                        //        System.out.println(GuessAlgorithm.PossibleWordChance.get(i).fill);\r\n                                    }\r\n                                    if (GuessAlgorithm.PossibleWordChance.size() > 5)\r\n                                        for (int i = 0; i < 5; i++) {\r\n                                            infoChance.add(new AniRectangular(300 * GuessAlgorithm.PossibleWordChance.get(GuessAlgorithm.PossibleWordChance.size() - 6 + i).fill, 30.0));\r\n                                            //       System.out.println(GuessAlgorithm.PossibleWordChance.get(GuessAlgorithm.PossibleWordChance.size()-6+i).fill);\r\n                                        }\r\n                                    for (int i = 0; i < infoChance.size(); i++) {\r\n                                        pane.getChildren().add(infoChance.get(i).ft.getNode());\r\n                                        AnchorPane.setLeftAnchor(infoChance.get(i).ft.getNode(), 450 + 75.0 + (i / 5) * 400.0);\r\n                                        AnchorPane.setTopAnchor(infoChance.get(i).ft.getNode(), 500 + (i % 5) * 60.0);\r\n                                        infoChance.get(i).ft.play();\r\n                                    }\r\n                                    if (status == 0) {\r\n                                        System.out.println(\"you win\");\r\n\r\n                                        Rectangle recB = new Rectangle();\r\n                                        recB.setFill(Color.BLACK);\r\n                                        recB.setWidth(1280);\r\n                                        recB.setHeight(800);\r\n//                                        pane.getChildren().add(recB);\r\n                                        FadeTransition black = new FadeTransition();\r\n                                        black.setNode(recB);\r\n                                        black.setFromValue(0);\r\n                                        black.setToValue(0.5);\r\n                                        black.setDuration(Duration.seconds(1));\r\n                                        pane.getChildren().add(black.getNode());\r\n                                        AnchorPane.setTopAnchor(black.getNode(), 0.);\r\n                                        AnchorPane.setLeftAnchor(black.getNode(), 0.);\r\n                                        black.play();\r\n\r\n                                        FadeTransition win = new FadeTransition();\r\n                                        Text text = new Text(\"WIN!!\");\r\n                                        gameIsOver = true;\r\n                                        text.setFont(Font.font(\"times new roman\", FontWeight.MEDIUM, FontPosture.REGULAR, 100));\r\n                                        text.setTextAlignment(TextAlignment.JUSTIFY);\r\n                                        text.setFill(Color.GREEN);\r\n                                        win.setNode(text);\r\n                                        win.setFromValue(0);\r\n                                        win.setToValue(1);\r\n                                        win.setDuration(Duration.seconds(1));\r\n                                        pane.getChildren().add(win.getNode());\r\n                                        AnchorPane.setTopAnchor(win.getNode(), 280.0);\r\n                                        AnchorPane.setLeftAnchor(win.getNode(), 500.0);\r\n                                        win.play();\r\n\r\n                                        Button b = new Button();\r\n                                        b.setText(\"Back to Menu\");\r\n                                        b.setLayoutX(200);\r\n                                        b.setLayoutY(50);\r\n                                        b.setPrefWidth(200);\r\n                                        b.setPrefHeight(50);\r\n                                        b.addEventHandler(MouseEvent.MOUSE_ENTERED, (MouseEvent e) -> b.setStyle(\r\n                                                \"-fx-background-color:#a8a8a8;\" +         //设置背景颜色\r\n                                                        \"-fx-background-radius:5;\" +     //设置背景圆角\r\n                                                        \"-fx-text-fill:#ffffff;\" +        //设置字体颜色\r\n                                                        \"-fx-border-radius:5;\" +         //设置边框圆角\r\n                                                        \"-fx-border-color:#838383;\"     //设置边框颜色\r\n                                                        + \"-fx-font-size: 20\"\r\n                                        ));\r\n                                        //当鼠标离开按钮时移除阴影效果\r\n                                        b.addEventHandler(MouseEvent.MOUSE_EXITED, (MouseEvent e) -> b.setStyle(\r\n                                                \"-fx-background-color:#7a7a7a;\" +         //设置背景颜色\r\n                                                        \"-fx-background-radius:5;\" +     //设置背景圆角\r\n                                                        \"-fx-text-fill:#ffffff;\" +        //设置字体颜色\r\n                                                        \"-fx-border-radius:5;\" +         //设置边框圆角\r\n                                                        \"-fx-border-color:#838383;\"     //设置边框颜色\r\n                                                        + \"-fx-font-size: 20\"\r\n                                        ));\r\n                                        b.setStyle(\r\n                                                \"-fx-background-color:#7a7a7a;\" +         //设置背景颜色\r\n                                                        \"-fx-background-radius:5;\" +     //设置背景圆角\r\n                                                        \"-fx-text-fill:#ffffff;\" +        //设置字体颜色\r\n                                                        \"-fx-border-radius:5;\" +         //设置边框圆角\r\n                                                        \"-fx-border-color:#838383;\"     //设置边框颜色\r\n//                                                        \"-fx-border-style:dashed;\"+      //设置边框样式\r\n//                                                        \"-fx-border-width:5;\"+           //设置边框宽度\r\n//                                                        \"-fx-border-insets:-5\"           //设置边框插入值\r\n                                                        + \"-fx-font-size: 20\"\r\n                                        );\r\n                                        AnchorPane.setTopAnchor(b, 400.);\r\n                                        AnchorPane.setLeftAnchor(b, 530.);\r\n                                        pane.getChildren().add(b);\r\n                                        b.setOnMouseClicked(finish -> {\r\n                                            try {\r\n                                                Controller.backToMenu();\r\n                                            } catch (Exception e) {\r\n                                                throw new RuntimeException(e);\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                    if (line == 6 && !gameIsOver) {\r\n                                        System.out.println(\"you lose\");\r\n                                        Rectangle recB = new Rectangle();\r\n                                        recB.setFill(Color.BLACK);\r\n                                        recB.setWidth(1280);\r\n                                        recB.setHeight(800);\r\n//                                        pane.getChildren().add(recB);\r\n                                        FadeTransition black = new FadeTransition();\r\n                                        black.setNode(recB);\r\n                                        black.setFromValue(0);\r\n                                        black.setToValue(0.8);\r\n                                        black.setDuration(Duration.seconds(1));\r\n                                        pane.getChildren().add(black.getNode());\r\n                                        AnchorPane.setTopAnchor(black.getNode(), 0.);\r\n                                        AnchorPane.setLeftAnchor(black.getNode(), 0.);\r\n                                        black.play();\r\n\r\n                                        FadeTransition win = new FadeTransition();\r\n                                        Text text = new Text(\"LOSE!!\");\r\n                                        gameIsOver = true;\r\n                                        text.setFont(Font.font(\"times new roman\", FontWeight.MEDIUM, FontPosture.REGULAR, 100));\r\n                                        text.setTextAlignment(TextAlignment.JUSTIFY);\r\n                                        text.setFill(Color.RED);\r\n                                        win.setNode(text);\r\n                                        win.setFromValue(0);\r\n                                        win.setToValue(1);\r\n                                        win.setDuration(Duration.seconds(1));\r\n                                        pane.getChildren().add(win.getNode());\r\n                                        AnchorPane.setTopAnchor(win.getNode(), 280.0);\r\n                                        AnchorPane.setLeftAnchor(win.getNode(), 500.0);\r\n                                        win.play();\r\n\r\n                                        Button b = new Button();\r\n                                        b.setText(\"Back to Menu\");\r\n                                        b.setLayoutX(200);\r\n                                        b.setLayoutY(50);\r\n                                        b.setPrefWidth(200);\r\n                                        b.setPrefHeight(50);\r\n                                        b.addEventHandler(MouseEvent.MOUSE_ENTERED, (MouseEvent e) -> b.setStyle(\r\n                                                \"-fx-background-color:#a8a8a8;\" +         //设置背景颜色\r\n                                                        \"-fx-background-radius:5;\" +     //设置背景圆角\r\n                                                        \"-fx-text-fill:#ffffff;\" +        //设置字体颜色\r\n                                                        \"-fx-border-radius:5;\" +         //设置边框圆角\r\n                                                        \"-fx-border-color:#838383;\"     //设置边框颜色\r\n                                                        + \"-fx-font-size: 20\"\r\n                                        ));\r\n                                        //当鼠标离开按钮时移除阴影效果\r\n                                        b.addEventHandler(MouseEvent.MOUSE_EXITED, (MouseEvent e) -> b.setStyle(\r\n                                                \"-fx-background-color:#7a7a7a;\" +         //设置背景颜色\r\n                                                        \"-fx-background-radius:5;\" +     //设置背景圆角\r\n                                                        \"-fx-text-fill:#ffffff;\" +        //设置字体颜色\r\n                                                        \"-fx-border-radius:5;\" +         //设置边框圆角\r\n                                                        \"-fx-border-color:#838383;\"     //设置边框颜色\r\n                                                        + \"-fx-font-size: 20\"\r\n                                        ));\r\n                                        b.setStyle(\r\n                                                \"-fx-background-color:#7a7a7a;\" +         //设置背景颜色\r\n                                                        \"-fx-background-radius:5;\" +     //设置背景圆角\r\n                                                        \"-fx-text-fill:#ffffff;\" +        //设置字体颜色\r\n                                                        \"-fx-border-radius:5;\" +         //设置边框圆角\r\n                                                        \"-fx-border-color:#838383;\"     //设置边框颜色\r\n//                                                        \"-fx-border-style:dashed;\"+      //设置边框样式\r\n//                                                        \"-fx-border-width:5;\"+           //设置边框宽度\r\n//                                                        \"-fx-border-insets:-5\"           //设置边框插入值\r\n                                                        + \"-fx-font-size: 20\"\r\n                                        );\r\n                                        AnchorPane.setTopAnchor(b, 400.);\r\n                                        AnchorPane.setLeftAnchor(b, 530.);\r\n                                        pane.getChildren().add(b);\r\n                                        b.setOnMouseClicked(finish -> {\r\n                                            try {\r\n                                                Controller.backToMenu();\r\n                                            } catch (Exception e) {\r\n                                                throw new RuntimeException(e);\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                } else {\r\n                                    System.out.println(\"Not in the list\");\r\n\r\n                                    Rectangle recB = new Rectangle();\r\n                                    recB.setFill(Color.BLACK);\r\n                                    recB.setWidth(1280);\r\n                                    recB.setHeight(800);\r\n//                                        pane.getChildren().add(recB);\r\n                                    FadeTransition black = new FadeTransition();\r\n                                    black.setNode(recB);\r\n                                    black.setFromValue(0);\r\n                                    black.setToValue(0.2);\r\n                                    black.setCycleCount(2);\r\n                                    black.setAutoReverse(true);\r\n                                    black.setDuration(Duration.seconds(1));\r\n\r\n\r\n                                    pane.getChildren().add(black.getNode());\r\n                                    AnchorPane.setTopAnchor(black.getNode(), 0.);\r\n                                    AnchorPane.setLeftAnchor(black.getNode(), 0.);\r\n                                    black.play();\r\n                                    black.setOnFinished(finish-> pane.getChildren().remove(black.getNode()));\r\n\r\n                                    FadeTransition win = new FadeTransition();\r\n                                    Text text = new Text(\"Not in Word List!!\");\r\n                                    text.setFont(Font.font(\"times new roman\", FontWeight.MEDIUM, FontPosture.REGULAR, 80));\r\n                                    text.setTextAlignment(TextAlignment.JUSTIFY);\r\n                                    text.setFill(Color.YELLOW);\r\n                                    win.setNode(text);\r\n                                    win.setFromValue(0);\r\n                                    win.setToValue(1);\r\n                                    win.setDuration(Duration.seconds(1));\r\n                                    win.setAutoReverse(true);\r\n                                    win.setCycleCount(2);\r\n                                    pane.getChildren().add(win.getNode());\r\n                                    AnchorPane.setTopAnchor(win.getNode(), 300.0);\r\n                                    AnchorPane.setLeftAnchor(win.getNode(), 350.0);\r\n                                    win.play();\r\n                                    win.setOnFinished(finish->{\r\n                                        pane.getChildren().remove(win.getNode());\r\n                                        System.out.println(\"YES\");\r\n                                    });\r\n                                }\r\n\r\n                            } catch (Exception e) {\r\n                                //throw new RuntimeException(e);\r\n                                System.out.println(\"Not in the list\");\r\n                                for (int i = 0; i < 5; i++) {\r\n                                    testword.RemoveLetter();\r\n                                }\r\n                            }\r\n                        } else {\r\n                            System.out.println(\"not enough letter!\");\r\n                        }\r\n                    }\r\n                }\r\n            } catch (Exception e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n\r\n\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 返回主菜单\r\n     */\r\n    public static void backMainMenu() {\r\n        mainWindow.setScene(mainMenuScene);\r\n        mainWindow.setTitle(\"WORDLE-EX\");\r\n        mainWindow.show();\r\n    }\r\n\r\n    public static void inputQ() throws Exception {\r\n        if (index < 5) {\r\n            char toAddLetter;\r\n            toAddLetter = 'q';\r\n            testword.AddLetter(toAddLetter);\r\n            aniLetters[index] = new AniLetter(\"Q\");\r\n            pane.getChildren().add(aniLetters[index].ft.getNode());\r\n            AnchorPane.setLeftAnchor(aniLetters[index].ft.getNode(), 500.0 + index * 60.0);\r\n            AnchorPane.setTopAnchor(aniLetters[index].ft.getNode(), 120.0 + line * 60.);\r\n            aniLetters[index].ft.play();\r\n            index += 1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 输入W\r\n     *\r\n     * @throws Exception 异常\r\n     */\r\n    public static void inputW() throws Exception {\r\n        if (index < 5) {\r\n            char toAddLetter;\r\n            toAddLetter = 'w';\r\n            testword.AddLetter(toAddLetter);\r\n            aniLetters[index] = new AniLetter(\"W\");\r\n            pane.getChildren().add(aniLetters[index].ft.getNode());\r\n            AnchorPane.setLeftAnchor(aniLetters[index].ft.getNode(), 500.0 + index * 60.0);\r\n            AnchorPane.setTopAnchor(aniLetters[index].ft.getNode(), 120.0 + line * 60.);\r\n            aniLetters[index].ft.play();\r\n            index += 1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 输入E\r\n     *\r\n     * @throws Exception 异常\r\n     */\r\n    public static void inputE() throws Exception {\r\n        if (index < 5) {\r\n            char toAddLetter;\r\n            toAddLetter = 'e';\r\n            testword.AddLetter(toAddLetter);\r\n            aniLetters[index] = new AniLetter(\"E\");\r\n            pane.getChildren().add(aniLetters[index].ft.getNode());\r\n            AnchorPane.setLeftAnchor(aniLetters[index].ft.getNode(), 500.0 + index * 60.0);\r\n            AnchorPane.setTopAnchor(aniLetters[index].ft.getNode(), 120.0 + line * 60.);\r\n            aniLetters[index].ft.play();\r\n            index += 1;\r\n        }\r\n    }\r\n    /**\r\n     * 输入R\r\n     *\r\n     * @throws Exception 异常\r\n     */\r\n    public static void inputR() throws Exception {\r\n        if (index < 5) {\r\n            char toAddLetter;\r\n            toAddLetter = 'r';\r\n            testword.AddLetter(toAddLetter);\r\n            aniLetters[index] = new AniLetter(\"R\");\r\n            pane.getChildren().add(aniLetters[index].ft.getNode());\r\n            AnchorPane.setLeftAnchor(aniLetters[index].ft.getNode(), 500.0 + index * 60.0);\r\n            AnchorPane.setTopAnchor(aniLetters[index].ft.getNode(), 120.0 + line * 60.);\r\n            aniLetters[index].ft.play();\r\n            index += 1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 输入T\r\n     *\r\n     * @throws Exception 异常\r\n     */\r\n    public static void inputT() throws Exception {\r\n        if (index < 5) {\r\n            char toAddLetter;\r\n            toAddLetter = 't';\r\n            testword.AddLetter(toAddLetter);\r\n            aniLetters[index] = new AniLetter(\"T\");\r\n            pane.getChildren().add(aniLetters[index].ft.getNode());\r\n            AnchorPane.setLeftAnchor(aniLetters[index].ft.getNode(), 500.0 + index * 60.0);\r\n            AnchorPane.setTopAnchor(aniLetters[index].ft.getNode(), 120.0 + line * 60.);\r\n            aniLetters[index].ft.play();\r\n            index += 1;\r\n            System.out.println(index);\r\n            System.out.println(testword.letters.size());\r\n            System.out.println(testword.WordContent);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 输入Y\r\n     *\r\n     * @throws Exception 异常\r\n     */\r\n    public static void inputY() throws Exception {\r\n        if (index < 5) {\r\n            char toAddLetter;\r\n            toAddLetter = 'y';\r\n            testword.AddLetter(toAddLetter);\r\n            aniLetters[index] = new AniLetter(\"Y\");\r\n            pane.getChildren().add(aniLetters[index].ft.getNode());\r\n            AnchorPane.setLeftAnchor(aniLetters[index].ft.getNode(), 500.0 + index * 60.0);\r\n            AnchorPane.setTopAnchor(aniLetters[index].ft.getNode(), 120.0 + line * 60.);\r\n            aniLetters[index].ft.play();\r\n            index += 1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 输入U\r\n     *\r\n     * @throws Exception 异常\r\n     */\r\n    public static void inputU() throws Exception {\r\n        if (index < 5) {\r\n            char toAddLetter;\r\n            toAddLetter = 'u';\r\n            testword.AddLetter(toAddLetter);\r\n            aniLetters[index] = new AniLetter(\"U\");\r\n            pane.getChildren().add(aniLetters[index].ft.getNode());\r\n            AnchorPane.setLeftAnchor(aniLetters[index].ft.getNode(), 500.0 + index * 60.0);\r\n            AnchorPane.setTopAnchor(aniLetters[index].ft.getNode(), 120.0 + line * 60.);\r\n            aniLetters[index].ft.play();\r\n            index += 1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 输入I\r\n     *\r\n     * @throws Exception 异常\r\n     */\r\n    public static void inputI() throws Exception {\r\n        if (index < 5) {\r\n            char toAddLetter;\r\n            toAddLetter = 'i';\r\n            testword.AddLetter(toAddLetter);\r\n            aniLetters[index] = new AniLetter(\"I\");\r\n            pane.getChildren().add(aniLetters[index].ft.getNode());\r\n            AnchorPane.setLeftAnchor(aniLetters[index].ft.getNode(), 500.0 + index * 60.0);\r\n            AnchorPane.setTopAnchor(aniLetters[index].ft.getNode(), 120.0 + line * 60.);\r\n            aniLetters[index].ft.play();\r\n            index += 1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 输入O\r\n     *\r\n     * @throws Exception 异常\r\n     */\r\n    public static void inputO() throws Exception {\r\n        if (index < 5) {\r\n            char toAddLetter;\r\n            toAddLetter = 'o';\r\n            testword.AddLetter(toAddLetter);\r\n            aniLetters[index] = new AniLetter(\"O\");\r\n            pane.getChildren().add(aniLetters[index].ft.getNode());\r\n            AnchorPane.setLeftAnchor(aniLetters[index].ft.getNode(), 500.0 + index * 60.0);\r\n            AnchorPane.setTopAnchor(aniLetters[index].ft.getNode(), 120.0 + line * 60.);\r\n            aniLetters[index].ft.play();\r\n            index += 1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 输入P\r\n     *\r\n     * @throws Exception 异常\r\n     */\r\n    public static void inputP() throws Exception {\r\n        if (index < 5) {\r\n            char toAddLetter;\r\n            toAddLetter = 'p';\r\n            testword.AddLetter(toAddLetter);\r\n            aniLetters[index] = new AniLetter(\"P\");\r\n            pane.getChildren().add(aniLetters[index].ft.getNode());\r\n            AnchorPane.setLeftAnchor(aniLetters[index].ft.getNode(), 500.0 + index * 60.0);\r\n            AnchorPane.setTopAnchor(aniLetters[index].ft.getNode(), 120.0 + line * 60.);\r\n            aniLetters[index].ft.play();\r\n            index += 1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 输入A\r\n     *\r\n     * @throws Exception 异常\r\n     */\r\n    public static void inputA() throws Exception {\r\n        if (index < 5) {\r\n            char toAddLetter;\r\n            toAddLetter = 'a';\r\n            testword.AddLetter(toAddLetter);\r\n            aniLetters[index] = new AniLetter(\"A\");\r\n            pane.getChildren().add(aniLetters[index].ft.getNode());\r\n            AnchorPane.setLeftAnchor(aniLetters[index].ft.getNode(), 500.0 + index * 60.0);\r\n            AnchorPane.setTopAnchor(aniLetters[index].ft.getNode(), 120.0 + line * 60.);\r\n            aniLetters[index].ft.play();\r\n            index += 1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 输入S\r\n     *\r\n     * @throws Exception 异常\r\n     */\r\n    public static void inputS() throws Exception {\r\n        if (index < 5) {\r\n            char toAddLetter;\r\n            toAddLetter = 's';\r\n            testword.AddLetter(toAddLetter);\r\n            aniLetters[index] = new AniLetter(\"S\");\r\n            pane.getChildren().add(aniLetters[index].ft.getNode());\r\n            AnchorPane.setLeftAnchor(aniLetters[index].ft.getNode(), 500.0 + index * 60.0);\r\n            AnchorPane.setTopAnchor(aniLetters[index].ft.getNode(), 120.0 + line * 60.);\r\n            aniLetters[index].ft.play();\r\n            index += 1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 输入D\r\n     *\r\n     * @throws Exception 异常\r\n     */\r\n    public static void inputD() throws Exception {\r\n        if (index < 5) {\r\n            char toAddLetter;\r\n            toAddLetter = 'd';\r\n            testword.AddLetter(toAddLetter);\r\n            aniLetters[index] = new AniLetter(\"D\");\r\n            pane.getChildren().add(aniLetters[index].ft.getNode());\r\n            AnchorPane.setLeftAnchor(aniLetters[index].ft.getNode(), 500.0 + index * 60.0);\r\n            AnchorPane.setTopAnchor(aniLetters[index].ft.getNode(), 120.0 + line * 60.);\r\n            aniLetters[index].ft.play();\r\n            index += 1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 输入F\r\n     *\r\n     * @throws Exception 异常\r\n     */\r\n    public static void inputF() throws Exception {\r\n        if (index < 5) {\r\n            char toAddLetter;\r\n            toAddLetter = 'f';\r\n            testword.AddLetter(toAddLetter);\r\n            aniLetters[index] = new AniLetter(\"F\");\r\n            pane.getChildren().add(aniLetters[index].ft.getNode());\r\n            AnchorPane.setLeftAnchor(aniLetters[index].ft.getNode(), 500.0 + index * 60.0);\r\n            AnchorPane.setTopAnchor(aniLetters[index].ft.getNode(), 120.0 + line * 60.);\r\n            aniLetters[index].ft.play();\r\n            index += 1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 输入G\r\n     *\r\n     * @throws Exception 异常\r\n     */\r\n    public static void inputG() throws Exception {\r\n        if (index < 5) {\r\n            char toAddLetter;\r\n            toAddLetter = 'g';\r\n            testword.AddLetter(toAddLetter);\r\n            aniLetters[index] = new AniLetter(\"G\");\r\n            pane.getChildren().add(aniLetters[index].ft.getNode());\r\n            AnchorPane.setLeftAnchor(aniLetters[index].ft.getNode(), 500.0 + index * 60.0);\r\n            AnchorPane.setTopAnchor(aniLetters[index].ft.getNode(), 120.0 + line * 60.);\r\n            aniLetters[index].ft.play();\r\n            index += 1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 输入H\r\n     *\r\n     * @throws Exception 异常\r\n     */\r\n    public static void inputH() throws Exception {\r\n        if (index < 5) {\r\n            char toAddLetter;\r\n            toAddLetter = 'h';\r\n            testword.AddLetter(toAddLetter);\r\n            aniLetters[index] = new AniLetter(\"H\");\r\n            pane.getChildren().add(aniLetters[index].ft.getNode());\r\n            AnchorPane.setLeftAnchor(aniLetters[index].ft.getNode(), 500.0 + index * 60.0);\r\n            AnchorPane.setTopAnchor(aniLetters[index].ft.getNode(), 120.0 + line * 60.);\r\n            aniLetters[index].ft.play();\r\n            index += 1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 输入J\r\n     *\r\n     * @throws Exception 异常\r\n     */\r\n    public static void inputJ() throws Exception {\r\n        if (index < 5) {\r\n            char toAddLetter;\r\n            toAddLetter = 'j';\r\n            testword.AddLetter(toAddLetter);\r\n            aniLetters[index] = new AniLetter(\"J\");\r\n            pane.getChildren().add(aniLetters[index].ft.getNode());\r\n            AnchorPane.setLeftAnchor(aniLetters[index].ft.getNode(), 500.0 + index * 60.0);\r\n            AnchorPane.setTopAnchor(aniLetters[index].ft.getNode(), 120.0 + line * 60.);\r\n            aniLetters[index].ft.play();\r\n            index += 1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 输入K\r\n     *\r\n     * @throws Exception 异常\r\n     */\r\n    public static void inputK() throws Exception {\r\n        if (index < 5) {\r\n            char toAddLetter;\r\n            toAddLetter = 'k';\r\n            testword.AddLetter(toAddLetter);\r\n            aniLetters[index] = new AniLetter(\"K\");\r\n            pane.getChildren().add(aniLetters[index].ft.getNode());\r\n            AnchorPane.setLeftAnchor(aniLetters[index].ft.getNode(), 500.0 + index * 60.0);\r\n            AnchorPane.setTopAnchor(aniLetters[index].ft.getNode(), 120.0 + line * 60.);\r\n            aniLetters[index].ft.play();\r\n            index += 1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 输入L\r\n     *\r\n     * @throws Exception 异常\r\n     */\r\n    public static void inputL() throws Exception {\r\n        if (index < 5) {\r\n            char toAddLetter;\r\n            toAddLetter = 'l';\r\n            testword.AddLetter(toAddLetter);\r\n            aniLetters[index] = new AniLetter(\"L\");\r\n            pane.getChildren().add(aniLetters[index].ft.getNode());\r\n            AnchorPane.setLeftAnchor(aniLetters[index].ft.getNode(), 500.0 + index * 60.0);\r\n            AnchorPane.setTopAnchor(aniLetters[index].ft.getNode(), 120.0 + line * 60.);\r\n            aniLetters[index].ft.play();\r\n            index += 1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 输入Z\r\n     *\r\n     * @throws Exception 异常\r\n     */\r\n    public static void inputZ() throws Exception {\r\n        if (index < 5) {\r\n            char toAddLetter;\r\n            toAddLetter = 'z';\r\n            testword.AddLetter(toAddLetter);\r\n            aniLetters[index] = new AniLetter(\"Z\");\r\n            pane.getChildren().add(aniLetters[index].ft.getNode());\r\n            AnchorPane.setLeftAnchor(aniLetters[index].ft.getNode(), 500.0 + index * 60.0);\r\n            AnchorPane.setTopAnchor(aniLetters[index].ft.getNode(), 120.0 + line * 60.);\r\n            aniLetters[index].ft.play();\r\n            index += 1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 输入X\r\n     *\r\n     * @throws Exception 异常\r\n     */\r\n    public static void inputX() throws Exception {\r\n        if (index < 5) {\r\n            char toAddLetter;\r\n            toAddLetter = 'x';\r\n            testword.AddLetter(toAddLetter);\r\n            aniLetters[index] = new AniLetter(\"X\");\r\n            pane.getChildren().add(aniLetters[index].ft.getNode());\r\n            AnchorPane.setLeftAnchor(aniLetters[index].ft.getNode(), 500.0 + index * 60.0);\r\n            AnchorPane.setTopAnchor(aniLetters[index].ft.getNode(), 120.0 + line * 60.);\r\n            aniLetters[index].ft.play();\r\n            index += 1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 输入C\r\n     *\r\n     * @throws Exception 异常\r\n     */\r\n    public static void inputC() throws Exception {\r\n        if (index < 5) {\r\n            char toAddLetter;\r\n            toAddLetter = 'c';\r\n            testword.AddLetter(toAddLetter);\r\n            aniLetters[index] = new AniLetter(\"C\");\r\n            pane.getChildren().add(aniLetters[index].ft.getNode());\r\n            AnchorPane.setLeftAnchor(aniLetters[index].ft.getNode(), 500.0 + index * 60.0);\r\n            AnchorPane.setTopAnchor(aniLetters[index].ft.getNode(), 120.0 + line * 60.);\r\n            aniLetters[index].ft.play();\r\n            index += 1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 输入V\r\n     *\r\n     * @throws Exception 异常\r\n     */\r\n    public static void inputV() throws Exception {\r\n        if (index < 5) {\r\n            char toAddLetter;\r\n            toAddLetter = 'v';\r\n            testword.AddLetter(toAddLetter);\r\n            aniLetters[index] = new AniLetter(\"V\");\r\n            pane.getChildren().add(aniLetters[index].ft.getNode());\r\n            AnchorPane.setLeftAnchor(aniLetters[index].ft.getNode(), 500.0 + index * 60.0);\r\n            AnchorPane.setTopAnchor(aniLetters[index].ft.getNode(), 120.0 + line * 60.);\r\n            aniLetters[index].ft.play();\r\n            index += 1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 输入B\r\n     *\r\n     * @throws Exception 异常\r\n     */\r\n    public static void inputB() throws Exception {\r\n        if (index < 5) {\r\n            char toAddLetter;\r\n            toAddLetter = 'b';\r\n            testword.AddLetter(toAddLetter);\r\n            aniLetters[index] = new AniLetter(\"B\");\r\n            pane.getChildren().add(aniLetters[index].ft.getNode());\r\n            AnchorPane.setLeftAnchor(aniLetters[index].ft.getNode(), 500.0 + index * 60.0);\r\n            AnchorPane.setTopAnchor(aniLetters[index].ft.getNode(), 120.0 + line * 60.);\r\n            aniLetters[index].ft.play();\r\n            index += 1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 输入N\r\n     *\r\n     * @throws Exception 异常\r\n     */\r\n    public static void inputN() throws Exception {\r\n        if (index < 5) {\r\n            char toAddLetter;\r\n            toAddLetter = 'n';\r\n            testword.AddLetter(toAddLetter);\r\n            aniLetters[index] = new AniLetter(\"N\");\r\n            pane.getChildren().add(aniLetters[index].ft.getNode());\r\n            AnchorPane.setLeftAnchor(aniLetters[index].ft.getNode(), 500.0 + index * 60.0);\r\n            AnchorPane.setTopAnchor(aniLetters[index].ft.getNode(), 120.0 + line * 60.);\r\n            aniLetters[index].ft.play();\r\n            index += 1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 输入M\r\n     *\r\n     * @throws Exception 异常\r\n     */\r\n    public static void inputM() throws Exception {\r\n        if (index < 5) {\r\n            char toAddLetter;\r\n            toAddLetter = 'm';\r\n            testword.AddLetter(toAddLetter);\r\n            aniLetters[index] = new AniLetter(\"M\");\r\n            pane.getChildren().add(aniLetters[index].ft.getNode());\r\n            AnchorPane.setLeftAnchor(aniLetters[index].ft.getNode(), 500.0 + index * 60.0);\r\n            AnchorPane.setTopAnchor(aniLetters[index].ft.getNode(), 120.0 + line * 60.);\r\n            aniLetters[index].ft.play();\r\n            index += 1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 输入退格\r\n\r\n     */\r\n    public static void backSpace() {\r\n        if (index >= 1) {\r\n            testword.RemoveLetter();\r\n            pane.getChildren().remove(aniLetters[index - 1].ft.getNode());\r\n            index -= 1;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * normal模式回车输入\r\n\r\n     */\r\n    public static void mainEnter() {\r\n        if (testword.letters.size() == 5) {\r\n            try {\r\n                int status;\r\n                if (Word.CheckInList(testword.WordContent.toString())) {\r\n                    index = 0;\r\n                    line++;\r\n                    testword.CheckAns(ans);\r\n                    System.out.println(testword.ShowColor());\r\n                    for (int i = 0; i < 5; i++) {\r\n                        if (testword.letters.get(i).letterColor == LetterColor.Green) {\r\n                            aniLetters[i].text.setFill(Color.GREEN);\r\n                            Controller.changeButtonColor(testword.letters.get(i).letterContent, 3);\r\n                        }\r\n                        if (testword.letters.get(i).letterColor == LetterColor.Yellow) {\r\n                            aniLetters[i].text.setFill(Color.YELLOW);\r\n                            Controller.changeButtonColor(testword.letters.get(i).letterContent, 2);\r\n                        }\r\n                        if (testword.letters.get(i).letterColor == LetterColor.Grey) {\r\n                            aniLetters[i].text.setFill(Color.BLACK);\r\n                            Controller.changeButtonColor(testword.letters.get(i).letterContent, 1);\r\n                        }\r\n\r\n                    }\r\n                    status = testword.getState();\r\n                    if (status == 0) {\r\n                        System.out.println(\"you win\");\r\n\r\n                        Rectangle recB = new Rectangle();\r\n                        recB.setFill(Color.BLACK);\r\n                        recB.setWidth(1280);\r\n                        recB.setHeight(800);\r\n//                                        pane.getChildren().add(recB);\r\n                        FadeTransition black = new FadeTransition();\r\n                        black.setNode(recB);\r\n                        black.setFromValue(0);\r\n                        black.setToValue(0.8);\r\n                        black.setDuration(Duration.seconds(1));\r\n                        pane.getChildren().add(black.getNode());\r\n                        AnchorPane.setTopAnchor(black.getNode(), 0.);\r\n                        AnchorPane.setLeftAnchor(black.getNode(), 0.);\r\n                        black.play();\r\n\r\n                        FadeTransition win = new FadeTransition();\r\n                        Text text = new Text(\"WIN!!\");\r\n                        gameIsOver = true;\r\n                        text.setFont(Font.font(\"times new roman\", FontWeight.MEDIUM, FontPosture.REGULAR, 100));\r\n                        text.setTextAlignment(TextAlignment.JUSTIFY);\r\n                        text.setFill(Color.GREEN);\r\n                        win.setNode(text);\r\n                        win.setFromValue(0);\r\n                        win.setToValue(1);\r\n                        win.setDuration(Duration.seconds(1));\r\n                        pane.getChildren().add(win.getNode());\r\n                        AnchorPane.setTopAnchor(win.getNode(), 280.0);\r\n                        AnchorPane.setLeftAnchor(win.getNode(), 500.0);\r\n                        win.play();\r\n\r\n                        Button b = new Button();\r\n                        b.setText(\"Back to Menu\");\r\n                        b.setLayoutX(200);\r\n                        b.setLayoutY(50);\r\n                        b.setPrefWidth(200);\r\n                        b.setPrefHeight(50);\r\n                        //当鼠标进入按钮时添加阴影特效\r\n                        b.addEventHandler(MouseEvent.MOUSE_ENTERED, (MouseEvent e) -> b.setStyle(\r\n                                \"-fx-background-color:#a8a8a8;\" +         //设置背景颜色\r\n                                        \"-fx-background-radius:5;\" +     //设置背景圆角\r\n                                        \"-fx-text-fill:#ffffff;\" +        //设置字体颜色\r\n                                        \"-fx-border-radius:5;\" +         //设置边框圆角\r\n                                        \"-fx-border-color:#838383;\"     //设置边框颜色\r\n                                        + \"-fx-font-size: 20\"\r\n                        ));\r\n                        //当鼠标离开按钮时移除阴影效果\r\n                        b.addEventHandler(MouseEvent.MOUSE_EXITED, (MouseEvent e) -> b.setStyle(\r\n                                \"-fx-background-color:#7a7a7a;\" +         //设置背景颜色\r\n                                        \"-fx-background-radius:5;\" +     //设置背景圆角\r\n                                        \"-fx-text-fill:#ffffff;\" +        //设置字体颜色\r\n                                        \"-fx-border-radius:5;\" +         //设置边框圆角\r\n                                        \"-fx-border-color:#838383;\"     //设置边框颜色\r\n                                        + \"-fx-font-size: 20\"\r\n                        ));\r\n                        b.setStyle(\r\n                                \"-fx-background-color:#7a7a7a;\" +         //设置背景颜色\r\n                                        \"-fx-background-radius:5;\" +     //设置背景圆角\r\n                                        \"-fx-text-fill:#ffffff;\" +        //设置字体颜色\r\n                                        \"-fx-border-radius:5;\" +         //设置边框圆角\r\n                                        \"-fx-border-color:#838383;\"     //设置边框颜色\r\n                                        + \"-fx-font-size: 20\"\r\n                        );\r\n                        AnchorPane.setTopAnchor(b, 400.);\r\n                        AnchorPane.setLeftAnchor(b, 530.);\r\n                        pane.getChildren().add(b);\r\n                        b.setOnMouseClicked(finish -> {\r\n                            try {\r\n                                Controller.backToMenu();\r\n                            } catch (Exception e) {\r\n                                throw new RuntimeException(e);\r\n                            }\r\n                        });\r\n                    }\r\n                    if (line == 6 && !gameIsOver) {\r\n                        System.out.println(\"you lose\");\r\n\r\n                        Rectangle recB = new Rectangle();\r\n                        recB.setFill(Color.BLACK);\r\n                        recB.setWidth(1280);\r\n                        recB.setHeight(800);\r\n//                                        pane.getChildren().add(recB);\r\n                        FadeTransition black = new FadeTransition();\r\n                        black.setNode(recB);\r\n                        black.setFromValue(0);\r\n                        black.setToValue(0.8);\r\n                        black.setDuration(Duration.seconds(1));\r\n                        pane.getChildren().add(black.getNode());\r\n                        AnchorPane.setTopAnchor(black.getNode(), 0.);\r\n                        AnchorPane.setLeftAnchor(black.getNode(), 0.);\r\n                        black.play();\r\n\r\n                        FadeTransition win = new FadeTransition();\r\n                        Text text = new Text(\"LOSE!!\");\r\n                        gameIsOver = true;\r\n                        text.setFont(Font.font(\"times new roman\", FontWeight.MEDIUM, FontPosture.REGULAR, 100));\r\n                        text.setTextAlignment(TextAlignment.JUSTIFY);\r\n                        text.setFill(Color.RED);\r\n                        win.setNode(text);\r\n                        win.setFromValue(0);\r\n                        win.setToValue(1);\r\n                        win.setDuration(Duration.seconds(1));\r\n                        pane.getChildren().add(win.getNode());\r\n                        AnchorPane.setTopAnchor(win.getNode(), 280.0);\r\n                        AnchorPane.setLeftAnchor(win.getNode(), 500.0);\r\n                        win.play();\r\n\r\n                        Button b = new Button();\r\n                        b.setText(\"Back to Menu\");\r\n                        b.setLayoutX(200);\r\n                        b.setLayoutY(50);\r\n                        b.setPrefWidth(200);\r\n                        b.setPrefHeight(50);\r\n                        //当鼠标进入按钮时添加阴影特效\r\n                        b.addEventHandler(MouseEvent.MOUSE_ENTERED, (MouseEvent e) -> b.setStyle(\r\n                                \"-fx-background-color:#a8a8a8;\" +         //设置背景颜色\r\n                                        \"-fx-background-radius:5;\" +     //设置背景圆角\r\n                                        \"-fx-text-fill:#ffffff;\" +        //设置字体颜色\r\n                                        \"-fx-border-radius:5;\" +         //设置边框圆角\r\n                                        \"-fx-border-color:#838383;\"     //设置边框颜色\r\n                                        + \"-fx-font-size: 20\"\r\n                        ));\r\n                        //当鼠标离开按钮时移除阴影效果\r\n                        b.addEventHandler(MouseEvent.MOUSE_EXITED, (MouseEvent e) -> b.setStyle(\r\n                                \"-fx-background-color:#7a7a7a;\" +         //设置背景颜色\r\n                                        \"-fx-background-radius:5;\" +     //设置背景圆角\r\n                                        \"-fx-text-fill:#ffffff;\" +        //设置字体颜色\r\n                                        \"-fx-border-radius:5;\" +         //设置边框圆角\r\n                                        \"-fx-border-color:#838383;\"     //设置边框颜色\r\n                                        + \"-fx-font-size: 20\"\r\n                        ));\r\n                        b.setStyle(\r\n                                \"-fx-background-color:#7a7a7a;\" +         //设置背景颜色\r\n                                        \"-fx-background-radius:5;\" +     //设置背景圆角\r\n                                        \"-fx-text-fill:#ffffff;\" +        //设置字体颜色\r\n                                        \"-fx-border-radius:5;\" +         //设置边框圆角\r\n                                        \"-fx-border-color:#838383;\"     //设置边框颜色\r\n                                        + \"-fx-font-size: 20\"\r\n                        );\r\n                        AnchorPane.setTopAnchor(b, 400.);\r\n                        AnchorPane.setLeftAnchor(b, 530.);\r\n                        pane.getChildren().add(b);\r\n                        b.setOnMouseClicked(finish -> {\r\n                            try {\r\n                                Controller.backToMenu();\r\n                            } catch (Exception e) {\r\n                                throw new RuntimeException(e);\r\n                            }\r\n                        });\r\n                    }\r\n                    for (int i = 0; i < 5; i++) {\r\n                        testword.RemoveLetter();\r\n                    }\r\n\r\n                } else {\r\n                    System.out.println(\"Not in the list\");\r\n\r\n                    Rectangle recB = new Rectangle();\r\n                    recB.setFill(Color.BLACK);\r\n                    recB.setWidth(1280);\r\n                    recB.setHeight(800);\r\n//                                        pane.getChildren().add(recB);\r\n                    FadeTransition black = new FadeTransition();\r\n                    black.setNode(recB);\r\n                    black.setFromValue(0);\r\n                    black.setToValue(0.2);\r\n                    black.setCycleCount(2);\r\n                    black.setAutoReverse(true);\r\n                    black.setDuration(Duration.seconds(1));\r\n\r\n\r\n                    pane.getChildren().add(black.getNode());\r\n                    AnchorPane.setTopAnchor(black.getNode(), 0.);\r\n                    AnchorPane.setLeftAnchor(black.getNode(), 0.);\r\n                    black.play();\r\n                    black.setOnFinished(finish-> pane.getChildren().remove(black.getNode()));\r\n\r\n                    FadeTransition win = new FadeTransition();\r\n                    Text text = new Text(\"Not in Word List!!\");\r\n                    text.setFont(Font.font(\"times new roman\", FontWeight.MEDIUM, FontPosture.REGULAR, 80));\r\n                    text.setTextAlignment(TextAlignment.JUSTIFY);\r\n                    text.setFill(Color.YELLOW);\r\n                    win.setNode(text);\r\n                    win.setFromValue(0);\r\n                    win.setToValue(1);\r\n                    win.setDuration(Duration.seconds(1));\r\n                    win.setAutoReverse(true);\r\n                    win.setCycleCount(2);\r\n                    pane.getChildren().add(win.getNode());\r\n                    AnchorPane.setTopAnchor(win.getNode(), 300.0);\r\n                    AnchorPane.setLeftAnchor(win.getNode(), 350.0);\r\n                    win.play();\r\n                    win.setOnFinished(finish->{\r\n                        pane.getChildren().remove(win.getNode());\r\n                        System.out.println(\"YES\");\r\n                    });\r\n                }\r\n\r\n            } catch (Exception e) {\r\n                //throw new RuntimeException(e);\r\n                System.out.println(\"Not in the list\");\r\n                for (int i = 0; i < 5; i++) {\r\n                    testword.RemoveLetter();\r\n                }\r\n            }\r\n        } else {\r\n            System.out.println(testword.WordContent);\r\n            System.out.println(testword.letters.size());\r\n            System.out.println(\"not enough letter!\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * advance模式回车输入\r\n     */\r\n    public static void advanceEnter() {\r\n        if (testword.letters.size() == 5) {\r\n            try {\r\n                int status;\r\n                if (Word.CheckInList(testword.WordContent.toString())) {\r\n                    index = 0;\r\n                    line++;\r\n                    testword.CheckAns(ans);\r\n                    System.out.println(testword.ShowColor());\r\n                    for (int i = 0; i < 5; i++) {\r\n                        if (testword.letters.get(i).letterColor == LetterColor.Green) {\r\n                            aniLetters[i].text.setFill(Color.GREEN);\r\n                            advanceController.changeButtonColor(testword.letters.get(i).letterContent, 3);\r\n                        }\r\n                        if (testword.letters.get(i).letterColor == LetterColor.Yellow) {\r\n                            aniLetters[i].text.setFill(Color.YELLOW);\r\n                            advanceController.changeButtonColor(testword.letters.get(i).letterContent, 2);\r\n                        }\r\n                        if (testword.letters.get(i).letterColor == LetterColor.Grey) {\r\n                            aniLetters[i].text.setFill(Color.BLACK);\r\n                            System.out.println(\"changecolorbegin\");\r\n                            advanceController.changeButtonColor(testword.letters.get(i).letterContent, 1);\r\n                            System.out.println(\"changecolorend\");\r\n                        }\r\n                    }\r\n                    status = testword.getState();\r\n\r\n                    WordList.PossibleWord = GuessAlgorithm.updatePossibleWord(WordList.PossibleWord, testword.getState(), testword.WordContent.toString());\r\n                    GuessAlgorithm.possibilities = WordList.PossibleWord.size();\r\n                    double newE = GuessAlgorithm.calENow(WordList.PossibleWord);\r\n                    double info = GuessAlgorithm.eNow - newE;\r\n\r\n                    AniString infoString = new AniString(df2.format(info) + \"bits\", Color.WHITE);\r\n                    pane.getChildren().add(infoString.ft.getNode());\r\n                    AnchorPane.setLeftAnchor(infoString.ft.getNode(), 800.0);\r\n                    AnchorPane.setTopAnchor(infoString.ft.getNode(), 125.0 + leftLine * 60.0);\r\n                    infoString.ft.play();\r\n\r\n                    GuessAlgorithm.eNow = newE;\r\n                    leftLine++;\r\n                    aniStrings.add(new AniString(\"Possibilities:\", Color.WHITE));\r\n                    pane.getChildren().add(aniStrings.get(aniStrings.size() - 1).ft.getNode());\r\n                    AnchorPane.setLeftAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 150.0);\r\n                    AnchorPane.setTopAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 125.0 + leftLine * 60.0);\r\n                    aniStrings.get(aniStrings.size() - 1).ft.play();\r\n\r\n                    aniStrings.add(new AniString(\"\" + GuessAlgorithm.possibilities, Color.WHITE));\r\n                    pane.getChildren().add(aniStrings.get(aniStrings.size() - 1).ft.getNode());\r\n                    AnchorPane.setLeftAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 150.0 + aniStrings.size() * 75.0);\r\n                    AnchorPane.setTopAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 125.0 + leftLine * 60.0);\r\n                    aniStrings.get(aniStrings.size() - 1).ft.play();\r\n\r\n                    aniStrings.add(new AniString(\"/ E:\", Color.SKYBLUE));\r\n                    pane.getChildren().add(aniStrings.get(aniStrings.size() - 1).ft.getNode());\r\n                    AnchorPane.setLeftAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 150.0 + aniStrings.size() * 75.0);\r\n                    AnchorPane.setTopAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 125.0 + leftLine * 60.0);\r\n                    aniStrings.get(aniStrings.size() - 1).ft.play();\r\n\r\n                    // 保留小数点后两位\r\n                    DecimalFormat df = new DecimalFormat(\"#.00\");\r\n                    aniStrings.add(new AniString(\"\" + df.format(GuessAlgorithm.eNow), Color.SKYBLUE));\r\n                    pane.getChildren().add(aniStrings.get(aniStrings.size() - 1).ft.getNode());\r\n                    AnchorPane.setLeftAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 120 + aniStrings.size() * 75.0);\r\n                    AnchorPane.setTopAnchor(aniStrings.get(aniStrings.size() - 1).ft.getNode(), 125.0 + leftLine * 60.0);\r\n                    aniStrings.get(aniStrings.size() - 1).ft.play();\r\n\r\n                    aniStrings.clear();\r\n\r\n                    GuessAlgorithm.getWordScore(WordList.LegalWord, WordList.PossibleWord);\r\n                    for (int i = 0; i < 5 && i < GuessAlgorithm.wsList.size(); i++) {\r\n                        System.out.println(GuessAlgorithm.wsList.get(i).word + \" \" + GuessAlgorithm.wsList.get(i).entropy + \" \" + GuessAlgorithm.wsList.get(i).possible + \" \" + GuessAlgorithm.wsList.get(i).score);\r\n                    }\r\n\r\n\r\n                    for (int i = 0; i < 5; i++) {\r\n                        testword.RemoveLetter();\r\n                        pane.getChildren().remove(recommend[i].ft.getNode());\r\n                        pane.getChildren().remove(recommendInfo[i].ft.getNode());\r\n                        pane.getChildren().remove(recommendPossibility[i].ft.getNode());\r\n                        AniString fadeRecommend = new AniString(recommend[i].string.getText(), Color.WHITE);\r\n                        pane.getChildren().add(fadeRecommend.ft2.getNode());\r\n                        AnchorPane.setLeftAnchor(fadeRecommend.ft2.getNode(), 900.0);\r\n                        AnchorPane.setTopAnchor(fadeRecommend.ft2.getNode(), 180 + i * 60.0);\r\n                        fadeRecommend.ft2.play();\r\n                        AniString fadeRecommendInfo = new AniString(recommendInfo[i].string.getText(), Color.WHITE);\r\n                        pane.getChildren().add(fadeRecommendInfo.ft2.getNode());\r\n                        AnchorPane.setLeftAnchor(fadeRecommendInfo.ft2.getNode(), 900.0 + 150);\r\n                        AnchorPane.setTopAnchor(fadeRecommendInfo.ft2.getNode(), 180 + i * 60.0);\r\n                        fadeRecommendInfo.ft2.play();\r\n                        AniString fadeRecommendPossibility = new AniString(recommendPossibility[i].string.getText(), Color.WHITE);\r\n                        pane.getChildren().add(fadeRecommendPossibility.ft2.getNode());\r\n                        AnchorPane.setLeftAnchor(fadeRecommendPossibility.ft2.getNode(), 900.0 + 240);\r\n                        AnchorPane.setTopAnchor(fadeRecommendPossibility.ft2.getNode(), 180 + i * 60.0);\r\n                        fadeRecommendPossibility.ft2.play();\r\n                    }\r\n\r\n                    for (int i = 0; i < 5 && i < GuessAlgorithm.wsList.size(); i++) {\r\n                        recommend[i] = new AniString(GuessAlgorithm.wsList.get(i).word, Color.WHITE);\r\n                        pane.getChildren().add(recommend[i].ft.getNode());\r\n                        AnchorPane.setLeftAnchor(recommend[i].ft.getNode(), 900.0);\r\n                        AnchorPane.setTopAnchor(recommend[i].ft.getNode(), 180.0 + i * 60.0);\r\n                        recommend[i].ft.play();\r\n                        recommendInfo[i] = new AniString(df2.format(GuessAlgorithm.wsList.get(i).entropy), Color.WHITE);\r\n                        pane.getChildren().add(recommendInfo[i].ft.getNode());\r\n                        AnchorPane.setLeftAnchor(recommendInfo[i].ft.getNode(), 900.0 + 150.0);\r\n                        AnchorPane.setTopAnchor(recommendInfo[i].ft.getNode(), 180.0 + i * 60.0);\r\n                        recommendInfo[i].ft.play();\r\n                        recommendPossibility[i] = new AniString(df6.format(GuessAlgorithm.wsList.get(i).possible), Color.WHITE);\r\n                        pane.getChildren().add(recommendPossibility[i].ft.getNode());\r\n                        AnchorPane.setLeftAnchor(recommendPossibility[i].ft.getNode(), 900.0 + 240.0);\r\n                        AnchorPane.setTopAnchor(recommendPossibility[i].ft.getNode(), 180.0 + i * 60.0);\r\n                        recommendPossibility[i].ft.play();\r\n                    }\r\n\r\n                    if (status == 0) {\r\n                        System.out.println(\"you win\");\r\n\r\n                        Rectangle recB = new Rectangle();\r\n                        recB.setFill(Color.BLACK);\r\n                        recB.setWidth(1280);\r\n                        recB.setHeight(800);\r\n//                                        pane.getChildren().add(recB);\r\n                        FadeTransition black = new FadeTransition();\r\n                        black.setNode(recB);\r\n                        black.setFromValue(0);\r\n                        black.setToValue(0.8);\r\n                        black.setDuration(Duration.seconds(1));\r\n                        pane.getChildren().add(black.getNode());\r\n                        AnchorPane.setTopAnchor(black.getNode(), 0.);\r\n                        AnchorPane.setLeftAnchor(black.getNode(), 0.);\r\n                        black.play();\r\n\r\n                        FadeTransition win = new FadeTransition();\r\n                        Text text = new Text(\"WIN!!\");\r\n                        gameIsOver = true;\r\n                        text.setFont(Font.font(\"times new roman\", FontWeight.MEDIUM, FontPosture.REGULAR, 100));\r\n                        text.setTextAlignment(TextAlignment.JUSTIFY);\r\n                        text.setFill(Color.GREEN);\r\n                        win.setNode(text);\r\n                        win.setFromValue(0);\r\n                        win.setToValue(1);\r\n                        win.setDuration(Duration.seconds(1));\r\n                        pane.getChildren().add(win.getNode());\r\n                        AnchorPane.setTopAnchor(win.getNode(), 280.0);\r\n                        AnchorPane.setLeftAnchor(win.getNode(), 500.0);\r\n                        win.play();\r\n\r\n                        Button b = new Button();\r\n                        b.setText(\"Back to Menu\");\r\n                        b.setLayoutX(200);\r\n                        b.setLayoutY(50);\r\n                        b.setPrefWidth(200);\r\n                        b.setPrefHeight(50);\r\n                        //当鼠标进入按钮时添加阴影特效\r\n                        b.addEventHandler(MouseEvent.MOUSE_ENTERED, (MouseEvent e) -> b.setStyle(\r\n                                \"-fx-background-color:#a8a8a8;\" +         //设置背景颜色\r\n                                        \"-fx-background-radius:5;\" +     //设置背景圆角\r\n                                        \"-fx-text-fill:#ffffff;\" +        //设置字体颜色\r\n                                        \"-fx-border-radius:5;\" +         //设置边框圆角\r\n                                        \"-fx-border-color:#838383;\"     //设置边框颜色\r\n                                        + \"-fx-font-size: 20\"\r\n                        ));\r\n                        //当鼠标离开按钮时移除阴影效果\r\n                        b.addEventHandler(MouseEvent.MOUSE_EXITED, (MouseEvent e) -> b.setStyle(\r\n                                \"-fx-background-color:#7a7a7a;\" +         //设置背景颜色\r\n                                        \"-fx-background-radius:5;\" +     //设置背景圆角\r\n                                        \"-fx-text-fill:#ffffff;\" +        //设置字体颜色\r\n                                        \"-fx-border-radius:5;\" +         //设置边框圆角\r\n                                        \"-fx-border-color:#838383;\"     //设置边框颜色\r\n                                        + \"-fx-font-size: 20\"\r\n                        ));\r\n                        b.setStyle(\r\n                                \"-fx-background-color:#7a7a7a;\" +         //设置背景颜色\r\n                                        \"-fx-background-radius:5;\" +     //设置背景圆角\r\n                                        \"-fx-text-fill:#ffffff;\" +        //设置字体颜色\r\n                                        \"-fx-border-radius:5;\" +         //设置边框圆角\r\n                                        \"-fx-border-color:#838383;\"     //设置边框颜色\r\n                                        + \"-fx-font-size: 20\"\r\n                        );\r\n                        AnchorPane.setTopAnchor(b, 400.);\r\n                        AnchorPane.setLeftAnchor(b, 530.);\r\n                        pane.getChildren().add(b);\r\n                        b.setOnMouseClicked(finish -> {\r\n                            try {\r\n                                advanceController.backToMenu();\r\n                            } catch (Exception e) {\r\n                                throw new RuntimeException(e);\r\n                            }\r\n                        });\r\n                    }\r\n                    if (line == 6 && !gameIsOver) {\r\n                        System.out.println(\"you lose\");\r\n\r\n                        Rectangle recB = new Rectangle();\r\n                        recB.setFill(Color.BLACK);\r\n                        recB.setWidth(1280);\r\n                        recB.setHeight(800);\r\n//                                        pane.getChildren().add(recB);\r\n                        FadeTransition black = new FadeTransition();\r\n                        black.setNode(recB);\r\n                        black.setFromValue(0);\r\n                        black.setToValue(0.8);\r\n                        black.setDuration(Duration.seconds(1));\r\n                        pane.getChildren().add(black.getNode());\r\n                        AnchorPane.setTopAnchor(black.getNode(), 0.);\r\n                        AnchorPane.setLeftAnchor(black.getNode(), 0.);\r\n                        black.play();\r\n\r\n                        FadeTransition win = new FadeTransition();\r\n                        Text text = new Text(\"LOSE!!\");\r\n                        gameIsOver = true;\r\n                        text.setFont(Font.font(\"times new roman\", FontWeight.MEDIUM, FontPosture.REGULAR, 100));\r\n                        text.setTextAlignment(TextAlignment.JUSTIFY);\r\n                        text.setFill(Color.RED);\r\n                        win.setNode(text);\r\n                        win.setFromValue(0);\r\n                        win.setToValue(1);\r\n                        win.setDuration(Duration.seconds(1));\r\n                        pane.getChildren().add(win.getNode());\r\n                        AnchorPane.setTopAnchor(win.getNode(), 280.0);\r\n                        AnchorPane.setLeftAnchor(win.getNode(), 500.0);\r\n                        win.play();\r\n\r\n                        Button b = new Button();\r\n                        b.setText(\"Back to Menu\");\r\n                        b.setLayoutX(200);\r\n                        b.setLayoutY(50);\r\n                        b.setPrefWidth(200);\r\n                        b.setPrefHeight(50);\r\n                        //当鼠标进入按钮时添加阴影特效\r\n                        b.addEventHandler(MouseEvent.MOUSE_ENTERED, (MouseEvent e) -> b.setStyle(\r\n                                \"-fx-background-color:#a8a8a8;\" +         //设置背景颜色\r\n                                        \"-fx-background-radius:5;\" +     //设置背景圆角\r\n                                        \"-fx-text-fill:#ffffff;\" +        //设置字体颜色\r\n                                        \"-fx-border-radius:5;\" +         //设置边框圆角\r\n                                        \"-fx-border-color:#838383;\"     //设置边框颜色\r\n                                        + \"-fx-font-size: 20\"\r\n                        ));\r\n                        //当鼠标离开按钮时移除阴影效果\r\n                        b.addEventHandler(MouseEvent.MOUSE_EXITED, (MouseEvent e) -> b.setStyle(\r\n                                \"-fx-background-color:#7a7a7a;\" +         //设置背景颜色\r\n                                        \"-fx-background-radius:5;\" +     //设置背景圆角\r\n                                        \"-fx-text-fill:#ffffff;\" +        //设置字体颜色\r\n                                        \"-fx-border-radius:5;\" +         //设置边框圆角\r\n                                        \"-fx-border-color:#838383;\"     //设置边框颜色\r\n                                        + \"-fx-font-size: 20\"\r\n                        ));\r\n                        b.setStyle(\r\n                                \"-fx-background-color:#7a7a7a;\" +         //设置背景颜色\r\n                                        \"-fx-background-radius:5;\" +     //设置背景圆角\r\n                                        \"-fx-text-fill:#ffffff;\" +        //设置字体颜色\r\n                                        \"-fx-border-radius:5;\" +         //设置边框圆角\r\n                                        \"-fx-border-color:#838383;\"     //设置边框颜色\r\n                                        + \"-fx-font-size: 20\"\r\n                        );\r\n                        AnchorPane.setTopAnchor(b, 400.);\r\n                        AnchorPane.setLeftAnchor(b, 530.);\r\n                        pane.getChildren().add(b);\r\n                        b.setOnMouseClicked(finish -> {\r\n                            try {\r\n                                Controller.backToMenu();\r\n                            } catch (Exception e) {\r\n                                throw new RuntimeException(e);\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                } else {\r\n                    System.out.println(\"Not in the list\");\r\n\r\n\r\n                    Rectangle recB = new Rectangle();\r\n                    recB.setFill(Color.BLACK);\r\n                    recB.setWidth(1280);\r\n                    recB.setHeight(800);\r\n//                                        pane.getChildren().add(recB);\r\n                    FadeTransition black = new FadeTransition();\r\n                    black.setNode(recB);\r\n                    black.setFromValue(0);\r\n                    black.setToValue(0.2);\r\n                    black.setCycleCount(2);\r\n                    black.setAutoReverse(true);\r\n                    black.setDuration(Duration.seconds(1));\r\n\r\n\r\n                    pane.getChildren().add(black.getNode());\r\n                    AnchorPane.setTopAnchor(black.getNode(), 0.);\r\n                    AnchorPane.setLeftAnchor(black.getNode(), 0.);\r\n                    black.play();\r\n                    black.setOnFinished(finish-> pane.getChildren().remove(black.getNode()));\r\n\r\n                    FadeTransition win = new FadeTransition();\r\n                    Text text = new Text(\"Not in Word List!!\");\r\n                    text.setFont(Font.font(\"times new roman\", FontWeight.MEDIUM, FontPosture.REGULAR, 80));\r\n                    text.setTextAlignment(TextAlignment.JUSTIFY);\r\n                    text.setFill(Color.YELLOW);\r\n                    win.setNode(text);\r\n                    win.setFromValue(0);\r\n                    win.setToValue(1);\r\n                    win.setDuration(Duration.seconds(1));\r\n                    win.setAutoReverse(true);\r\n                    win.setCycleCount(2);\r\n                    pane.getChildren().add(win.getNode());\r\n                    AnchorPane.setTopAnchor(win.getNode(), 300.0);\r\n                    AnchorPane.setLeftAnchor(win.getNode(), 350.0);\r\n                    win.play();\r\n                    win.setOnFinished(finish->{\r\n                        pane.getChildren().remove(win.getNode());\r\n                        System.out.println(\"YES\");\r\n                    });\r\n                }\r\n\r\n            } catch (Exception e) {\r\n                //throw new RuntimeException(e);\r\n                System.out.println(e);\r\n                for (int i = 0; i < 5; i++) {\r\n                    testword.RemoveLetter();\r\n                }\r\n            }\r\n        } else {\r\n            System.out.println(\"not enough letter!\");\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>GBK
===================================================================
diff --git a/src/main/Main.java b/src/main/Main.java
--- a/src/main/Main.java	(revision 20ef43f564b0a8a1c3a7a14aeb1b58ee49d29a12)
+++ b/src/main/Main.java	(date 1655357787966)
@@ -133,6 +133,8 @@
      * 记录游戏是否结束
      */
     private static boolean gameIsOver = false;
+    private static int gameTime=0;
+    private static int winTime=0;
 
     /**
      * 游戏进入主方法
@@ -277,6 +279,7 @@
                     if (kCode == KeyCode.ENTER) {
                         if (testword.letters.size() == 5) {
                             try {
+                                gameTime++;
                                 int status;
                                 if (Word.CheckInList(testword.WordContent.toString())) {
                                     index = 0;
@@ -300,6 +303,7 @@
                                     }
                                     status = testword.getState();
                                     if (status == 0) {
+                                        winTime++;
                                         System.out.println("you win");
                                         Rectangle recB = new Rectangle();
                                         recB.setFill(Color.BLACK);
Index: target/classes/menuScene.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<?import javafx.scene.control.Button?>\r\n<?import javafx.scene.image.Image?>\r\n<?import javafx.scene.image.ImageView?>\r\n<?import javafx.scene.layout.AnchorPane?>\r\n<?import javafx.scene.text.Font?>\r\n<?import javafx.scene.text.Text?>\r\n\r\n<AnchorPane prefHeight=\"800.0\" prefWidth=\"1280.0\" xmlns=\"http://javafx.com/javafx/8.0.171\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"MenuScene\">\r\n   <children>\r\n      <ImageView fitHeight=\"800.0\" fitWidth=\"1280.0\">\r\n         <image>\r\n            <Image url=\"@menuScreen.png\" />\r\n         </image>\r\n      </ImageView>\r\n      <ImageView fx:id=\"helpImg\" fitHeight=\"100.0\" fitWidth=\"100.0\" layoutX=\"1166.0\" layoutY=\"686.0\" onMouseEntered=\"#mouseOnHelpImg\" onMouseExited=\"#mouseLeaveHelpImg\">\r\n         <image>\r\n            <Image url=\"@rule.png\" />\r\n         </image>\r\n      </ImageView>\r\n      <Text fx:id=\"normalMode\" fill=\"WHITE\" layoutX=\"456.0\" layoutY=\"250.0\" strokeType=\"OUTSIDE\" strokeWidth=\"0.0\" text=\"Normal Mode\">\r\n         <font>\r\n            <Font name=\"Lucida Fax Demibold\" size=\"55.0\" />\r\n         </font></Text>\r\n      <Text fx:id=\"advanceMode\" fill=\"WHITE\" layoutX=\"441.0\" layoutY=\"360.0\" strokeType=\"OUTSIDE\" strokeWidth=\"0.0\" text=\"Advance Mode\">\r\n         <font>\r\n            <Font name=\"Lucida Fax Demibold\" size=\"55.0\" />\r\n         </font></Text>\r\n      <Text fx:id=\"AIShow\" fill=\"WHITE\" layoutX=\"536.0\" layoutY=\"470.0\" strokeType=\"OUTSIDE\" strokeWidth=\"0.0\" text=\"AI Show\">\r\n         <font>\r\n            <Font name=\"Lucida Fax Demibold\" size=\"55.0\" />\r\n         </font></Text>\r\n      <Text fx:id=\"quit\" fill=\"WHITE\" layoutX=\"574.0\" layoutY=\"580.0\" strokeType=\"OUTSIDE\" strokeWidth=\"0.0\" text=\"QUIT\">\r\n         <font>\r\n            <Font name=\"Lucida Fax Demibold\" size=\"55.0\" />\r\n         </font>\r\n      </Text>\r\n      <Button layoutX=\"456.0\" layoutY=\"204.0\" mnemonicParsing=\"false\" onMouseClicked=\"#startNormalButton\" onMouseEntered=\"#mouseOnNormalButton\" onMouseExited=\"#mouseLeaveNormalButton\" opacity=\"0.0\" prefHeight=\"48.0\" prefWidth=\"369.0\" text=\"Button\" />\r\n      <Button layoutX=\"441.0\" layoutY=\"318.0\" mnemonicParsing=\"false\" onMouseClicked=\"#startAdvanceButton\" onMouseEntered=\"#mouseOnAdvanceButton\" onMouseExited=\"#mouseLeaveAdvanceButton\" opacity=\"0.0\" prefHeight=\"48.0\" prefWidth=\"397.0\" text=\"Button\" />\r\n      <Button layoutX=\"536.0\" layoutY=\"429.0\" mnemonicParsing=\"false\" onMouseClicked=\"#startAIShowButton\" onMouseEntered=\"#mouseOnAIButton\" onMouseExited=\"#mouseLeaveAIButton\" opacity=\"0.0\" prefHeight=\"48.0\" prefWidth=\"215.0\" text=\"Button\" />\r\n      <Button layoutX=\"574.0\" layoutY=\"532.0\" mnemonicParsing=\"false\" onMouseClicked=\"#quitButton\" onMouseEntered=\"#mouseOnQuitButton\" onMouseExited=\"#mouseLeaveQuitButton\" opacity=\"0.0\" prefHeight=\"55.0\" prefWidth=\"148.0\" text=\"Button\" />\r\n      <Button fx:id=\"helpButton\" layoutX=\"1186.0\" layoutY=\"704.0\" mnemonicParsing=\"false\" onMouseEntered=\"#mouseOnHelpImg\" onMouseExited=\"#mouseLeaveHelpImg\" opacity=\"0.0\" prefHeight=\"65.0\" prefWidth=\"57.0\" text=\"Button\" />\r\n   </children>\r\n</AnchorPane>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/menuScene.fxml b/target/classes/menuScene.fxml
--- a/target/classes/menuScene.fxml	(revision 20ef43f564b0a8a1c3a7a14aeb1b58ee49d29a12)
+++ b/target/classes/menuScene.fxml	(date 1655357787976)
@@ -40,6 +40,6 @@
       <Button layoutX="441.0" layoutY="318.0" mnemonicParsing="false" onMouseClicked="#startAdvanceButton" onMouseEntered="#mouseOnAdvanceButton" onMouseExited="#mouseLeaveAdvanceButton" opacity="0.0" prefHeight="48.0" prefWidth="397.0" text="Button" />
       <Button layoutX="536.0" layoutY="429.0" mnemonicParsing="false" onMouseClicked="#startAIShowButton" onMouseEntered="#mouseOnAIButton" onMouseExited="#mouseLeaveAIButton" opacity="0.0" prefHeight="48.0" prefWidth="215.0" text="Button" />
       <Button layoutX="574.0" layoutY="532.0" mnemonicParsing="false" onMouseClicked="#quitButton" onMouseEntered="#mouseOnQuitButton" onMouseExited="#mouseLeaveQuitButton" opacity="0.0" prefHeight="55.0" prefWidth="148.0" text="Button" />
-      <Button fx:id="helpButton" layoutX="1186.0" layoutY="704.0" mnemonicParsing="false" onMouseEntered="#mouseOnHelpImg" onMouseExited="#mouseLeaveHelpImg" opacity="0.0" prefHeight="65.0" prefWidth="57.0" text="Button" />
+      <Button fx:id="helpButton" layoutX="1186.0" layoutY="704.0" mnemonicParsing="false" onMouseClicked="#toRule" onMouseEntered="#mouseOnHelpImg" onMouseExited="#mouseLeaveHelpImg" opacity="0.0" prefHeight="65.0" prefWidth="57.0" text="Button" />
    </children>
 </AnchorPane>
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"28e52107-b900-4ce7-bff4-f740d1529555\" name=\"Changes\" comment=\"rule.png\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Enum\" />\r\n        <option value=\"FxmlFile\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"test-wang\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n    <option name=\"RESET_MODE\" value=\"MIXED\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"281El5VnHKW1oxjs0dAtV1ibU0u\" />\r\n  <component name=\"ProjectLevelVcsManager\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"last_opened_file_path\": \"C:/Users/RDJ.IRON/Desktop/面向对象/OOPproj/WordleEx/src/main/resources\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\RDJ.IRON\\Desktop\\面向对象\\OOPproj\\WordleEx\\src\\main\\resources\" />\r\n      <recent name=\"D:\\IdeaProjects\\WordleEx\\src\\main\\resources\" />\r\n      <recent name=\"D:\\Season4\\OO_Project\\WordleEx\\src\\Data\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"D:\\Season4\\OO_Project\\WordleEx\\src\\Data\" />\r\n    </key>\r\n    <key name=\"MoveClassesOrPackagesDialog.RECENTS_KEY\">\r\n      <recent name=\"\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"应用程序.Main\">\r\n    <configuration name=\"HelloApplication\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.example.wordleex.HelloApplication\" />\r\n      <module name=\"WordleEx\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.example.wordleex.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\r\n      <module name=\"WordleEx\" />\r\n      <option name=\"VM_PARAMETERS\" value=\"--module-path &quot;D:\\Java\\JavaFX\\javafx-sdk-18\\lib&quot; --add-modules=javafx.base,javafx.controls,javafx.fxml,javafx.graphics,javafx.media,javafx.swing,javafx.web\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Test\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Test\" />\r\n      <module name=\"WordleEx\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"naniTest\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"naniTest\" />\r\n      <module name=\"WordleEx\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <list>\r\n      <item itemvalue=\"应用程序.Main\" />\r\n      <item itemvalue=\"应用程序.HelloApplication\" />\r\n      <item itemvalue=\"应用程序.Test\" />\r\n      <item itemvalue=\"应用程序.naniTest\" />\r\n    </list>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"28e52107-b900-4ce7-bff4-f740d1529555\" name=\"Changes\" comment=\"\" />\r\n      <created>1650375842923</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1650375842923</updated>\r\n      <workItem from=\"1650375843003\" duration=\"1275000\" />\r\n      <workItem from=\"1653198377145\" duration=\"16052000\" />\r\n      <workItem from=\"1653449527897\" duration=\"695000\" />\r\n      <workItem from=\"1653643590526\" duration=\"2473000\" />\r\n      <workItem from=\"1653646119075\" duration=\"2032000\" />\r\n      <workItem from=\"1653650061497\" duration=\"1435000\" />\r\n      <workItem from=\"1653655065606\" duration=\"287000\" />\r\n      <workItem from=\"1653700967604\" duration=\"6596000\" />\r\n      <workItem from=\"1653782154243\" duration=\"10560000\" />\r\n      <workItem from=\"1654502867795\" duration=\"10825000\" />\r\n      <workItem from=\"1654528669522\" duration=\"1184000\" />\r\n      <workItem from=\"1654530024195\" duration=\"729000\" />\r\n      <workItem from=\"1654709314006\" duration=\"4059000\" />\r\n      <workItem from=\"1654901364999\" duration=\"867000\" />\r\n      <workItem from=\"1654902260019\" duration=\"12078000\" />\r\n      <workItem from=\"1654916236638\" duration=\"4025000\" />\r\n      <workItem from=\"1654933943696\" duration=\"7308000\" />\r\n      <workItem from=\"1654949457097\" duration=\"13653000\" />\r\n      <workItem from=\"1654963642747\" duration=\"26000\" />\r\n      <workItem from=\"1654963736948\" duration=\"49000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"merge\">\r\n      <created>1654525263964</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1654525263964</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"make some adjustment\">\r\n      <created>1654713210637</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1654713210637</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"make some adjustment\">\r\n      <created>1654901414811</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1654901414812</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"make some adjustment\">\r\n      <created>1654901994608</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1654901994608</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"make some adjustment\">\r\n      <created>1654903017507</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1654903017507</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"finish some visible data\">\r\n      <created>1654912069036</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1654912069036</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"finish some visible data\">\r\n      <created>1654913865125</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1654913865125</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"finish some visible data\">\r\n      <created>1654935276796</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1654935276796</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"make some UI\">\r\n      <created>1654936817179</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1654936817179</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"make some UI\">\r\n      <created>1654941066954</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1654941066955</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"make some UI\">\r\n      <created>1654941286642</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1654941286642</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"algorithm GUI\">\r\n      <created>1654960134060</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1654960134060</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"algorithm GUI update\">\r\n      <created>1654963363914</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1654963363914</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"algorithm GUI update\">\r\n      <created>1654963655793</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1654963655793</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"wang‘s commmit\">\r\n      <created>1655129093479</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1655129093479</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"wang‘s commmit\">\r\n      <created>1655138662186</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1655138662186</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"wang‘s commmit\">\r\n      <created>1655191391793</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1655191391793</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"wang‘s commmit\">\r\n      <created>1655193743343</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1655193743343</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"Wang's commit\">\r\n      <created>1655303852427</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1655303852428</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00020\" summary=\"Wang's commit\">\r\n      <created>1655305728975</created>\r\n      <option name=\"number\" value=\"00020\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1655305728975</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00021\" summary=\"Wang's commit\">\r\n      <created>1655308565359</created>\r\n      <option name=\"number\" value=\"00021\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1655308565359</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00022\" summary=\"Wang's commit\">\r\n      <created>1655309322533</created>\r\n      <option name=\"number\" value=\"00022\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1655309322533</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00023\" summary=\"Wang's commit\">\r\n      <created>1655309695359</created>\r\n      <option name=\"number\" value=\"00023\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1655309695359</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00024\" summary=\"Wang's commit\">\r\n      <created>1655310152049</created>\r\n      <option name=\"number\" value=\"00024\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1655310152049</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00025\" summary=\"Wang's commit\">\r\n      <created>1655345406186</created>\r\n      <option name=\"number\" value=\"00025\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1655345406186</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00026\" summary=\"Wang's commit\">\r\n      <created>1655345923110</created>\r\n      <option name=\"number\" value=\"00026\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1655345923110</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00027\" summary=\"Wang's commit\">\r\n      <created>1655347370141</created>\r\n      <option name=\"number\" value=\"00027\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00027\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1655347370141</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"28\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"origin/main\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"basic function\" />\r\n    <MESSAGE value=\"merge\" />\r\n    <MESSAGE value=\"make some adjustment\" />\r\n    <MESSAGE value=\"finish some visible data\" />\r\n    <MESSAGE value=\"make some UI\" />\r\n    <MESSAGE value=\"algorithm GUI\" />\r\n    <MESSAGE value=\"algorithm GUI update\" />\r\n    <MESSAGE value=\"wang‘s commmit\" />\r\n    <MESSAGE value=\"Wang's commit\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Wang's commit\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <watches-manager>\r\n      <configuration name=\"Application\">\r\n        <watch expression=\"WordList.WordPrior\" language=\"JAVA\" />\r\n        <watch expression=\"GuessAlgorithm.wsList\" language=\"JAVA\" />\r\n        <watch expression=\"GuessAlgorithm.StateInfoList\" language=\"JAVA\" />\r\n        <watch expression=\"GuessAlgorithm.StateInfoList\" language=\"JAVA\" />\r\n        <watch expression=\"GuessAlgorithm.PossibleWordChance\" language=\"JAVA\" />\r\n        <watch expression=\"GuessAlgorithm.eNow\" language=\"JAVA\" />\r\n      </configuration>\r\n    </watches-manager>\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 20ef43f564b0a8a1c3a7a14aeb1b58ee49d29a12)
+++ b/.idea/workspace.xml	(date 1655357787986)
@@ -4,8 +4,12 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="28e52107-b900-4ce7-bff4-f740d1529555" name="Changes" comment="rule.png">
+    <list default="true" id="28e52107-b900-4ce7-bff4-f740d1529555" name="Changes" comment="Wang's commit">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/Main.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/Main.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/Main.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/menuScene.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/menuScene.fxml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/resources/menuScene.fxml" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/resources/menuScene.fxml" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -47,7 +51,8 @@
   <component name="PropertiesComponent"><![CDATA[{
   "keyToString": {
     "last_opened_file_path": "C:/Users/RDJ.IRON/Desktop/面向对象/OOPproj/WordleEx/src/main/resources",
-    "node.js.selected.package.tslint": "(autodetect)"
+    "node.js.selected.package.tslint": "(autodetect)",
+    "settings.editor.selected.configurable": "preferences.pluginManager"
   }
 }]]></component>
   <component name="RecentsManager">
@@ -63,7 +68,7 @@
       <recent name="" />
     </key>
   </component>
-  <component name="RunManager" selected="应用程序.Main">
+  <component name="RunManager" selected="Application.Main">
     <configuration name="HelloApplication" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
       <option name="MAIN_CLASS_NAME" value="com.example.wordleex.HelloApplication" />
       <module name="WordleEx" />
@@ -100,10 +105,10 @@
       </method>
     </configuration>
     <list>
-      <item itemvalue="应用程序.Main" />
-      <item itemvalue="应用程序.HelloApplication" />
-      <item itemvalue="应用程序.Test" />
-      <item itemvalue="应用程序.naniTest" />
+      <item itemvalue="Application.Main" />
+      <item itemvalue="Application.HelloApplication" />
+      <item itemvalue="Application.Test" />
+      <item itemvalue="Application.naniTest" />
     </list>
   </component>
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
Index: target/classes/resources/menuScene.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<?import javafx.scene.control.Button?>\r\n<?import javafx.scene.image.Image?>\r\n<?import javafx.scene.image.ImageView?>\r\n<?import javafx.scene.layout.AnchorPane?>\r\n<?import javafx.scene.text.Font?>\r\n<?import javafx.scene.text.Text?>\r\n\r\n<AnchorPane prefHeight=\"800.0\" prefWidth=\"1280.0\" xmlns=\"http://javafx.com/javafx/8.0.171\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"MenuScene\">\r\n   <children>\r\n      <ImageView fitHeight=\"800.0\" fitWidth=\"1280.0\">\r\n         <image>\r\n            <Image url=\"@menuScreen.png\" />\r\n         </image>\r\n      </ImageView>\r\n      <ImageView fx:id=\"helpImg\" fitHeight=\"100.0\" fitWidth=\"100.0\" layoutX=\"1166.0\" layoutY=\"686.0\" onMouseEntered=\"#mouseOnHelpImg\" onMouseExited=\"#mouseLeaveHelpImg\">\r\n         <image>\r\n            <Image url=\"@rule.png\" />\r\n         </image>\r\n      </ImageView>\r\n      <Text fx:id=\"normalMode\" fill=\"WHITE\" layoutX=\"456.0\" layoutY=\"250.0\" strokeType=\"OUTSIDE\" strokeWidth=\"0.0\" text=\"Normal Mode\">\r\n         <font>\r\n            <Font name=\"Lucida Fax Demibold\" size=\"55.0\" />\r\n         </font></Text>\r\n      <Text fx:id=\"advanceMode\" fill=\"WHITE\" layoutX=\"441.0\" layoutY=\"360.0\" strokeType=\"OUTSIDE\" strokeWidth=\"0.0\" text=\"Advance Mode\">\r\n         <font>\r\n            <Font name=\"Lucida Fax Demibold\" size=\"55.0\" />\r\n         </font></Text>\r\n      <Text fx:id=\"AIShow\" fill=\"WHITE\" layoutX=\"536.0\" layoutY=\"470.0\" strokeType=\"OUTSIDE\" strokeWidth=\"0.0\" text=\"AI Show\">\r\n         <font>\r\n            <Font name=\"Lucida Fax Demibold\" size=\"55.0\" />\r\n         </font></Text>\r\n      <Text fx:id=\"quit\" fill=\"WHITE\" layoutX=\"574.0\" layoutY=\"580.0\" strokeType=\"OUTSIDE\" strokeWidth=\"0.0\" text=\"QUIT\">\r\n         <font>\r\n            <Font name=\"Lucida Fax Demibold\" size=\"55.0\" />\r\n         </font>\r\n      </Text>\r\n      <Button layoutX=\"456.0\" layoutY=\"204.0\" mnemonicParsing=\"false\" onMouseClicked=\"#startNormalButton\" onMouseEntered=\"#mouseOnNormalButton\" onMouseExited=\"#mouseLeaveNormalButton\" opacity=\"0.0\" prefHeight=\"48.0\" prefWidth=\"369.0\" text=\"Button\" />\r\n      <Button layoutX=\"441.0\" layoutY=\"318.0\" mnemonicParsing=\"false\" onMouseClicked=\"#startAdvanceButton\" onMouseEntered=\"#mouseOnAdvanceButton\" onMouseExited=\"#mouseLeaveAdvanceButton\" opacity=\"0.0\" prefHeight=\"48.0\" prefWidth=\"397.0\" text=\"Button\" />\r\n      <Button layoutX=\"536.0\" layoutY=\"429.0\" mnemonicParsing=\"false\" onMouseClicked=\"#startAIShowButton\" onMouseEntered=\"#mouseOnAIButton\" onMouseExited=\"#mouseLeaveAIButton\" opacity=\"0.0\" prefHeight=\"48.0\" prefWidth=\"215.0\" text=\"Button\" />\r\n      <Button layoutX=\"574.0\" layoutY=\"532.0\" mnemonicParsing=\"false\" onMouseClicked=\"#quitButton\" onMouseEntered=\"#mouseOnQuitButton\" onMouseExited=\"#mouseLeaveQuitButton\" opacity=\"0.0\" prefHeight=\"55.0\" prefWidth=\"148.0\" text=\"Button\" />\r\n      <Button fx:id=\"helpButton\" layoutX=\"1186.0\" layoutY=\"704.0\" mnemonicParsing=\"false\" onMouseEntered=\"#mouseOnHelpImg\" onMouseExited=\"#mouseLeaveHelpImg\" opacity=\"0.0\" prefHeight=\"65.0\" prefWidth=\"57.0\" text=\"Button\" />\r\n   </children>\r\n</AnchorPane>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/resources/menuScene.fxml b/target/classes/resources/menuScene.fxml
--- a/target/classes/resources/menuScene.fxml	(revision 20ef43f564b0a8a1c3a7a14aeb1b58ee49d29a12)
+++ b/target/classes/resources/menuScene.fxml	(date 1655357787998)
@@ -40,6 +40,6 @@
       <Button layoutX="441.0" layoutY="318.0" mnemonicParsing="false" onMouseClicked="#startAdvanceButton" onMouseEntered="#mouseOnAdvanceButton" onMouseExited="#mouseLeaveAdvanceButton" opacity="0.0" prefHeight="48.0" prefWidth="397.0" text="Button" />
       <Button layoutX="536.0" layoutY="429.0" mnemonicParsing="false" onMouseClicked="#startAIShowButton" onMouseEntered="#mouseOnAIButton" onMouseExited="#mouseLeaveAIButton" opacity="0.0" prefHeight="48.0" prefWidth="215.0" text="Button" />
       <Button layoutX="574.0" layoutY="532.0" mnemonicParsing="false" onMouseClicked="#quitButton" onMouseEntered="#mouseOnQuitButton" onMouseExited="#mouseLeaveQuitButton" opacity="0.0" prefHeight="55.0" prefWidth="148.0" text="Button" />
-      <Button fx:id="helpButton" layoutX="1186.0" layoutY="704.0" mnemonicParsing="false" onMouseEntered="#mouseOnHelpImg" onMouseExited="#mouseLeaveHelpImg" opacity="0.0" prefHeight="65.0" prefWidth="57.0" text="Button" />
+      <Button fx:id="helpButton" layoutX="1186.0" layoutY="704.0" mnemonicParsing="false" onMouseClicked="#toRule" onMouseEntered="#mouseOnHelpImg" onMouseExited="#mouseLeaveHelpImg" opacity="0.0" prefHeight="65.0" prefWidth="57.0" text="Button" />
    </children>
 </AnchorPane>
